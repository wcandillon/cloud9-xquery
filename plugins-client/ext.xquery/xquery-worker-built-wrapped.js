// Wrapped in JavaScript, to avoid cross-origin restrictions, created using wrap-in-js.sh
define(function() {
return '/* ***** BEGIN LICENSE BLOCK *****\n' +
' * Distributed under the BSD license:\n' +
' *\n' +
' * Copyright (c) 2010, Ajax.org B.V.\n' +
' * All rights reserved.\n' +
' * \n' +
' * Redistribution and use in source and binary forms, with or without\n' +
' * modification, are permitted provided that the following conditions are met:\n' +
' *     * Redistributions of source code must retain the above copyright\n' +
' *       notice, this list of conditions and the following disclaimer.\n' +
' *     * Redistributions in binary form must reproduce the above copyright\n' +
' *       notice, this list of conditions and the following disclaimer in the\n' +
' *       documentation and/or other materials provided with the distribution.\n' +
' *     * Neither the name of Ajax.org B.V. nor the\n' +
' *       names of its contributors may be used to endorse or promote products\n' +
' *       derived from this software without specific prior written permission.\n' +
' * \n' +
' * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\n' +
' * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n' +
' * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n' +
' * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n' +
' * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n' +
' * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n' +
' * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n' +
' * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n' +
' * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n' +
' * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n' +
' *\n' +
' * ***** END LICENSE BLOCK ***** */\n' +
'\n' +
'/**\n' +
' * Cloud9 Language Foundation\n' +
' *\n' +
' * @copyright 2011, Ajax.org B.V.\n' +
' * @license GPLv3 <http://www.gnu.org/licenses/gpl.txt>\n' +
' */\n' +
'\n' +
'// This file was generated on Sat Feb 16, 2013 21:06 (UTC+01) by REx v5.23 which is Copyright (c) 1979-2013 by Gunther Rademacher <grd@gmx.net>\n' +
'// REx command line: XQueryParser.ebnf -ll 2 -backtrack -tree -javascript -a xqlint\n' +
'\n' +
'/* ***** BEGIN LICENSE BLOCK *****\n' +
'                                                             * Distributed under the BSD license:\n' +
'                                                             *\n' +
'                                                             * Copyright (c) 2010, Ajax.org B.V.\n' +
'                                                             * All rights reserved.\n' +
'                                                             *\n' +
'                                                             * Redistribution and use in source and binary forms, with or without\n' +
'                                                             * modification, are permitted provided that the following conditions are met:\n' +
'                                                             *     * Redistributions of source code must retain the above copyright\n' +
'                                                             *       notice, this list of conditions and the following disclaimer.\n' +
'                                                             *     * Redistributions in binary form must reproduce the above copyright\n' +
'                                                             *       notice, this list of conditions and the following disclaimer in the\n' +
'                                                             *       documentation and/or other materials provided with the distribution.\n' +
'                                                             *     * Neither the name of Ajax.org B.V. nor the\n' +
'                                                             *       names of its contributors may be used to endorse or promote products\n' +
'                                                             *       derived from this software without specific prior written permission.\n' +
'                                                             *\n' +
'                                                             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\n' +
'                                                             * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n' +
'                                                             * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n' +
'                                                             * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n' +
'                                                             * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n' +
'                                                             * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n' +
'                                                             * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n' +
'                                                             * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n' +
'                                                             * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n' +
'                                                             * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n' +
'                                                             *\n' +
'                                                             * ***** END LICENSE BLOCK ***** */\n' +
'\n' +
'// This file was generated on Sat Feb 16, 2013 16:03 (UTC+01) by REx v5.23 which is Copyright (c) 1979-2013 by Gunther Rademacher <grd@gmx.net>\n' +
'// REx command line: CommentParser.ebnf -tree -javascript -a xqlint\n' +
'\n' +
'/**\n' +
' * XQuery linter worker.\n' +
' *\n' +
' * @copyright 2011, Ajax.org B.V.\n' +
' * @license GPLv3 <http://www.gnu.org/licenses/gpl.txt>\n' +
' */\n' +
'\n' +
'define("lib/utils.js",["require","exports","module"],function(e,t,n){var r=t.Utils={convertPosition:function(e,t,n){var r=e.substring(0,t),i=e.substring(0,n),s=r.split("\\n").length,o=t-r.lastIndexOf("\\n"),u=i.split("\\n").length,a=n-i.lastIndexOf("\\n");return{sl:s-1,sc:o-1,el:u-1,ec:a-1}},findNode:function(e,t){var n=e.pos;if(r.inRange(n,t)===!0){for(var i in e.children){var s=e.children[i],o=r.findNode(s,t);if(o!==null)return o}return e}return null},inRange:function(e,t,n){if(e&&e.sl<=t.line&&t.line<=e.el){if(e.sl<t.line&&t.line<e.el)return!0;if(e.sl==t.line&&t.line<e.el)return e.sc<=t.col;if(e.sl==t.line&&e.el===t.line)return e.sc<=t.col&&t.col<=e.ec+(n?1:0);if(e.sl<t.line&&e.el===t.line)return t.col<=e.ec+(n?1:0)}},removeParentPtr:function(e){e.getParent!==undefined&&delete e.getParent;for(var t in e.children){var n=e.children[t];r.removeParentPtr(n)}}}}),define("xquery_completion.js",["require","exports","module","ext/codecomplete/complete_util","lib/utils.js"],function(e,t,n){function h(e,t,n){var i=r.retrievePreceedingIdentifier(e,t.column,s),o=r.findCompletions(i,Object.keys(n));return o.map(function(e){var t=n[e];return{doc:t.doc,docUrl:"http://www.zorba-xquery.com/html/xqdoc/"+e.substring(7).replace(/\\//g,"_")+".html",icon:"package",isFunction:!1,name:e,priority:4,replaceText:e,identifierRegex:s}})}function p(e,t,n){var i=r.retrievePreceedingIdentifier(e,t.column,s),o=r.findCompletions(i,Object.keys(n));return o.map(function(e){var t=n[e];return{doc:t.doc,icon:"package",isFunction:!1,name:e,priority:4,replaceText:e,identifierRegex:s}})}function d(e,t,n){var i=r.retrievePreceedingIdentifier(e,t.column,s),o=r.findCompletions(i,n);return o.map(function(e){return{icon:"package",isFunction:!1,name:e,priority:4,replaceText:e,identifierRegex:s}})}function v(e,t,n,s){var o=i.findNode(s.sctx,{line:t.row,col:t.column-2});if(o!==null){var u=o.getVarDecls(),a=Object.keys(u),f=r.findCompletions(e,a),h=function(e){return{doc:"<p>"+c[u[e].kind]+".</p>",icon:"property",isFunction:!1,name:"$"+e,priority:4,replaceText:"$"+e,identifierRegex:l}};return f.map(h)}}function m(e,t,n,i,s){var o=s.sctx,u=o.namespaces[e],a=Object.keys(i[u].functions);for(var l in a)a[l]=e+":"+a[l];var c=r.findCompletions(e+":"+t,a);return c.map(function(e){var t=e.substring(e.indexOf(":")+1),n=i[u].functions[t][0],r="("+n.params.join(", ")+")";return{doc:n.doc,docUrl:n.docUrl,icon:"method",isFunction:!0,name:e+r,priority:4,replaceText:e+r,identifierRegex:f}})}function g(e,t,n,i){var s=Object.keys(i.sctx.declaredNS),o=r.findCompletions(e,s),u=o.map(function(e){var t=i.sctx.declaredNS[e].ns;return{doc:n[t]?n[t].doc:undefined,docUrl:"http://www.zorba-xquery.com/html/view-module?ns="+encodeURIComponent(t),icon:"property",isFunction:!1,name:e+":"+" ("+t+")",priority:5,replaceText:e+":",identifierRegex:f}}),a=i.sctx,l=a.defaultFnNs,o=r.findCompletions(e,Object.keys(n[l].functions));return u=u.concat(o.map(function(e){var t=n[l].functions[e][0],r="("+t.params.join(", ")+")";return{doc:t.doc,docUrl:t.docUrl,icon:"method",isFunction:!0,name:e+r,priority:4,replaceText:e+r,identifierRegex:f}})),u}function y(e,t,n,r){var i=[],s=e.substring(0,e.indexOf(":")),o=e.substring(e.indexOf(":")+1);return s===""?g(e,t,n,r):m(s,o,t,n,r)}function b(e,t,n,i){var s=[],o=r.retrievePreceedingIdentifier(e,t.column,f),u=e.substring(0,t.column-(o.length===0?0:o.length)),a=u[u.length-1]==="$";return console.log(u),console.log("ID "+o),console.log(a),a?s=v(o,t,n,i):s=y(o,t,n,i),s}var r=e("ext/codecomplete/complete_util"),i=e("lib/utils.js").Utils,s=/[a-zA-Z_0-9\\/\\.:\\-#]/,o="-._A-Za-z0-9:·À-ÖØ-öø-˿̀-ͽͿ-῿‌‍‿⁀⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�",u="["+o+"]",a="["+o+"\\\\$]",f=new RegExp(u),l=new RegExp(a),c={LetBinding:"Let binding",Param:"Function parameter",QuantifiedExpr:"Quantified expression binding",VarDeclStatement:"Local variable",ForBinding:"For binding",TumblingWindowClause:"Tumbling window binding",WindowVars:"Window variable",SlidingWindowClause:"Sliding window binding",PositionalVar:"Positional variable",CurrentItem:"Current item",PreviousItem:"Previous item",NextItem:"Next item",CountClause:"Count binding",GroupingVariable:"Grouping variable",VarDecl:"Module variable"};n.exports.completeURI=h,n.exports.completeSchemaURI=p,n.exports.completePath=d,n.exports.completeExpr=b,n.exports.completeVariable=v,n.exports.completeFunction=y}),define("lib/XQueryParser.js",["require","exports","module"],function(e,t,n){var r=t.XQueryParser=function i(e,t){function r(e,t){kl=t,Rl=e,Ul=e.length,s(0,0,0)}function s(e,t,n){dl=t,vl=t,ml=e,gl=t,yl=n,bl=0,Wl=n,xl=-1,Ll={},kl.reset(Rl)}function o(){kl.startNonterminal("Module",vl);switch(ml){case 274:Fl(199);break;default:pl=ml}(pl==64274||pl==134930)&&u(),jl(268);switch(ml){case 182:Fl(194);break;default:pl=ml}switch(pl){case 94390:Hl(),a();break;default:Hl(),ja()}kl.endNonterminal("Module",vl)}function u(){kl.startNonterminal("VersionDecl",vl),_l(274),jl(116);switch(ml){case 125:_l(125),jl(17),_l(11);break;default:_l(263),jl(17),_l(11),jl(109),ml==125&&(_l(125),jl(17),_l(11))}jl(28),Hl(),c(),kl.endNonterminal("VersionDecl",vl)}function a(){kl.startNonterminal("LibraryModule",vl),f(),jl(138),Hl(),l(),kl.endNonterminal("LibraryModule",vl)}function f(){kl.startNonterminal("ModuleDecl",vl),_l(182),jl(61),_l(184),jl(247),Hl(),Ha(),jl(29),_l(60),jl(15),_l(7),jl(28),Hl(),c(),kl.endNonterminal("ModuleDecl",vl)}function l(){kl.startNonterminal("Prolog",vl);for(;;){jl(268);switch(ml){case 108:Fl(213);break;case 153:Fl(201);break;default:pl=ml}if(pl!=42604&&pl!=43628&&pl!=50284&&pl!=53356&&pl!=54380&&pl!=55916&&pl!=72300&&pl!=93337&&pl!=94316&&pl!=104044&&pl!=113772&&pl!=115353)break;switch(ml){case 108:Fl(178);break;default:pl=ml}if(pl==55916){pl=Ol(0,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{_(),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(0,vl,pl)}}switch(pl){case-1:Hl(),M();break;case 94316:Hl(),O();break;case 153:Hl(),C();break;case 72300:Hl(),D();break;default:Hl(),h()}jl(28),Hl(),c()}for(;;){jl(268);switch(ml){case 108:Fl(210);break;default:pl=ml}if(pl!=16492&&pl!=48748&&pl!=51820&&pl!=74348&&pl!=79468&&pl!=82540&&pl!=101996&&pl!=131692&&pl!=134252)break;switch(ml){case 108:Fl(175);break;default:pl=ml}switch(pl){case 51820:Hl(),R();break;case 101996:Hl(),Q();break;default:Hl(),P()}jl(28),Hl(),c()}kl.endNonterminal("Prolog",vl)}function c(){kl.startNonterminal("Separator",vl),_l(53),kl.endNonterminal("Separator",vl)}function h(){kl.startNonterminal("Setter",vl);switch(ml){case 108:Fl(172);break;default:pl=ml}if(pl==55916){pl=Ol(1,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{v(),pl=-2}catch(a){try{dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),w(),pl=-6}catch(f){pl=-9}}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(1,vl,pl)}}switch(pl){case 43628:p();break;case-2:d();break;case 42604:m();break;case 50284:g();break;case 104044:y();break;case-6:b();break;case 113772:No();break;case 53356:E();break;default:T()}kl.endNonterminal("Setter",vl)}function p(){kl.startNonterminal("BoundarySpaceDecl",vl),_l(108),jl(33),_l(85),jl(133);switch(ml){case 214:_l(214);break;default:_l(241)}kl.endNonterminal("BoundarySpaceDecl",vl)}function d(){kl.startNonterminal("DefaultCollationDecl",vl),_l(108),jl(46),_l(109),jl(38),_l(94),jl(15),_l(7),kl.endNonterminal("DefaultCollationDecl",vl)}function v(){Dl(108),jl(46),Dl(109),jl(38),Dl(94),jl(15),Dl(7)}function m(){kl.startNonterminal("BaseURIDecl",vl),_l(108),jl(32),_l(83),jl(15),_l(7),kl.endNonterminal("BaseURIDecl",vl)}function g(){kl.startNonterminal("ConstructionDecl",vl),_l(108),jl(41),_l(98),jl(133);switch(ml){case 241:_l(241);break;default:_l(214)}kl.endNonterminal("ConstructionDecl",vl)}function y(){kl.startNonterminal("OrderingModeDecl",vl),_l(108),jl(68),_l(203),jl(131);switch(ml){case 202:_l(202);break;default:_l(256)}kl.endNonterminal("OrderingModeDecl",vl)}function b(){kl.startNonterminal("EmptyOrderDecl",vl),_l(108),jl(46),_l(109),jl(67),_l(201),jl(49),_l(123),jl(121);switch(ml){case 147:_l(147);break;default:_l(173)}kl.endNonterminal("EmptyOrderDecl",vl)}function w(){Dl(108),jl(46),Dl(109),jl(67),Dl(201),jl(49),Dl(123),jl(121);switch(ml){case 147:Dl(147);break;default:Dl(173)}}function E(){kl.startNonterminal("CopyNamespacesDecl",vl),_l(108),jl(44),_l(104),jl(128),Hl(),S(),jl(25),_l(41),jl(123),Hl(),x(),kl.endNonterminal("CopyNamespacesDecl",vl)}function S(){kl.startNonterminal("PreserveMode",vl);switch(ml){case 214:_l(214);break;default:_l(190)}kl.endNonterminal("PreserveMode",vl)}function x(){kl.startNonterminal("InheritMode",vl);switch(ml){case 157:_l(157);break;default:_l(189)}kl.endNonterminal("InheritMode",vl)}function T(){kl.startNonterminal("DecimalFormatDecl",vl),_l(108),jl(114);switch(ml){case 106:_l(106),jl(253),Hl(),Ma();break;default:_l(109),jl(45),_l(106)}for(;;){jl(180);if(ml==53)break;Hl(),N(),jl(29),_l(60),jl(17),_l(11)}kl.endNonterminal("DecimalFormatDecl",vl)}function N(){kl.startNonterminal("DFPropertyName",vl);switch(ml){case 107:_l(107);break;case 149:_l(149);break;case 156:_l(156);break;case 179:_l(179);break;case 67:_l(67);break;case 209:_l(209);break;case 208:_l(208);break;case 275:_l(275);break;case 116:_l(116);break;default:_l(207)}kl.endNonterminal("DFPropertyName",vl)}function C(){kl.startNonterminal("Import",vl);switch(ml){case 153:Fl(126);break;default:pl=ml}switch(pl){case 115353:k();break;default:A()}kl.endNonterminal("Import",vl)}function k(){kl.startNonterminal("SchemaImport",vl),_l(153),jl(73),_l(225),jl(137),ml!=7&&(Hl(),L()),jl(15),_l(7),jl(108);if(ml==81){_l(81),jl(15),_l(7);for(;;){jl(103);if(ml!=41)break;_l(41),jl(15),_l(7)}}kl.endNonterminal("SchemaImport",vl)}function L(){kl.startNonterminal("SchemaPrefix",vl);switch(ml){case 184:_l(184),jl(247),Hl(),Ha(),jl(29),_l(60);break;default:_l(109),jl(47),_l(121),jl(61),_l(184)}kl.endNonterminal("SchemaPrefix",vl)}function A(){kl.startNonterminal("ModuleImport",vl),_l(153),jl(60),_l(182),jl(90),ml==184&&(_l(184),jl(247),Hl(),Ha(),jl(29),_l(60)),jl(15),_l(7),jl(108);if(ml==81){_l(81),jl(15),_l(7);for(;;){jl(103);if(ml!=41)break;_l(41),jl(15),_l(7)}}kl.endNonterminal("ModuleImport",vl)}function O(){kl.startNonterminal("NamespaceDecl",vl),_l(108),jl(61),_l(184),jl(247),Hl(),Ha(),jl(29),_l(60),jl(15),_l(7),kl.endNonterminal("NamespaceDecl",vl)}function M(){kl.startNonterminal("DefaultNamespaceDecl",vl),_l(108),jl(46),_l(109),jl(115);switch(ml){case 121:_l(121);break;default:_l(145)}jl(61),_l(184),jl(15),_l(7),kl.endNonterminal("DefaultNamespaceDecl",vl)}function _(){Dl(108),jl(46),Dl(109),jl(115);switch(ml){case 121:Dl(121);break;default:Dl(145)}jl(61),Dl(184),jl(15),Dl(7)}function D(){kl.startNonterminal("FTOptionDecl",vl),_l(108),jl(52),_l(141),jl(81),Hl(),Pu(),kl.endNonterminal("FTOptionDecl",vl)}function P(){kl.startNonterminal("AnnotatedDecl",vl),_l(108);for(;;){jl(170);if(ml!=32&&ml!=257)break;switch(ml){case 257:Hl(),H();break;default:Hl(),B()}}switch(ml){case 262:Hl(),F();break;case 145:Hl(),hl();break;case 95:Hl(),la();break;case 155:Hl(),ba();break;default:Hl(),wa()}kl.endNonterminal("AnnotatedDecl",vl)}function H(){kl.startNonterminal("CompatibilityAnnotation",vl),_l(257),kl.endNonterminal("CompatibilityAnnotation",vl)}function B(){kl.startNonterminal("Annotation",vl),_l(32),jl(253),Hl(),Ma(),jl(171);if(ml==34){_l(34),jl(154),Hl(),ii();for(;;){jl(101);if(ml!=41)break;_l(41),jl(154),Hl(),ii()}_l(37)}kl.endNonterminal("Annotation",vl)}function j(){Dl(32),jl(253),_a(),jl(171);if(ml==34){Dl(34),jl(154),si();for(;;){jl(101);if(ml!=41)break;Dl(41),jl(154),si()}Dl(37)}}function F(){kl.startNonterminal("VarDecl",vl),_l(262),jl(21),_l(31),jl(253),Hl(),li(),jl(147),ml==79&&(Hl(),hs()),jl(106);switch(ml){case 52:_l(52),jl(267),Hl(),I();break;default:_l(133),jl(104),ml==52&&(_l(52),jl(267),Hl(),q())}kl.endNonterminal("VarDecl",vl)}function I(){kl.startNonterminal("VarValue",vl),Cf(),kl.endNonterminal("VarValue",vl)}function q(){kl.startNonterminal("VarDefaultValue",vl),Cf(),kl.endNonterminal("VarDefaultValue",vl)}function R(){kl.startNonterminal("ContextItemDecl",vl),_l(108),jl(43),_l(101),jl(55),_l(165),jl(147),ml==79&&(_l(79),jl(259),Hl(),ys()),jl(106);switch(ml){case 52:_l(52),jl(267),Hl(),I();break;default:_l(133),jl(104),ml==52&&(_l(52),jl(267),Hl(),q())}kl.endNonterminal("ContextItemDecl",vl)}function U(){kl.startNonterminal("ParamList",vl),W();for(;;){jl(101);if(ml!=41)break;_l(41),jl(21),Hl(),W()}kl.endNonterminal("ParamList",vl)}function z(){X();for(;;){jl(101);if(ml!=41)break;Dl(41),jl(21),X()}}function W(){kl.startNonterminal("Param",vl),_l(31),jl(253),Hl(),Ma(),jl(143),ml==79&&(Hl(),hs()),kl.endNonterminal("Param",vl)}function X(){Dl(31),jl(253),_a(),jl(143),ml==79&&ps()}function V(){kl.startNonterminal("FunctionBody",vl),J(),kl.endNonterminal("FunctionBody",vl)}function $(){K()}function J(){kl.startNonterminal("EnclosedExpr",vl),_l(276),jl(267),Hl(),G(),_l(282),kl.endNonterminal("EnclosedExpr",vl)}function K(){Dl(276),jl(267),Y(),Dl(282)}function Q(){kl.startNonterminal("OptionDecl",vl),_l(108),jl(66),_l(199),jl(253),Hl(),Ma(),jl(17),_l(11),kl.endNonterminal("OptionDecl",vl)}function G(){kl.startNonterminal("Expr",vl),Cf();for(;;){if(ml!=41)break;_l(41),jl(267),Hl(),Cf()}kl.endNonterminal("Expr",vl)}function Y(){kf();for(;;){if(ml!=41)break;Dl(41),jl(267),kf()}}function Z(){kl.startNonterminal("FLWORExpr",vl),tt();for(;;){jl(173);if(ml==220)break;Hl(),rt()}Hl(),rn(),kl.endNonterminal("FLWORExpr",vl)}function et(){nt();for(;;){jl(173);if(ml==220)break;it()}sn()}function tt(){kl.startNonterminal("InitialClause",vl);switch(ml){case 137:Fl(141);break;default:pl=ml}switch(pl){case 16009:st();break;case 174:vt();break;default:bt()}kl.endNonterminal("InitialClause",vl)}function nt(){switch(ml){case 137:Fl(141);break;default:pl=ml}switch(pl){case 16009:ot();break;case 174:mt();break;default:wt()}}function rt(){kl.startNonterminal("IntermediateClause",vl);switch(ml){case 137:case 174:tt();break;case 266:It();break;case 148:Rt();break;case 105:jt();break;default:Kt()}kl.endNonterminal("IntermediateClause",vl)}function it(){switch(ml){case 137:case 174:nt();break;case 266:qt();break;case 148:Ut();break;case 105:Ft();break;default:Qt()}}function st(){kl.startNonterminal("ForClause",vl),_l(137),jl(21),Hl(),ut();for(;;){if(ml!=41)break;_l(41),jl(21),Hl(),ut()}kl.endNonterminal("ForClause",vl)}function ot(){Dl(137),jl(21),at();for(;;){if(ml!=41)break;Dl(41),jl(21),at()}}function ut(){kl.startNonterminal("ForBinding",vl),_l(31),jl(253),Hl(),li(),jl(164),ml==79&&(Hl(),hs()),jl(158),ml==72&&(Hl(),ft()),jl(150),ml==81&&(Hl(),ct()),jl(122),ml==228&&(Hl(),pt()),jl(53),_l(154),jl(267),Hl(),Cf(),kl.endNonterminal("ForBinding",vl)}function at(){Dl(31),jl(253),ci(),jl(164),ml==79&&ps(),jl(158),ml==72&&lt(),jl(150),ml==81&&ht(),jl(122),ml==228&&dt(),jl(53),Dl(154),jl(267),kf()}function ft(){kl.startNonterminal("AllowingEmpty",vl),_l(72),jl(49),_l(123),kl.endNonterminal("AllowingEmpty",vl)}function lt(){Dl(72),jl(49),Dl(123)}function ct(){kl.startNonterminal("PositionalVar",vl),_l(81),jl(21),_l(31),jl(253),Hl(),li(),kl.endNonterminal("PositionalVar",vl)}function ht(){Dl(81),jl(21),Dl(31),jl(253),ci()}function pt(){kl.startNonterminal("FTScoreVar",vl),_l(228),jl(21),_l(31),jl(253),Hl(),li(),kl.endNonterminal("FTScoreVar",vl)}function dt(){Dl(228),jl(21),Dl(31),jl(253),ci()}function vt(){kl.startNonterminal("LetClause",vl),_l(174),jl(96),Hl(),gt();for(;;){if(ml!=41)break;_l(41),jl(96),Hl(),gt()}kl.endNonterminal("LetClause",vl)}function mt(){Dl(174),jl(96),yt();for(;;){if(ml!=41)break;Dl(41),jl(96),yt()}}function gt(){kl.startNonterminal("LetBinding",vl);switch(ml){case 31:_l(31),jl(253),Hl(),li(),jl(105),ml==79&&(Hl(),hs());break;default:pt()}jl(27),_l(52),jl(267),Hl(),Cf(),kl.endNonterminal("LetBinding",vl)}function yt(){switch(ml){case 31:Dl(31),jl(253),ci(),jl(105),ml==79&&ps();break;default:dt()}jl(27),Dl(52),jl(267),kf()}function bt(){kl.startNonterminal("WindowClause",vl),_l(137),jl(135);switch(ml){case 251:Hl(),Et();break;default:Hl(),xt()}kl.endNonterminal("WindowClause",vl)}function wt(){Dl(137),jl(135);switch(ml){case 251:St();break;default:Tt()}}function Et(){kl.startNonterminal("TumblingWindowClause",vl),_l(251),jl(85),_l(269),jl(21),_l(31),jl(253),Hl(),li(),jl(110),ml==79&&(Hl(),hs()),jl(53),_l(154),jl(267),Hl(),Cf(),Hl(),Nt();if(ml==126||ml==198)Hl(),kt();kl.endNonterminal("TumblingWindowClause",vl)}function St(){Dl(251),jl(85),Dl(269),jl(21),Dl(31),jl(253),ci(),jl(110),ml==79&&ps(),jl(53),Dl(154),jl(267),kf(),Ct(),(ml==126||ml==198)&&Lt()}function xt(){kl.startNonterminal("SlidingWindowClause",vl),_l(234),jl(85),_l(269),jl(21),_l(31),jl(253),Hl(),li(),jl(110),ml==79&&(Hl(),hs()),jl(53),_l(154),jl(267),Hl(),Cf(),Hl(),Nt(),Hl(),kt(),kl.endNonterminal("SlidingWindowClause",vl)}function Tt(){Dl(234),jl(85),Dl(269),jl(21),Dl(31),jl(253),ci(),jl(110),ml==79&&ps(),jl(53),Dl(154),jl(267),kf(),Ct(),Lt()}function Nt(){kl.startNonterminal("WindowStartCondition",vl),_l(237),jl(163),Hl(),At(),jl(83),_l(265),jl(267),Hl(),Cf(),kl.endNonterminal("WindowStartCondition",vl)}function Ct(){Dl(237),jl(163),Ot(),jl(83),Dl(265),jl(267),kf()}function kt(){kl.startNonterminal("WindowEndCondition",vl),ml==198&&_l(198),jl(50),_l(126),jl(163),Hl(),At(),jl(83),_l(265),jl(267),Hl(),Cf(),kl.endNonterminal("WindowEndCondition",vl)}function Lt(){ml==198&&Dl(198),jl(50),Dl(126),jl(163),Ot(),jl(83),Dl(265),jl(267),kf()}function At(){kl.startNonterminal("WindowVars",vl),ml==31&&(_l(31),jl(253),Hl(),Mt()),jl(159),ml==81&&(Hl(),ct()),jl(153),ml==215&&(_l(215),jl(21),_l(31),jl(253),Hl(),Dt()),jl(127),ml==187&&(_l(187),jl(21),_l(31),jl(253),Hl(),Ht()),kl.endNonterminal("WindowVars",vl)}function Ot(){ml==31&&(Dl(31),jl(253),_t()),jl(159),ml==81&&ht(),jl(153),ml==215&&(Dl(215),jl(21),Dl(31),jl(253),Pt()),jl(127),ml==187&&(Dl(187),jl(21),Dl(31),jl(253),Bt())}function Mt(){kl.startNonterminal("CurrentItem",vl),Ma(),kl.endNonterminal("CurrentItem",vl)}function _t(){_a()}function Dt(){kl.startNonterminal("PreviousItem",vl),Ma(),kl.endNonterminal("PreviousItem",vl)}function Pt(){_a()}function Ht(){kl.startNonterminal("NextItem",vl),Ma(),kl.endNonterminal("NextItem",vl)}function Bt(){_a()}function jt(){kl.startNonterminal("CountClause",vl),_l(105),jl(21),_l(31),jl(253),Hl(),li(),kl.endNonterminal("CountClause",vl)}function Ft(){Dl(105),jl(21),Dl(31),jl(253),ci()}function It(){kl.startNonterminal("WhereClause",vl),_l(266),jl(267),Hl(),Cf(),kl.endNonterminal("WhereClause",vl)}function qt(){Dl(266),jl(267),kf()}function Rt(){kl.startNonterminal("GroupByClause",vl),_l(148),jl(34),_l(87),jl(21),Hl(),zt(),kl.endNonterminal("GroupByClause",vl)}function Ut(){Dl(148),jl(34),Dl(87),jl(21),Wt()}function zt(){kl.startNonterminal("GroupingSpecList",vl),Xt();for(;;){jl(176);if(ml!=41)break;_l(41),jl(21),Hl(),Xt()}kl.endNonterminal("GroupingSpecList",vl)}function Wt(){Vt();for(;;){jl(176);if(ml!=41)break;Dl(41),jl(21),Vt()}}function Xt(){kl.startNonterminal("GroupingSpec",vl),$t(),jl(182);if(ml==52||ml==79)ml==79&&(Hl(),hs()),jl(27),_l(52),jl(267),Hl(),Cf();ml==94&&(_l(94),jl(15),_l(7)),kl.endNonterminal("GroupingSpec",vl)}function Vt(){Jt(),jl(182);if(ml==52||ml==79)ml==79&&ps(),jl(27),Dl(52),jl(267),kf();ml==94&&(Dl(94),jl(15),Dl(7))}function $t(){kl.startNonterminal("GroupingVariable",vl),_l(31),jl(253),Hl(),li(),kl.endNonterminal("GroupingVariable",vl)}function Jt(){Dl(31),jl(253),ci()}function Kt(){kl.startNonterminal("OrderByClause",vl);switch(ml){case 201:_l(201),jl(34),_l(87);break;default:_l(236),jl(67),_l(201),jl(34),_l(87)}jl(267),Hl(),Gt(),kl.endNonterminal("OrderByClause",vl)}function Qt(){switch(ml){case 201:Dl(201),jl(34),Dl(87);break;default:Dl(236),jl(67),Dl(201),jl(34),Dl(87)}jl(267),Yt()}function Gt(){kl.startNonterminal("OrderSpecList",vl),Zt();for(;;){jl(176);if(ml!=41)break;_l(41),jl(267),Hl(),Zt()}kl.endNonterminal("OrderSpecList",vl)}function Yt(){en();for(;;){jl(176);if(ml!=41)break;Dl(41),jl(267),en()}}function Zt(){kl.startNonterminal("OrderSpec",vl),Cf(),Hl(),tn(),kl.endNonterminal("OrderSpec",vl)}function en(){kf(),nn()}function tn(){kl.startNonterminal("OrderModifier",vl);if(ml==80||ml==113)switch(ml){case 80:_l(80);break;default:_l(113)}jl(179);if(ml==123){_l(123),jl(121);switch(ml){case 147:_l(147);break;default:_l(173)}}jl(177),ml==94&&(_l(94),jl(15),_l(7)),kl.endNonterminal("OrderModifier",vl)}function nn(){if(ml==80||ml==113)switch(ml){case 80:Dl(80);break;default:Dl(113)}jl(179);if(ml==123){Dl(123),jl(121);switch(ml){case 147:Dl(147);break;default:Dl(173)}}jl(177),ml==94&&(Dl(94),jl(15),Dl(7))}function rn(){kl.startNonterminal("ReturnClause",vl),_l(220),jl(267),Hl(),Cf(),kl.endNonterminal("ReturnClause",vl)}function sn(){Dl(220),jl(267),kf()}function on(){kl.startNonterminal("QuantifiedExpr",vl);switch(ml){case 235:_l(235);break;default:_l(129)}jl(21),_l(31),jl(253),Hl(),li(),jl(110),ml==79&&(Hl(),hs()),jl(53),_l(154),jl(267),Hl(),Cf();for(;;){if(ml!=41)break;_l(41),jl(21),_l(31),jl(253),Hl(),li(),jl(110),ml==79&&(Hl(),hs()),jl(53),_l(154),jl(267),Hl(),Cf()}_l(224),jl(267),Hl(),Cf(),kl.endNonterminal("QuantifiedExpr",vl)}function un(){switch(ml){case 235:Dl(235);break;default:Dl(129)}jl(21),Dl(31),jl(253),ci(),jl(110),ml==79&&ps(),jl(53),Dl(154),jl(267),kf();for(;;){if(ml!=41)break;Dl(41),jl(21),Dl(31),jl(253),ci(),jl(110),ml==79&&ps(),jl(53),Dl(154),jl(267),kf()}Dl(224),jl(267),kf()}function an(){kl.startNonterminal("SwitchExpr",vl),_l(243),jl(22),_l(34),jl(267),Hl(),G(),_l(37);for(;;){jl(35),Hl(),ln();if(ml!=88)break}_l(109),jl(70),_l(220),jl(267),Hl(),Cf(),kl.endNonterminal("SwitchExpr",vl)}function fn(){Dl(243),jl(22),Dl(34),jl(267),Y(),Dl(37);for(;;){jl(35),cn();if(ml!=88)break}Dl(109),jl(70),Dl(220),jl(267),kf()}function ln(){kl.startNonterminal("SwitchCaseClause",vl);for(;;){_l(88),jl(267),Hl(),hn();if(ml!=88)break}_l(220),jl(267),Hl(),Cf(),kl.endNonterminal("SwitchCaseClause",vl)}function cn(){for(;;){Dl(88),jl(267),pn();if(ml!=88)break}Dl(220),jl(267),kf()}function hn(){kl.startNonterminal("SwitchCaseOperand",vl),Cf(),kl.endNonterminal("SwitchCaseOperand",vl)}function pn(){kf()}function dn(){kl.startNonterminal("TypeswitchExpr",vl),_l(253),jl(22),_l(34),jl(267),Hl(),G(),_l(37);for(;;){jl(35),Hl(),mn();if(ml!=88)break}_l(109),jl(95),ml==31&&(_l(31),jl(253),Hl(),li()),jl(70),_l(220),jl(267),Hl(),Cf(),kl.endNonterminal("TypeswitchExpr",vl)}function vn(){Dl(253),jl(22),Dl(34),jl(267),Y(),Dl(37);for(;;){jl(35),gn();if(ml!=88)break}Dl(109),jl(95),ml==31&&(Dl(31),jl(253),ci()),jl(70),Dl(220),jl(267),kf()}function mn(){kl.startNonterminal("CaseClause",vl),_l(88),jl(260),ml==31&&(_l(31),jl(253),Hl(),li(),jl(30),_l(79)),jl(259),Hl(),yn(),_l(220),jl(267),Hl(),Cf(),kl.endNonterminal("CaseClause",vl)}function gn(){Dl(88),jl(260),ml==31&&(Dl(31),jl(253),ci(),jl(30),Dl(79)),jl(259),bn(),Dl(220),jl(267),kf()}function yn(){kl.startNonterminal("SequenceTypeUnion",vl),ds();for(;;){jl(134);if(ml!=279)break;_l(279),jl(259),Hl(),ds()}kl.endNonterminal("SequenceTypeUnion",vl)}function bn(){vs();for(;;){jl(134);if(ml!=279)break;Dl(279),jl(259),vs()}}function wn(){kl.startNonterminal("IfExpr",vl),_l(152),jl(22),_l(34),jl(267),Hl(),G(),_l(37),jl(77),_l(245),jl(267),Hl(),Cf(),_l(122),jl(267),Hl(),Cf(),kl.endNonterminal("IfExpr",vl)}function En(){Dl(152),jl(22),Dl(34),jl(267),Y(),Dl(37),jl(77),Dl(245),jl(267),kf(),Dl(122),jl(267),kf()}function Sn(){kl.startNonterminal("TryCatchExpr",vl),Tn();for(;;){jl(36),Hl(),Ln(),jl(184);if(ml!=91)break}kl.endNonterminal("TryCatchExpr",vl)}function xn(){Nn();for(;;){jl(36),An(),jl(184);if(ml!=91)break}}function Tn(){kl.startNonterminal("TryClause",vl),_l(250),jl(87),_l(276),jl(267),Hl(),Cn(),_l(282),kl.endNonterminal("TryClause",vl)}function Nn(){Dl(250),jl(87),Dl(276),jl(267),kn(),Dl(282)}function Cn(){kl.startNonterminal("TryTargetExpr",vl),G(),kl.endNonterminal("TryTargetExpr",vl)}function kn(){Y()}function Ln(){kl.startNonterminal("CatchClause",vl),_l(91),jl(255),Hl(),On(),_l(276),jl(267),Hl(),G(),_l(282),kl.endNonterminal("CatchClause",vl)}function An(){Dl(91),jl(255),Mn(),Dl(276),jl(267),Y(),Dl(282)}function On(){kl.startNonterminal("CatchErrorList",vl),Jr();for(;;){jl(136);if(ml!=279)break;_l(279),jl(255),Hl(),Jr()}kl.endNonterminal("CatchErrorList",vl)}function Mn(){Kr();for(;;){jl(136);if(ml!=279)break;Dl(279),jl(255),Kr()}}function _n(){kl.startNonterminal("OrExpr",vl),Pn();for(;;){if(ml!=200)break;_l(200),jl(265),Hl(),Pn()}kl.endNonterminal("OrExpr",vl)}function Dn(){Hn();for(;;){if(ml!=200)break;Dl(200),jl(265),Hn()}}function Pn(){kl.startNonterminal("AndExpr",vl),Bn();for(;;){if(ml!=75)break;_l(75),jl(265),Hl(),Bn()}kl.endNonterminal("AndExpr",vl)}function Hn(){jn();for(;;){if(ml!=75)break;Dl(75),jl(265),jn()}}function Bn(){kl.startNonterminal("ComparisonExpr",vl),Fn();if(ml==27||ml==54||ml==57||ml==58||ml==60||ml==61||ml==62||ml==63||ml==128||ml==146||ml==150||ml==164||ml==172||ml==178||ml==186){switch(ml){case 128:case 146:case 150:case 172:case 178:case 186:Hl(),dr();break;case 57:case 63:case 164:Hl(),mr();break;default:Hl(),hr()}jl(265),Hl(),Fn()}kl.endNonterminal("ComparisonExpr",vl)}function jn(){In();if(ml==27||ml==54||ml==57||ml==58||ml==60||ml==61||ml==62||ml==63||ml==128||ml==146||ml==150||ml==164||ml==172||ml==178||ml==186){switch(ml){case 128:case 146:case 150:case 172:case 178:case 186:vr();break;case 57:case 63:case 164:gr();break;default:pr()}jl(265),In()}}function Fn(){kl.startNonterminal("FTContainsExpr",vl),qn(),ml==99&&(_l(99),jl(76),_l(244),jl(162),Hl(),Wo(),ml==271&&(Hl(),aa())),kl.endNonterminal("FTContainsExpr",vl)}function In(){Rn(),ml==99&&(Dl(99),jl(76),Dl(244),jl(162),Xo(),ml==271&&fa())}function qn(){kl.startNonterminal("StringConcatExpr",vl),Un();for(;;){if(ml!=280)break;_l(280),jl(265),Hl(),Un()}kl.endNonterminal("StringConcatExpr",vl)}function Rn(){zn();for(;;){if(ml!=280)break;Dl(280),jl(265),zn()}}function Un(){kl.startNonterminal("RangeExpr",vl),Wn(),ml==248&&(_l(248),jl(265),Hl(),Wn()),kl.endNonterminal("RangeExpr",vl)}function zn(){Xn(),ml==248&&(Dl(248),jl(265),Xn())}function Wn(){kl.startNonterminal("AdditiveExpr",vl),Vn();for(;;){if(ml!=40&&ml!=42)break;switch(ml){case 40:_l(40);break;default:_l(42)}jl(265),Hl(),Vn()}kl.endNonterminal("AdditiveExpr",vl)}function Xn(){$n();for(;;){if(ml!=40&&ml!=42)break;switch(ml){case 40:Dl(40);break;default:Dl(42)}jl(265),$n()}}function Vn(){kl.startNonterminal("MultiplicativeExpr",vl),Jn();for(;;){if(ml!=38&&ml!=118&&ml!=151&&ml!=180)break;switch(ml){case 38:_l(38);break;case 118:_l(118);break;case 151:_l(151);break;default:_l(180)}jl(265),Hl(),Jn()}kl.endNonterminal("MultiplicativeExpr",vl)}function $n(){Kn();for(;;){if(ml!=38&&ml!=118&&ml!=151&&ml!=180)break;switch(ml){case 38:Dl(38);break;case 118:Dl(118);break;case 151:Dl(151);break;default:Dl(180)}jl(265),Kn()}}function Jn(){kl.startNonterminal("UnionExpr",vl),Qn();for(;;){if(ml!=254&&ml!=279)break;switch(ml){case 254:_l(254);break;default:_l(279)}jl(265),Hl(),Qn()}kl.endNonterminal("UnionExpr",vl)}function Kn(){Gn();for(;;){if(ml!=254&&ml!=279)break;switch(ml){case 254:Dl(254);break;default:Dl(279)}jl(265),Gn()}}function Qn(){kl.startNonterminal("IntersectExceptExpr",vl),Yn();for(;;){jl(222);if(ml!=131&&ml!=162)break;switch(ml){case 162:_l(162);break;default:_l(131)}jl(265),Hl(),Yn()}kl.endNonterminal("IntersectExceptExpr",vl)}function Gn(){Zn();for(;;){jl(222);if(ml!=131&&ml!=162)break;switch(ml){case 162:Dl(162);break;default:Dl(131)}jl(265),Zn()}}function Yn(){kl.startNonterminal("InstanceofExpr",vl),er(),jl(223),ml==160&&(_l(160),jl(64),_l(196),jl(259),Hl(),ds()),kl.endNonterminal("InstanceofExpr",vl)}function Zn(){tr(),jl(223),ml==160&&(Dl(160),jl(64),Dl(196),jl(259),vs())}function er(){kl.startNonterminal("TreatExpr",vl),nr(),jl(224),ml==249&&(_l(249),jl(30),_l(79),jl(259),Hl(),ds()),kl.endNonterminal("TreatExpr",vl)}function tr(){rr(),jl(224),ml==249&&(Dl(249),jl(30),Dl(79),jl(259),vs())}function nr(){kl.startNonterminal("CastableExpr",vl),ir(),jl(225),ml==90&&(_l(90),jl(30),_l(79),jl(253),Hl(),ls()),kl.endNonterminal("CastableExpr",vl)}function rr(){sr(),jl(225),ml==90&&(Dl(90),jl(30),Dl(79),jl(253),cs())}function ir(){kl.startNonterminal("CastExpr",vl),or(),jl(227),ml==89&&(_l(89),jl(30),_l(79),jl(253),Hl(),ls()),kl.endNonterminal("CastExpr",vl)}function sr(){ur(),jl(227),ml==89&&(Dl(89),jl(30),Dl(79),jl(253),cs())}function or(){kl.startNonterminal("UnaryExpr",vl);for(;;){jl(265);if(ml!=40&&ml!=42)break;switch(ml){case 42:_l(42);break;default:_l(40)}}Hl(),ar(),kl.endNonterminal("UnaryExpr",vl)}function ur(){for(;;){jl(265);if(ml!=40&&ml!=42)break;switch(ml){case 42:Dl(42);break;default:Dl(40)}}fr()}function ar(){kl.startNonterminal("ValueExpr",vl);switch(ml){case 260:Fl(246);break;default:pl=ml}switch(pl){case 87812:case 123140:case 129284:case 141572:yr();break;case 35:Sr();break;default:lr()}kl.endNonterminal("ValueExpr",vl)}function fr(){switch(ml){case 260:Fl(246);break;default:pl=ml}switch(pl){case 87812:case 123140:case 129284:case 141572:br();break;case 35:xr();break;default:cr()}}function lr(){kl.startNonterminal("SimpleMapExpr",vl),Cr();for(;;){if(ml!=26)break;_l(26),jl(264),Hl(),Cr()}kl.endNonterminal("SimpleMapExpr",vl)}function cr(){kr();for(;;){if(ml!=26)break;Dl(26),jl(264),kr()}}function hr(){kl.startNonterminal("GeneralComp",vl);switch(ml){case 60:_l(60);break;case 27:_l(27);break;case 54:_l(54);break;case 58:_l(58);break;case 61:_l(61);break;default:_l(62)}kl.endNonterminal("GeneralComp",vl)}function pr(){switch(ml){case 60:Dl(60);break;case 27:Dl(27);break;case 54:Dl(54);break;case 58:Dl(58);break;case 61:Dl(61);break;default:Dl(62)}}function dr(){kl.startNonterminal("ValueComp",vl);switch(ml){case 128:_l(128);break;case 186:_l(186);break;case 178:_l(178);break;case 172:_l(172);break;case 150:_l(150);break;default:_l(146)}kl.endNonterminal("ValueComp",vl)}function vr(){switch(ml){case 128:Dl(128);break;case 186:Dl(186);break;case 178:Dl(178);break;case 172:Dl(172);break;case 150:Dl(150);break;default:Dl(146)}}function mr(){kl.startNonterminal("NodeComp",vl);switch(ml){case 164:_l(164);break;case 57:_l(57);break;default:_l(63)}kl.endNonterminal("NodeComp",vl)}function gr(){switch(ml){case 164:Dl(164);break;case 57:Dl(57);break;default:Dl(63)}}function yr(){kl.startNonterminal("ValidateExpr",vl),_l(260),jl(160);if(ml!=276)switch(ml){case 252:_l(252),jl(253),Hl(),vo();break;default:Hl(),wr()}jl(87),_l(276),jl(267),Hl(),G(),_l(282),kl.endNonterminal("ValidateExpr",vl)}function br(){Dl(260),jl(160);if(ml!=276)switch(ml){case 252:Dl(252),jl(253),mo();break;default:Er()}jl(87),Dl(276),jl(267),Y(),Dl(282)}function wr(){kl.startNonterminal("ValidationMode",vl);switch(ml){case 171:_l(171);break;default:_l(240)}kl.endNonterminal("ValidationMode",vl)}function Er(){switch(ml){case 171:Dl(171);break;default:Dl(240)}}function Sr(){kl.startNonterminal("ExtensionExpr",vl);for(;;){Hl(),Tr(),jl(100);if(ml!=35)break}_l(276),jl(273),ml!=282&&(Hl(),G()),_l(282),kl.endNonterminal("ExtensionExpr",vl)}function xr(){for(;;){Nr(),jl(100);if(ml!=35)break}Dl(276),jl(273),ml!=282&&Y(),Dl(282)}function Tr(){kl.startNonterminal("Pragma",vl),_l(35),Il(250),ml==21&&_l(21),Ma(),Il(10),ml==21&&(_l(21),Il(0),_l(1)),Il(5),_l(30),kl.endNonterminal("Pragma",vl)}function Nr(){Dl(35),Il(250),ml==21&&Dl(21),_a(),Il(10),ml==21&&(Dl(21),Il(0),Dl(1)),Il(5),Dl(30)}function Cr(){kl.startNonterminal("PathExpr",vl);switch(ml){case 46:_l(46),jl(283);switch(ml){case 25:case 26:case 27:case 37:case 38:case 40:case 41:case 42:case 49:case 53:case 57:case 58:case 60:case 61:case 62:case 63:case 69:case 87:case 99:case 205:case 232:case 247:case 273:case 279:case 280:case 281:case 282:break;default:Hl(),Lr()}break;case 47:_l(47),jl(263),Hl(),Lr();break;default:Lr()}kl.endNonterminal("PathExpr",vl)}function kr(){switch(ml){case 46:Dl(46),jl(283);switch(ml){case 25:case 26:case 27:case 37:case 38:case 40:case 41:case 42:case 49:case 53:case 57:case 58:case 60:case 61:case 62:case 63:case 69:case 87:case 99:case 205:case 232:case 247:case 273:case 279:case 280:case 281:case 282:break;default:Ar()}break;case 47:Dl(47),jl(263),Ar();break;default:Ar()}}function Lr(){kl.startNonterminal("RelativePathExpr",vl),Or();for(;;){switch(ml){case 26:Fl(264);break;default:pl=ml}if(pl!=25&&pl!=27&&pl!=37&&pl!=38&&pl!=40&&pl!=41&&pl!=42&&pl!=46&&pl!=47&&pl!=49&&pl!=53&&pl!=54&&pl!=57&&pl!=58&&pl!=60&&pl!=61&&pl!=62&&pl!=63&&pl!=69&&pl!=70&&pl!=75&&pl!=79&&pl!=80&&pl!=81&&pl!=84&&pl!=87&&pl!=88&&pl!=89&&pl!=90&&pl!=94&&pl!=99&&pl!=105&&pl!=109&&pl!=113&&pl!=118&&pl!=122&&pl!=123&&pl!=126&&pl!=128&&pl!=131&&pl!=137&&pl!=146&&pl!=148&&pl!=150&&pl!=151&&pl!=160&&pl!=162&&pl!=163&&pl!=164&&pl!=172&&pl!=174&&pl!=178&&pl!=180&&pl!=181&&pl!=186&&pl!=198&&pl!=200&&pl!=201&&pl!=205&&pl!=220&&pl!=224&&pl!=232&&pl!=236&&pl!=237&&pl!=247&&pl!=248&&pl!=249&&pl!=254&&pl!=266&&pl!=270&&pl!=273&&pl!=279&&pl!=280&&pl!=281&&pl!=282&&pl!=23578&&pl!=24090){pl=Ol(2,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{switch(ml){case 46:Dl(46);break;case 47:Dl(47);break;default:Dl(26)}jl(263),Mr(),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(2,vl,pl)}}if(pl!=-1&&pl!=46&&pl!=47)break;switch(ml){case 46:_l(46);break;case 47:_l(47);break;default:_l(26)}jl(263),Hl(),Or()}kl.endNonterminal("RelativePathExpr",vl)}function Ar(){Mr();for(;;){switch(ml){case 26:Fl(264);break;default:pl=ml}if(pl!=25&&pl!=27&&pl!=37&&pl!=38&&pl!=40&&pl!=41&&pl!=42&&pl!=46&&pl!=47&&pl!=49&&pl!=53&&pl!=54&&pl!=57&&pl!=58&&pl!=60&&pl!=61&&pl!=62&&pl!=63&&pl!=69&&pl!=70&&pl!=75&&pl!=79&&pl!=80&&pl!=81&&pl!=84&&pl!=87&&pl!=88&&pl!=89&&pl!=90&&pl!=94&&pl!=99&&pl!=105&&pl!=109&&pl!=113&&pl!=118&&pl!=122&&pl!=123&&pl!=126&&pl!=128&&pl!=131&&pl!=137&&pl!=146&&pl!=148&&pl!=150&&pl!=151&&pl!=160&&pl!=162&&pl!=163&&pl!=164&&pl!=172&&pl!=174&&pl!=178&&pl!=180&&pl!=181&&pl!=186&&pl!=198&&pl!=200&&pl!=201&&pl!=205&&pl!=220&&pl!=224&&pl!=232&&pl!=236&&pl!=237&&pl!=247&&pl!=248&&pl!=249&&pl!=254&&pl!=266&&pl!=270&&pl!=273&&pl!=279&&pl!=280&&pl!=281&&pl!=282&&pl!=23578&&pl!=24090){pl=Ol(2,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{switch(ml){case 46:Dl(46);break;case 47:Dl(47);break;default:Dl(26)}jl(263),Mr(),Al(2,t,-1);continue}catch(a){dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(2,t,-2);break}}}if(pl!=-1&&pl!=46&&pl!=47)break;switch(ml){case 46:Dl(46);break;case 47:Dl(47);break;default:Dl(26)}jl(263),Mr()}}function Or(){kl.startNonterminal("StepExpr",vl);switch(ml){case 82:Fl(282);break;case 121:Fl(280);break;case 184:case 216:Fl(279);break;case 96:case 119:case 202:case 244:case 256:Fl(245);break;case 124:case 152:case 165:case 243:case 253:Fl(238);break;case 73:case 74:case 93:case 111:case 112:case 135:case 136:case 206:case 212:case 213:case 229:Fl(244);break;case 6:case 70:case 72:case 75:case 78:case 79:case 80:case 81:case 83:case 84:case 85:case 86:case 88:case 89:case 90:case 91:case 94:case 97:case 98:case 101:case 102:case 103:case 104:case 105:case 106:case 108:case 109:case 110:case 113:case 118:case 120:case 122:case 123:case 125:case 126:case 128:case 129:case 131:case 132:case 133:case 134:case 137:case 141:case 145:case 146:case 148:case 150:case 151:case 153:case 154:case 155:case 159:case 160:case 161:case 162:case 163:case 164:case 167:case 170:case 171:case 172:case 174:case 176:case 178:case 180:case 181:case 182:case 185:case 186:case 191:case 192:case 194:case 198:case 199:case 200:case 201:case 203:case 218:case 219:case 220:case 221:case 222:case 224:case 225:case 226:case 227:case 228:case 234:case 235:case 236:case 237:case 240:case 248:case 249:case 250:case 251:case 252:case 254:case 257:case 260:case 261:case 262:case 263:case 266:case 267:case 270:case 274:Fl(242);break;default:pl=ml}if(pl==17486||pl==17575||pl==17602||pl==35922||pl==35961||pl==36024||pl==36056||pl==38482||pl==38521||pl==38584||pl==38616||pl==40530||pl==40569||pl==40632||pl==40664||pl==41042||pl==41081||pl==41144||pl==41176||pl==41554||pl==41593||pl==41656||pl==41688||pl==43090||pl==43129||pl==43192||pl==43224||pl==45138||pl==45177||pl==45240||pl==45272||pl==45650||pl==45689||pl==45752||pl==45784||pl==46162||pl==46201||pl==46264||pl==46296||pl==48210||pl==48249||pl==48312||pl==48344||pl==53842||pl==53881||pl==53944||pl==53976||pl==55890||pl==55929||pl==55992||pl==56024||pl==57938||pl==57977||pl==58040||pl==58072||pl==60498||pl==60537||pl==60600||pl==60632||pl==62546||pl==62585||pl==62648||pl==62680||pl==63058||pl==63097||pl==63160||pl==63192||pl==64594||pl==64633||pl==64696||pl==64728||pl==65618||pl==65657||pl==65720||pl==65752||pl==67154||pl==67193||pl==67256||pl==67288||pl==70226||pl==70265||pl==70328||pl==70360||pl==74834||pl==74873||pl==74936||pl==74968||pl==75858||pl==75897||pl==75960||pl==75992||pl==76882||pl==76921||pl==76984||pl==77016||pl==77394||pl==77433||pl==77496||pl==77528||pl==82002||pl==82041||pl==82104||pl==82136||pl==83026||pl==83065||pl==83128||pl==83160||pl==83538||pl==83577||pl==83640||pl==83672||pl==84050||pl==84089||pl==84152||pl==84184||pl==88146||pl==88185||pl==88248||pl==88280||pl==89170||pl==89209||pl==89272||pl==89304||pl==91218||pl==91257||pl==91320||pl==91352||pl==92242||pl==92281||pl==92344||pl==92376||pl==92754||pl==92793||pl==92856||pl==92888||pl==95314||pl==95353||pl==95416||pl==95448||pl==101458||pl==101497||pl==101560||pl==101592||pl==102482||pl==102521||pl==102584||pl==102616||pl==102994||pl==103033||pl==103096||pl==103128||pl==112722||pl==112761||pl==112824||pl==112856||pl==114770||pl==114809||pl==114872||pl==114904||pl==120914||pl==120953||pl==121016||pl==121048||pl==121426||pl==121465||pl==121528||pl==121560||pl==127058||pl==127097||pl==127160||pl==127192||pl==127570||pl==127609||pl==127672||pl==127704||pl==130130||pl==130169||pl==130232||pl==130264||pl==136274||pl==136313||pl==136376||pl==136408||pl==138322||pl==138361||pl==138424||pl==138456){pl=Ol(3,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Gr(),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(3,vl,pl)}}switch(pl){case-1:case 8:case 9:case 10:case 11:case 31:case 32:case 34:case 44:case 54:case 55:case 59:case 68:case 276:case 278:case 3154:case 3193:case 9912:case 9944:case 14854:case 14918:case 14920:case 14921:case 14922:case 14923:case 14926:case 14927:case 14928:case 14929:case 14930:case 14931:case 14932:case 14933:case 14934:case 14936:case 14937:case 14938:case 14939:case 14941:case 14942:case 14944:case 14945:case 14946:case 14949:case 14950:case 14951:case 14952:case 14953:case 14954:case 14956:case 14957:case 14958:case 14959:case 14960:case 14961:case 14966:case 14967:case 14968:case 14969:case 14970:case 14971:case 14972:case 14973:case 14974:case 14976:case 14977:case 14979:case 14980:case 14981:case 14982:case 14983:case 14984:case 14985:case 14989:case 14993:case 14994:case 14996:case 14998:case 14999:case 15e3:case 15001:case 15002:case 15003:case 15007:case 15008:case 15009:case 15010:case 15011:case 15012:case 15013:case 15015:case 15018:case 15019:case 15020:case 15022:case 15024:case 15026:case 15028:case 15029:case 15030:case 15032:case 15033:case 15034:case 15039:case 15040:case 15042:case 15046:case 15047:case 15048:case 15049:case 15050:case 15051:case 15054:case 15060:case 15061:case 15064:case 15066:case 15067:case 15068:case 15069:case 15070:case 15072:case 15073:case 15074:case 15075:case 15076:case 15077:case 15082:case 15083:case 15084:case 15085:case 15088:case 15091:case 15092:case 15096:case 15097:case 15098:case 15099:case 15100:case 15101:case 15102:case 15104:case 15105:case 15108:case 15109:case 15110:case 15111:case 15114:case 15115:case 15118:case 15122:case 17414:case 17478:case 17480:case 17481:case 17482:case 17483:case 17487:case 17488:case 17489:case 17491:case 17492:case 17493:case 17494:case 17496:case 17497:case 17498:case 17499:case 17501:case 17502:case 17505:case 17506:case 17509:case 17510:case 17511:case 17512:case 17513:case 17514:case 17516:case 17517:case 17518:case 17519:case 17520:case 17521:case 17526:case 17527:case 17530:case 17531:case 17533:case 17534:case 17536:case 17537:case 17539:case 17540:case 17541:case 17542:case 17543:case 17544:case 17545:case 17549:case 17553:case 17554:case 17556:case 17558:case 17559:case 17561:case 17562:case 17563:case 17567:case 17568:case 17569:case 17570:case 17571:case 17572:case 17578:case 17579:case 17580:case 17582:case 17584:case 17586:case 17588:case 17589:case 17590:case 17592:case 17594:case 17600:case 17606:case 17607:case 17608:case 17609:case 17610:case 17611:case 17614:case 17620:case 17621:case 17626:case 17627:case 17628:case 17629:case 17630:case 17632:case 17633:case 17636:case 17637:case 17642:case 17643:case 17644:case 17645:case 17648:case 17656:case 17657:case 17658:case 17659:case 17660:case 17662:case 17664:case 17665:case 17668:case 17669:case 17670:case 17671:case 17674:case 17675:case 17678:case 17682:case 36946:case 36985:case 37048:case 37080:case 37458:case 37497:case 37560:case 37592:case 37970:case 38009:case 38072:case 38104:case 40018:case 40057:case 42066:case 42105:case 42168:case 42200:case 42578:case 42617:case 42680:case 42712:case 43602:case 43641:case 43704:case 43736:case 44114:case 44153:case 44216:case 44248:case 46674:case 46713:case 46776:case 46808:case 47698:case 47737:case 47800:case 47832:case 49234:case 49273:case 49336:case 49368:case 49746:case 49785:case 49848:case 49880:case 50258:case 50297:case 50360:case 50392:case 51794:case 51833:case 51896:case 51928:case 52306:case 52345:case 52408:case 52440:case 52818:case 52857:case 52920:case 52952:case 53330:case 53369:case 53432:case 53464:case 54354:case 54393:case 54456:case 54488:case 55378:case 55417:case 55480:case 55512:case 56402:case 56441:case 56504:case 56536:case 56914:case 56953:case 57016:case 57048:case 57426:case 57465:case 57528:case 57560:case 61010:case 61049:case 61112:case 61144:case 61522:case 61561:case 61624:case 61656:case 62034:case 62073:case 62136:case 62168:case 63570:case 63609:case 63672:case 63704:case 64082:case 64121:case 64184:case 64216:case 66130:case 66169:case 66232:case 66264:case 67666:case 67705:case 67768:case 67800:case 68178:case 68217:case 68280:case 68312:case 68690:case 68729:case 68792:case 68824:case 69202:case 69241:case 69304:case 69336:case 69714:case 69753:case 69816:case 69848:case 72274:case 72313:case 72376:case 72408:case 74322:case 74361:case 74424:case 74456:case 77906:case 77945:case 78008:case 78040:case 78418:case 78457:case 78520:case 78552:case 78930:case 78969:case 79032:case 79064:case 79442:case 79481:case 79544:case 79576:case 81490:case 81529:case 81592:case 81624:case 82514:case 82553:case 82616:case 82648:case 84562:case 84601:case 84664:case 84696:case 85586:case 85625:case 87122:case 87161:case 87224:case 87256:case 87634:case 87673:case 87736:case 87768:case 90194:case 90233:case 90296:case 90328:case 93266:case 93305:case 93368:case 93400:case 94290:case 94329:case 94392:case 94424:case 94802:case 94841:case 94904:case 94936:case 97874:case 97913:case 97976:case 98008:case 98386:case 98425:case 98488:case 98520:case 99410:case 99449:case 101970:case 102009:case 102072:case 102104:case 103506:case 103545:case 103608:case 103640:case 104018:case 104057:case 104120:case 104152:case 105554:case 105593:case 105656:case 105688:case 108626:case 108665:case 108728:case 108760:case 109138:case 109177:case 109240:case 109272:case 110674:case 110713:case 110776:case 110808:case 111698:case 111737:case 111800:case 111832:case 112210:case 112249:case 112312:case 112344:case 113234:case 113273:case 113336:case 113368:case 113746:case 113785:case 113848:case 113880:case 115282:case 115321:case 115384:case 115416:case 115794:case 115833:case 115896:case 115928:case 116306:case 116345:case 116408:case 116440:case 116818:case 116857:case 116920:case 116952:case 117330:case 117369:case 117432:case 117464:case 119890:case 119929:case 119992:case 120024:case 120402:case 120441:case 120504:case 120536:case 122962:case 123001:case 123064:case 123096:case 124498:case 124537:case 124600:case 124632:case 125010:case 125049:case 125112:case 125144:case 128082:case 128121:case 128184:case 128216:case 128594:case 128633:case 128696:case 128728:case 129106:case 129145:case 129208:case 129240:case 129618:case 129657:case 129720:case 129752:case 131154:case 131193:case 131256:case 131288:case 131666:case 131705:case 131768:case 131800:case 133202:case 133241:case 133304:case 133336:case 133714:case 133753:case 133816:case 133848:case 134226:case 134265:case 134328:case 134360:case 134738:case 134777:case 134840:case 134872:case 136786:case 136825:case 136888:case 136920:case 140370:case 140409:case 140472:case 140504:case 141394:case 141408:case 141431:case 141433:case 141496:case 141514:case 141528:case 141556:case 141568:Qr();break;default:_r()}kl.endNonterminal("StepExpr",vl)}function Mr(){switch(ml){case 82:Fl(282);break;case 121:Fl(280);break;case 184:case 216:Fl(279);break;case 96:case 119:case 202:case 244:case 256:Fl(245);break;case 124:case 152:case 165:case 243:case 253:Fl(238);break;case 73:case 74:case 93:case 111:case 112:case 135:case 136:case 206:case 212:case 213:case 229:Fl(244);break;case 6:case 70:case 72:case 75:case 78:case 79:case 80:case 81:case 83:case 84:case 85:case 86:case 88:case 89:case 90:case 91:case 94:case 97:case 98:case 101:case 102:case 103:case 104:case 105:case 106:case 108:case 109:case 110:case 113:case 118:case 120:case 122:case 123:case 125:case 126:case 128:case 129:case 131:case 132:case 133:case 134:case 137:case 141:case 145:case 146:case 148:case 150:case 151:case 153:case 154:case 155:case 159:case 160:case 161:case 162:case 163:case 164:case 167:case 170:case 171:case 172:case 174:case 176:case 178:case 180:case 181:case 182:case 185:case 186:case 191:case 192:case 194:case 198:case 199:case 200:case 201:case 203:case 218:case 219:case 220:case 221:case 222:case 224:case 225:case 226:case 227:case 228:case 234:case 235:case 236:case 237:case 240:case 248:case 249:case 250:case 251:case 252:case 254:case 257:case 260:case 261:case 262:case 263:case 266:case 267:case 270:case 274:Fl(242);break;default:pl=ml}if(pl==17486||pl==17575||pl==17602||pl==35922||pl==35961||pl==36024||pl==36056||pl==38482||pl==38521||pl==38584||pl==38616||pl==40530||pl==40569||pl==40632||pl==40664||pl==41042||pl==41081||pl==41144||pl==41176||pl==41554||pl==41593||pl==41656||pl==41688||pl==43090||pl==43129||pl==43192||pl==43224||pl==45138||pl==45177||pl==45240||pl==45272||pl==45650||pl==45689||pl==45752||pl==45784||pl==46162||pl==46201||pl==46264||pl==46296||pl==48210||pl==48249||pl==48312||pl==48344||pl==53842||pl==53881||pl==53944||pl==53976||pl==55890||pl==55929||pl==55992||pl==56024||pl==57938||pl==57977||pl==58040||pl==58072||pl==60498||pl==60537||pl==60600||pl==60632||pl==62546||pl==62585||pl==62648||pl==62680||pl==63058||pl==63097||pl==63160||pl==63192||pl==64594||pl==64633||pl==64696||pl==64728||pl==65618||pl==65657||pl==65720||pl==65752||pl==67154||pl==67193||pl==67256||pl==67288||pl==70226||pl==70265||pl==70328||pl==70360||pl==74834||pl==74873||pl==74936||pl==74968||pl==75858||pl==75897||pl==75960||pl==75992||pl==76882||pl==76921||pl==76984||pl==77016||pl==77394||pl==77433||pl==77496||pl==77528||pl==82002||pl==82041||pl==82104||pl==82136||pl==83026||pl==83065||pl==83128||pl==83160||pl==83538||pl==83577||pl==83640||pl==83672||pl==84050||pl==84089||pl==84152||pl==84184||pl==88146||pl==88185||pl==88248||pl==88280||pl==89170||pl==89209||pl==89272||pl==89304||pl==91218||pl==91257||pl==91320||pl==91352||pl==92242||pl==92281||pl==92344||pl==92376||pl==92754||pl==92793||pl==92856||pl==92888||pl==95314||pl==95353||pl==95416||pl==95448||pl==101458||pl==101497||pl==101560||pl==101592||pl==102482||pl==102521||pl==102584||pl==102616||pl==102994||pl==103033||pl==103096||pl==103128||pl==112722||pl==112761||pl==112824||pl==112856||pl==114770||pl==114809||pl==114872||pl==114904||pl==120914||pl==120953||pl==121016||pl==121048||pl==121426||pl==121465||pl==121528||pl==121560||pl==127058||pl==127097||pl==127160||pl==127192||pl==127570||pl==127609||pl==127672||pl==127704||pl==130130||pl==130169||pl==130232||pl==130264||pl==136274||pl==136313||pl==136376||pl==136408||pl==138322||pl==138361||pl==138424||pl==138456){pl=Ol(3,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Gr(),Al(3,t,-1),pl=-3}catch(a){pl=-2,dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(3,t,-2)}}}switch(pl){case-1:case 8:case 9:case 10:case 11:case 31:case 32:case 34:case 44:case 54:case 55:case 59:case 68:case 276:case 278:case 3154:case 3193:case 9912:case 9944:case 14854:case 14918:case 14920:case 14921:case 14922:case 14923:case 14926:case 14927:case 14928:case 14929:case 14930:case 14931:case 14932:case 14933:case 14934:case 14936:case 14937:case 14938:case 14939:case 14941:case 14942:case 14944:case 14945:case 14946:case 14949:case 14950:case 14951:case 14952:case 14953:case 14954:case 14956:case 14957:case 14958:case 14959:case 14960:case 14961:case 14966:case 14967:case 14968:case 14969:case 14970:case 14971:case 14972:case 14973:case 14974:case 14976:case 14977:case 14979:case 14980:case 14981:case 14982:case 14983:case 14984:case 14985:case 14989:case 14993:case 14994:case 14996:case 14998:case 14999:case 15e3:case 15001:case 15002:case 15003:case 15007:case 15008:case 15009:case 15010:case 15011:case 15012:case 15013:case 15015:case 15018:case 15019:case 15020:case 15022:case 15024:case 15026:case 15028:case 15029:case 15030:case 15032:case 15033:case 15034:case 15039:case 15040:case 15042:case 15046:case 15047:case 15048:case 15049:case 15050:case 15051:case 15054:case 15060:case 15061:case 15064:case 15066:case 15067:case 15068:case 15069:case 15070:case 15072:case 15073:case 15074:case 15075:case 15076:case 15077:case 15082:case 15083:case 15084:case 15085:case 15088:case 15091:case 15092:case 15096:case 15097:case 15098:case 15099:case 15100:case 15101:case 15102:case 15104:case 15105:case 15108:case 15109:case 15110:case 15111:case 15114:case 15115:case 15118:case 15122:case 17414:case 17478:case 17480:case 17481:case 17482:case 17483:case 17487:case 17488:case 17489:case 17491:case 17492:case 17493:case 17494:case 17496:case 17497:case 17498:case 17499:case 17501:case 17502:case 17505:case 17506:case 17509:case 17510:case 17511:case 17512:case 17513:case 17514:case 17516:case 17517:case 17518:case 17519:case 17520:case 17521:case 17526:case 17527:case 17530:case 17531:case 17533:case 17534:case 17536:case 17537:case 17539:case 17540:case 17541:case 17542:case 17543:case 17544:case 17545:case 17549:case 17553:case 17554:case 17556:case 17558:case 17559:case 17561:case 17562:case 17563:case 17567:case 17568:case 17569:case 17570:case 17571:case 17572:case 17578:case 17579:case 17580:case 17582:case 17584:case 17586:case 17588:case 17589:case 17590:case 17592:case 17594:case 17600:case 17606:case 17607:case 17608:case 17609:case 17610:case 17611:case 17614:case 17620:case 17621:case 17626:case 17627:case 17628:case 17629:case 17630:case 17632:case 17633:case 17636:case 17637:case 17642:case 17643:case 17644:case 17645:case 17648:case 17656:case 17657:case 17658:case 17659:case 17660:case 17662:case 17664:case 17665:case 17668:case 17669:case 17670:case 17671:case 17674:case 17675:case 17678:case 17682:case 36946:case 36985:case 37048:case 37080:case 37458:case 37497:case 37560:case 37592:case 37970:case 38009:case 38072:case 38104:case 40018:case 40057:case 42066:case 42105:case 42168:case 42200:case 42578:case 42617:case 42680:case 42712:case 43602:case 43641:case 43704:case 43736:case 44114:case 44153:case 44216:case 44248:case 46674:case 46713:case 46776:case 46808:case 47698:case 47737:case 47800:case 47832:case 49234:case 49273:case 49336:case 49368:case 49746:case 49785:case 49848:case 49880:case 50258:case 50297:case 50360:case 50392:case 51794:case 51833:case 51896:case 51928:case 52306:case 52345:case 52408:case 52440:case 52818:case 52857:case 52920:case 52952:case 53330:case 53369:case 53432:case 53464:case 54354:case 54393:case 54456:case 54488:case 55378:case 55417:case 55480:case 55512:case 56402:case 56441:case 56504:case 56536:case 56914:case 56953:case 57016:case 57048:case 57426:case 57465:case 57528:case 57560:case 61010:case 61049:case 61112:case 61144:case 61522:case 61561:case 61624:case 61656:case 62034:case 62073:case 62136:case 62168:case 63570:case 63609:case 63672:case 63704:case 64082:case 64121:case 64184:case 64216:case 66130:case 66169:case 66232:case 66264:case 67666:case 67705:case 67768:case 67800:case 68178:case 68217:case 68280:case 68312:case 68690:case 68729:case 68792:case 68824:case 69202:case 69241:case 69304:case 69336:case 69714:case 69753:case 69816:case 69848:case 72274:case 72313:case 72376:case 72408:case 74322:case 74361:case 74424:case 74456:case 77906:case 77945:case 78008:case 78040:case 78418:case 78457:case 78520:case 78552:case 78930:case 78969:case 79032:case 79064:case 79442:case 79481:case 79544:case 79576:case 81490:case 81529:case 81592:case 81624:case 82514:case 82553:case 82616:case 82648:case 84562:case 84601:case 84664:case 84696:case 85586:case 85625:case 87122:case 87161:case 87224:case 87256:case 87634:case 87673:case 87736:case 87768:case 90194:case 90233:case 90296:case 90328:case 93266:case 93305:case 93368:case 93400:case 94290:case 94329:case 94392:case 94424:case 94802:case 94841:case 94904:case 94936:case 97874:case 97913:case 97976:case 98008:case 98386:case 98425:case 98488:case 98520:case 99410:case 99449:case 101970:case 102009:case 102072:case 102104:case 103506:case 103545:case 103608:case 103640:case 104018:case 104057:case 104120:case 104152:case 105554:case 105593:case 105656:case 105688:case 108626:case 108665:case 108728:case 108760:case 109138:case 109177:case 109240:case 109272:case 110674:case 110713:case 110776:case 110808:case 111698:case 111737:case 111800:case 111832:case 112210:case 112249:case 112312:case 112344:case 113234:case 113273:case 113336:case 113368:case 113746:case 113785:case 113848:case 113880:case 115282:case 115321:case 115384:case 115416:case 115794:case 115833:case 115896:case 115928:case 116306:case 116345:case 116408:case 116440:case 116818:case 116857:case 116920:case 116952:case 117330:case 117369:case 117432:case 117464:case 119890:case 119929:case 119992:case 120024:case 120402:case 120441:case 120504:case 120536:case 122962:case 123001:case 123064:case 123096:case 124498:case 124537:case 124600:case 124632:case 125010:case 125049:case 125112:case 125144:case 128082:case 128121:case 128184:case 128216:case 128594:case 128633:case 128696:case 128728:case 129106:case 129145:case 129208:case 129240:case 129618:case 129657:case 129720:case 129752:case 131154:case 131193:case 131256:case 131288:case 131666:case 131705:case 131768:case 131800:case 133202:case 133241:case 133304:case 133336:case 133714:case 133753:case 133816:case 133848:case 134226:case 134265:case 134328:case 134360:case 134738:case 134777:case 134840:case 134872:case 136786:case 136825:case 136888:case 136920:case 140370:case 140409:case 140472:case 140504:case 141394:case 141408:case 141431:case 141433:case 141496:case 141514:case 141528:case 141556:case 141568:Gr();break;case-3:break;default:Dr()}}function _r(){kl.startNonterminal("AxisStep",vl);switch(ml){case 73:case 74:case 206:case 212:case 213:Fl(240);break;default:pl=ml}switch(pl){case 45:case 26185:case 26186:case 26318:case 26324:case 26325:qr();break;default:Pr()}jl(236),Hl(),ei(),kl.endNonterminal("AxisStep",vl)}function Dr(){switch(ml){case 73:case 74:case 206:case 212:case 213:Fl(240);break;default:pl=ml}switch(pl){case 45:case 26185:case 26186:case 26318:case 26324:case 26325:Rr();break;default:Hr()}jl(236),ti()}function Pr(){kl.startNonterminal("ForwardStep",vl);switch(ml){case 82:Fl(243);break;case 93:case 111:case 112:case 135:case 136:case 229:Fl(240);break;default:pl=ml}switch(pl){case 26194:case 26205:case 26223:case 26224:case 26247:case 26248:case 26341:Br(),jl(255),Hl(),Vr();break;default:Fr()}kl.endNonterminal("ForwardStep",vl)}function Hr(){switch(ml){case 82:Fl(243);break;case 93:case 111:case 112:case 135:case 136:case 229:Fl(240);break;default:pl=ml}switch(pl){case 26194:case 26205:case 26223:case 26224:case 26247:case 26248:case 26341:jr(),jl(255),$r();break;default:Ir()}}function Br(){kl.startNonterminal("ForwardAxis",vl);switch(ml){case 93:_l(93),jl(26),_l(51);break;case 111:_l(111),jl(26),_l(51);break;case 82:_l(82),jl(26),_l(51);break;case 229:_l(229),jl(26),_l(51);break;case 112:_l(112),jl(26),_l(51);break;case 136:_l(136),jl(26),_l(51);break;default:_l(135),jl(26),_l(51)}kl.endNonterminal("ForwardAxis",vl)}function jr(){switch(ml){case 93:Dl(93),jl(26),Dl(51);break;case 111:Dl(111),jl(26),Dl(51);break;case 82:Dl(82),jl(26),Dl(51);break;case 229:Dl(229),jl(26),Dl(51);break;case 112:Dl(112),jl(26),Dl(51);break;case 136:Dl(136),jl(26),Dl(51);break;default:Dl(135),jl(26),Dl(51)}}function Fr(){kl.startNonterminal("AbbrevForwardStep",vl),ml==66&&_l(66),jl(255),Hl(),Vr(),kl.endNonterminal("AbbrevForwardStep",vl)}function Ir(){ml==66&&Dl(66),jl(255),$r()}function qr(){kl.startNonterminal("ReverseStep",vl);switch(ml){case 45:Wr();break;default:Ur(),jl(255),Hl(),Vr()}kl.endNonterminal("ReverseStep",vl)}function Rr(){switch(ml){case 45:Xr();break;default:zr(),jl(255),$r()}}function Ur(){kl.startNonterminal("ReverseAxis",vl);switch(ml){case 206:_l(206),jl(26),_l(51);break;case 73:_l(73),jl(26),_l(51);break;case 213:_l(213),jl(26),_l(51);break;case 212:_l(212),jl(26),_l(51);break;default:_l(74),jl(26),_l(51)}kl.endNonterminal("ReverseAxis",vl)}function zr(){switch(ml){case 206:Dl(206),jl(26),Dl(51);break;case 73:Dl(73),jl(26),Dl(51);break;case 213:Dl(213),jl(26),Dl(51);break;case 212:Dl(212),jl(26),Dl(51);break;default:Dl(74),jl(26),Dl(51)}}function Wr(){kl.startNonterminal("AbbrevReverseStep",vl),_l(45),kl.endNonterminal("AbbrevReverseStep",vl)}function Xr(){Dl(45)}function Vr(){kl.startNonterminal("NodeTest",vl);switch(ml){case 78:case 82:case 96:case 120:case 121:case 167:case 185:case 191:case 194:case 216:case 226:case 227:case 244:Fl(239);break;default:pl=ml}switch(pl){case 17486:case 17490:case 17504:case 17528:case 17529:case 17575:case 17593:case 17599:case 17602:case 17624:case 17634:case 17635:case 17652:_s();break;default:Jr()}kl.endNonterminal("NodeTest",vl)}function $r(){switch(ml){case 78:case 82:case 96:case 120:case 121:case 167:case 185:case 191:case 194:case 216:case 226:case 227:case 244:Fl(239);break;default:pl=ml}switch(pl){case 17486:case 17490:case 17504:case 17528:case 17529:case 17575:case 17593:case 17599:case 17602:case 17624:case 17634:case 17635:case 17652:Ds();break;default:Kr()}}function Jr(){kl.startNonterminal("NameTest",vl);switch(ml){case 5:_l(5);break;default:Ma()}kl.endNonterminal("NameTest",vl)}function Kr(){switch(ml){case 5:Dl(5);break;default:_a()}}function Qr(){kl.startNonterminal("PostfixExpr",vl),el();for(;;){jl(239);if(ml!=34&&ml!=68)break;switch(ml){case 68:Hl(),ni();break;default:Hl(),Yr()}}kl.endNonterminal("PostfixExpr",vl)}function Gr(){tl();for(;;){jl(239);if(ml!=34&&ml!=68)break;switch(ml){case 68:ri();break;default:Zr()}}}function Yr(){kl.startNonterminal("ArgumentList",vl),_l(34),jl(275);if(ml!=37){Hl(),Si();for(;;){jl(101);if(ml!=41)break;_l(41),jl(270),Hl(),Si()}}_l(37),kl.endNonterminal("ArgumentList",vl)}function Zr(){Dl(34),jl(275);if(ml!=37){xi();for(;;){jl(101);if(ml!=41)break;Dl(41),jl(270),xi()}}Dl(37)}function ei(){kl.startNonterminal("PredicateList",vl);for(;;){jl(236);if(ml!=68)break;Hl(),ni()}kl.endNonterminal("PredicateList",vl)}function ti(){for(;;){jl(236);if(ml!=68)break;ri()}}function ni(){kl.startNonterminal("Predicate",vl),_l(68),jl(267),Hl(),G(),_l(69),kl.endNonterminal("Predicate",vl)}function ri(){Dl(68),jl(267),Y(),Dl(69)}function ii(){kl.startNonterminal("Literal",vl);switch(ml){case 11:_l(11);break;default:oi()}kl.endNonterminal("Literal",vl)}function si(){switch(ml){case 11:Dl(11);break;default:ui()}}function oi(){kl.startNonterminal("NumericLiteral",vl);switch(ml){case 8:_l(8);break;case 9:_l(9);break;default:_l(10)}kl.endNonterminal("NumericLiteral",vl)}function ui(){switch(ml){case 8:Dl(8);break;case 9:Dl(9);break;default:Dl(10)}}function ai(){kl.startNonterminal("VarRef",vl),_l(31),jl(253),Hl(),li(),kl.endNonterminal("VarRef",vl)}function fi(){Dl(31),jl(253),ci()}function li(){kl.startNonterminal("VarName",vl),Ma(),kl.endNonterminal("VarName",vl)}function ci(){_a()}function hi(){kl.startNonterminal("ParenthesizedExpr",vl),_l(34),jl(269),ml!=37&&(Hl(),G()),_l(37),kl.endNonterminal("ParenthesizedExpr",vl)}function pi(){Dl(34),jl(269),ml!=37&&Y(),Dl(37)}function di(){kl.startNonterminal("ContextItemExpr",vl),_l(44),kl.endNonterminal("ContextItemExpr",vl)}function vi(){Dl(44)}function mi(){kl.startNonterminal("OrderedExpr",vl),_l(202),jl(87),_l(276),jl(267),Hl(),G(),_l(282),kl.endNonterminal("OrderedExpr",vl)}function gi(){Dl(202),jl(87),Dl(276),jl(267),Y(),Dl(282)}function yi(){kl.startNonterminal("UnorderedExpr",vl),_l(256),jl(87),_l(276),jl(267),Hl(),G(),_l(282),kl.endNonterminal("UnorderedExpr",vl)}function bi(){Dl(256),jl(87),Dl(276),jl(267),Y(),Dl(282)}function wi(){kl.startNonterminal("FunctionCall",vl),Da(),jl(22),Hl(),Yr(),kl.endNonterminal("FunctionCall",vl)}function Ei(){Pa(),jl(22),Zr()}function Si(){kl.startNonterminal("Argument",vl);switch(ml){case 64:Ti();break;default:Cf()}kl.endNonterminal("Argument",vl)}function xi(){switch(ml){case 64:Ni();break;default:kf()}}function Ti(){kl.startNonterminal("ArgumentPlaceholder",vl),_l(64),kl.endNonterminal("ArgumentPlaceholder",vl)}function Ni(){Dl(64)}function Ci(){kl.startNonterminal("Constructor",vl);switch(ml){case 54:case 55:case 59:Li();break;default:Vi()}kl.endNonterminal("Constructor",vl)}function ki(){switch(ml){case 54:case 55:case 59:Ai();break;default:$i()}}function Li(){kl.startNonterminal("DirectConstructor",vl);switch(ml){case 54:Oi();break;case 55:Ui();break;default:Wi()}kl.endNonterminal("DirectConstructor",vl)}function Ai(){switch(ml){case 54:Mi();break;case 55:zi();break;default:Xi()}}function Oi(){kl.startNonterminal("DirElemConstructor",vl),_l(54),Il(4),_l(20),_i();switch(ml){case 48:_l(48);break;default:_l(61);for(;;){Il(174);if(ml==56)break;qi()}_l(56),Il(4),_l(20),Il(12),ml==21&&_l(21),Il(8),_l(61)}kl.endNonterminal("DirElemConstructor",vl)}function Mi(){Dl(54),Il(4),Dl(20),Di();switch(ml){case 48:Dl(48);break;default:Dl(61);for(;;){Il(174);if(ml==56)break;Ri()}Dl(56),Il(4),Dl(20),Il(12),ml==21&&Dl(21),Il(8),Dl(61)}}function _i(){kl.startNonterminal("DirAttributeList",vl);for(;;){Il(19);if(ml!=21)break;_l(21),Il(91),ml==20&&(_l(20),Il(11),ml==21&&_l(21),Il(7),_l(60),Il(18),ml==21&&_l(21),Pi())}kl.endNonterminal("DirAttributeList",vl)}function Di(){for(;;){Il(19);if(ml!=21)break;Dl(21),Il(91),ml==20&&(Dl(20),Il(11),ml==21&&Dl(21),Il(7),Dl(60),Il(18),ml==21&&Dl(21),Hi())}}function Pi(){kl.startNonterminal("DirAttributeValue",vl),Il(14);switch(ml){case 28:_l(28);for(;;){Il(167);if(ml==28)break;switch(ml){case 13:_l(13);break;default:Bi()}}_l(28);break;default:_l(33);for(;;){Il(168);if(ml==33)break;switch(ml){case 14:_l(14);break;default:Fi()}}_l(33)}kl.endNonterminal("DirAttributeValue",vl)}function Hi(){Il(14);switch(ml){case 28:Dl(28);for(;;){Il(167);if(ml==28)break;switch(ml){case 13:Dl(13);break;default:ji()}}Dl(28);break;default:Dl(33);for(;;){Il(168);if(ml==33)break;switch(ml){case 14:Dl(14);break;default:Ii()}}Dl(33)}}function Bi(){kl.startNonterminal("QuotAttrValueContent",vl);switch(ml){case 16:_l(16);break;default:qf()}kl.endNonterminal("QuotAttrValueContent",vl)}function ji(){switch(ml){case 16:Dl(16);break;default:Rf()}}function Fi(){kl.startNonterminal("AposAttrValueContent",vl);switch(ml){case 17:_l(17);break;default:qf()}kl.endNonterminal("AposAttrValueContent",vl)}function Ii(){switch(ml){case 17:Dl(17);break;default:Rf()}}function qi(){kl.startNonterminal("DirElemContent",vl);switch(ml){case 54:case 55:case 59:Li();break;case 4:_l(4);break;case 15:_l(15);break;default:qf()}kl.endNonterminal("DirElemContent",vl)}function Ri(){switch(ml){case 54:case 55:case 59:Ai();break;case 4:Dl(4);break;case 15:Dl(15);break;default:Rf()}}function Ui(){kl.startNonterminal("DirCommentConstructor",vl),_l(55),Il(1),_l(2),Il(6),_l(43),kl.endNonterminal("DirCommentConstructor",vl)}function zi(){Dl(55),Il(1),Dl(2),Il(6),Dl(43)}function Wi(){kl.startNonterminal("DirPIConstructor",vl),_l(59),Il(3),_l(18),Il(13),ml==21&&(_l(21),Il(2),_l(3)),Il(9),_l(65),kl.endNonterminal("DirPIConstructor",vl)}function Xi(){Dl(59),Il(3),Dl(18),Il(13),ml==21&&(Dl(21),Il(2),Dl(3)),Il(9),Dl(65)}function Vi(){kl.startNonterminal("ComputedConstructor",vl);switch(ml){case 119:Wf();break;case 121:Ji();break;case 82:Vf();break;case 184:Qi();break;case 244:Yf();break;case 96:Qf();break;default:Jf()}kl.endNonterminal("ComputedConstructor",vl)}function $i(){switch(ml){case 119:Xf();break;case 121:Ki();break;case 82:$f();break;case 184:Gi();break;case 244:Zf();break;case 96:Gf();break;default:Kf()}}function Ji(){kl.startNonterminal("CompElemConstructor",vl),_l(121),jl(256);switch(ml){case 276:_l(276),jl(267),Hl(),G(),_l(282);break;default:Hl(),Ma()}jl(87),_l(276),jl(273),ml!=282&&(Hl(),Uf()),_l(282),kl.endNonterminal("CompElemConstructor",vl)}function Ki(){Dl(121),jl(256);switch(ml){case 276:Dl(276),jl(267),Y(),Dl(282);break;default:_a()}jl(87),Dl(276),jl(273),ml!=282&&zf(),Dl(282)}function Qi(){kl.startNonterminal("CompNamespaceConstructor",vl),_l(184),jl(249);switch(ml){case 276:_l(276),jl(267),Hl(),es(),_l(282);break;default:Hl(),Yi()}jl(87),_l(276),jl(267),Hl(),ns(),_l(282),kl.endNonterminal("CompNamespaceConstructor",vl)}function Gi(){Dl(184),jl(249);switch(ml){case 276:Dl(276),jl(267),ts(),Dl(282);break;default:Zi()}jl(87),Dl(276),jl(267),rs(),Dl(282)}function Yi(){kl.startNonterminal("Prefix",vl),Ha(),kl.endNonterminal("Prefix",vl)}function Zi(){Ba()}function es(){kl.startNonterminal("PrefixExpr",vl),G(),kl.endNonterminal("PrefixExpr",vl)}function ts(){Y()}function ns(){kl.startNonterminal("URIExpr",vl),G(),kl.endNonterminal("URIExpr",vl)}function rs(){Y()}function is(){kl.startNonterminal("FunctionItemExpr",vl);switch(ml){case 145:Fl(92);break;default:pl=ml}switch(pl){case 32:case 17553:as();break;default:os()}kl.endNonterminal("FunctionItemExpr",vl)}function ss(){switch(ml){case 145:Fl(92);break;default:pl=ml}switch(pl){case 32:case 17553:fs();break;default:us()}}function os(){kl.startNonterminal("NamedFunctionRef",vl),Ma(),jl(20),_l(29),jl(16),_l(8),kl.endNonterminal("NamedFunctionRef",vl)}function us(){_a(),jl(20),Dl(29),jl(16),Dl(8)}function as(){kl.startNonterminal("InlineFunctionExpr",vl);for(;;){jl(97);if(ml!=32)break;Hl(),B()}_l(145),jl(22),_l(34),jl(94),ml==31&&(Hl(),U()),_l(37),jl(111),ml==79&&(_l(79),jl(259),Hl(),ds()),jl(87),Hl(),V(),kl.endNonterminal("InlineFunctionExpr",vl)}function fs(){for(;;){jl(97);if(ml!=32)break;j()}Dl(145),jl(22),Dl(34),jl(94),ml==31&&z(),Dl(37),jl(111),ml==79&&(Dl(79),jl(259),vs()),jl(87),$()}function ls(){kl.startNonterminal("SingleType",vl),ho(),jl(226),ml==64&&_l(64),kl.endNonterminal("SingleType",vl)}function cs(){po(),jl(226),ml==64&&Dl(64)}function hs(){kl.startNonterminal("TypeDeclaration",vl),_l(79),jl(259),Hl(),ds(),kl.endNonterminal("TypeDeclaration",vl)}function ps(){Dl(79),jl(259),vs()}function ds(){kl.startNonterminal("SequenceType",vl);switch(ml){case 124:Fl(241);break;default:pl=ml}switch(pl){case 17532:_l(124),jl(22),_l(34),jl(23),_l(37);break;default:ys(),jl(237);switch(ml){case 39:case 40:case 64:Hl(),ms();break;default:}}kl.endNonterminal("SequenceType",vl)}function vs(){switch(ml){case 124:Fl(241);break;default:pl=ml}switch(pl){case 17532:Dl(124),jl(22),Dl(34),jl(23),Dl(37);break;default:bs(),jl(237);switch(ml){case 39:case 40:case 64:gs();break;default:}}}function ms(){kl.startNonterminal("OccurrenceIndicator",vl);switch(ml){case 64:_l(64);break;case 39:_l(39);break;default:_l(40)}kl.endNonterminal("OccurrenceIndicator",vl)}function gs(){switch(ml){case 64:Dl(64);break;case 39:Dl(39);break;default:Dl(40)}}function ys(){kl.startNonterminal("ItemType",vl);switch(ml){case 78:case 82:case 96:case 120:case 121:case 145:case 165:case 167:case 185:case 191:case 194:case 216:case 226:case 227:case 244:Fl(241);break;default:pl=ml}if(pl==17486||pl==17575||pl==17602){pl=Ol(4,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Ds(),pl=-1}catch(a){pl=-6}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(4,vl,pl)}}switch(pl){case-1:case 17490:case 17504:case 17528:case 17529:case 17593:case 17599:case 17624:case 17634:case 17635:case 17652:_s();break;case 17573:_l(165),jl(22),_l(34),jl(23),_l(37);break;case 32:case 17553:go();break;case 34:xo();break;case-6:ws();break;case 242:Ss();break;default:Os()}kl.endNonterminal("ItemType",vl)}function bs(){switch(ml){case 78:case 82:case 96:case 120:case 121:case 145:case 165:case 167:case 185:case 191:case 194:case 216:case 226:case 227:case 244:Fl(241);break;default:pl=ml}if(pl==17486||pl==17575||pl==17602){pl=Ol(4,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Ds(),Al(4,t,-1),pl=-8}catch(a){pl=-6,dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(4,t,-6)}}}switch(pl){case-1:case 17490:case 17504:case 17528:case 17529:case 17593:case 17599:case 17624:case 17634:case 17635:case 17652:Ds();break;case 17573:Dl(165),jl(22),Dl(34),jl(23),Dl(37);break;case 32:case 17553:yo();break;case 34:To();break;case-6:Es();break;case 242:xs();break;case-8:break;default:Ms()}}function ws(){kl.startNonterminal("JSONTest",vl);switch(ml){case 167:Ts();break;case 194:Cs();break;default:Ls()}kl.endNonterminal("JSONTest",vl)}function Es(){switch(ml){case 167:Ns();break;case 194:ks();break;default:As()}}function Ss(){kl.startNonterminal("StructuredItemTest",vl),_l(242),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("StructuredItemTest",vl)}function xs(){Dl(242),jl(22),Dl(34),jl(23),Dl(37)}function Ts(){kl.startNonterminal("JSONItemTest",vl),_l(167),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("JSONItemTest",vl)}function Ns(){Dl(167),jl(22),Dl(34),jl(23),Dl(37)}function Cs(){kl.startNonterminal("JSONObjectTest",vl),_l(194),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("JSONObjectTest",vl)}function ks(){Dl(194),jl(22),Dl(34),jl(23),Dl(37)}function Ls(){kl.startNonterminal("JSONArrayTest",vl),_l(78),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("JSONArrayTest",vl)}function As(){Dl(78),jl(22),Dl(34),jl(23),Dl(37)}function Os(){kl.startNonterminal("AtomicOrUnionType",vl),Ma(),kl.endNonterminal("AtomicOrUnionType",vl)}function Ms(){_a()}function _s(){kl.startNonterminal("KindTest",vl);switch(ml){case 120:Bs();break;case 121:eo();break;case 82:Vs();break;case 227:io();break;case 226:Qs();break;case 216:Ws();break;case 96:qs();break;case 244:Fs();break;case 185:Us();break;case 191:Ps();break;default:ws()}kl.endNonterminal("KindTest",vl)}function Ds(){switch(ml){case 120:js();break;case 121:to();break;case 82:$s();break;case 227:so();break;case 226:Gs();break;case 216:Xs();break;case 96:Rs();break;case 244:Is();break;case 185:zs();break;case 191:Hs();break;default:Es()}}function Ps(){kl.startNonterminal("AnyKindTest",vl),_l(191),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("AnyKindTest",vl)}function Hs(){Dl(191),jl(22),Dl(34),jl(23),Dl(37)}function Bs(){kl.startNonterminal("DocumentTest",vl),_l(120),jl(22),_l(34),jl(144);if(ml!=37)switch(ml){case 121:Hl(),eo();break;default:Hl(),io()}jl(23),_l(37),kl.endNonterminal("DocumentTest",vl)}function js(){Dl(120),jl(22),Dl(34),jl(144);if(ml!=37)switch(ml){case 121:to();break;default:so()}jl(23),Dl(37)}function Fs(){kl.startNonterminal("TextTest",vl),_l(244),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("TextTest",vl)}function Is(){Dl(244),jl(22),Dl(34),jl(23),Dl(37)}function qs(){kl.startNonterminal("CommentTest",vl),_l(96),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("CommentTest",vl)}function Rs(){Dl(96),jl(22),Dl(34),jl(23),Dl(37)}function Us(){kl.startNonterminal("NamespaceNodeTest",vl),_l(185),jl(22),_l(34),jl(23),_l(37),kl.endNonterminal("NamespaceNodeTest",vl)}function zs(){Dl(185),jl(22),Dl(34),jl(23),Dl(37)}function Ws(){kl.startNonterminal("PITest",vl),_l(216),jl(22),_l(34),jl(251);if(ml!=37)switch(ml){case 11:_l(11);break;default:Hl(),Ha()}jl(23),_l(37),kl.endNonterminal("PITest",vl)}function Xs(){Dl(216),jl(22),Dl(34),jl(251);if(ml!=37)switch(ml){case 11:Dl(11);break;default:Ba()}jl(23),Dl(37)}function Vs(){kl.startNonterminal("AttributeTest",vl),_l(82),jl(22),_l(34),jl(258),ml!=37&&(Hl(),Js(),jl(101),ml==41&&(_l(41),jl(253),Hl(),vo())),jl(23),_l(37),kl.endNonterminal("AttributeTest",vl)}function $s(){Dl(82),jl(22),Dl(34),jl(258),ml!=37&&(Ks(),jl(101),ml==41&&(Dl(41),jl(253),mo())),jl(23),Dl(37)}function Js(){kl.startNonterminal("AttribNameOrWildcard",vl);switch(ml){case 38:_l(38);break;default:ao()}kl.endNonterminal("AttribNameOrWildcard",vl)}function Ks(){switch(ml){case 38:Dl(38);break;default:fo()}}function Qs(){kl.startNonterminal("SchemaAttributeTest",vl),_l(226),jl(22),_l(34),jl(253),Hl(),Ys(),jl(23),_l(37),kl.endNonterminal("SchemaAttributeTest",vl)}function Gs(){Dl(226),jl(22),Dl(34),jl(253),Zs(),jl(23),Dl(37)}function Ys(){kl.startNonterminal("AttributeDeclaration",vl),ao(),kl.endNonterminal("AttributeDeclaration",vl)}function Zs(){fo()}function eo(){kl.startNonterminal("ElementTest",vl),_l(121),jl(22),_l(34),jl(258),ml!=37&&(Hl(),no(),jl(101),ml==41&&(_l(41),jl(253),Hl(),vo(),jl(102),ml==64&&_l(64))),jl(23),_l(37),kl.endNonterminal("ElementTest",vl)}function to(){Dl(121),jl(22),Dl(34),jl(258),ml!=37&&(ro(),jl(101),ml==41&&(Dl(41),jl(253),mo(),jl(102),ml==64&&Dl(64))),jl(23),Dl(37)}function no(){kl.startNonterminal("ElementNameOrWildcard",vl);switch(ml){case 38:_l(38);break;default:lo()}kl.endNonterminal("ElementNameOrWildcard",vl)}function ro(){switch(ml){case 38:Dl(38);break;default:co()}}function io(){kl.startNonterminal("SchemaElementTest",vl),_l(227),jl(22),_l(34),jl(253),Hl(),oo(),jl(23),_l(37),kl.endNonterminal("SchemaElementTest",vl)}function so(){Dl(227),jl(22),Dl(34),jl(253),uo(),jl(23),Dl(37)}function oo(){kl.startNonterminal("ElementDeclaration",vl),lo(),kl.endNonterminal("ElementDeclaration",vl)}function uo(){co()}function ao(){kl.startNonterminal("AttributeName",vl),Ma(),kl.endNonterminal("AttributeName",vl)}function fo(){_a()}function lo(){kl.startNonterminal("ElementName",vl),Ma(),kl.endNonterminal("ElementName",vl)}function co(){_a()}function ho(){kl.startNonterminal("SimpleTypeName",vl),vo(),kl.endNonterminal("SimpleTypeName",vl)}function po(){mo()}function vo(){kl.startNonterminal("TypeName",vl),Ma(),kl.endNonterminal("TypeName",vl)}function mo(){_a()}function go(){kl.startNonterminal("FunctionTest",vl);for(;;){jl(97);if(ml!=32)break;Hl(),B()}switch(ml){case 145:Fl(22);break;default:pl=ml}pl=Ol(5,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{wo(),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(5,vl,pl)}switch(pl){case-1:Hl(),bo();break;default:Hl(),Eo()}kl.endNonterminal("FunctionTest",vl)}function yo(){for(;;){jl(97);if(ml!=32)break;j()}switch(ml){case 145:Fl(22);break;default:pl=ml}pl=Ol(5,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{wo(),Al(5,t,-1),pl=-3}catch(a){pl=-2,dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(5,t,-2)}}switch(pl){case-1:wo();break;case-3:break;default:So()}}function bo(){kl.startNonterminal("AnyFunctionTest",vl),_l(145),jl(22),_l(34),jl(24),_l(38),jl(23),_l(37),kl.endNonterminal("AnyFunctionTest",vl)}function wo(){Dl(145),jl(22),Dl(34),jl(24),Dl(38),jl(23),Dl(37)}function Eo(){kl.startNonterminal("TypedFunctionTest",vl),_l(145),jl(22),_l(34),jl(261);if(ml!=37){Hl(),ds();for(;;){jl(101);if(ml!=41)break;_l(41),jl(259),Hl(),ds()}}_l(37),jl(30),_l(79),jl(259),Hl(),ds(),kl.endNonterminal("TypedFunctionTest",vl)}function So(){Dl(145),jl(22),Dl(34),jl(261);if(ml!=37){vs();for(;;){jl(101);if(ml!=41)break;Dl(41),jl(259),vs()}}Dl(37),jl(30),Dl(79),jl(259),vs()}function xo(){kl.startNonterminal("ParenthesizedItemType",vl),_l(34),jl(259),Hl(),ys(),jl(23),_l(37),kl.endNonterminal("ParenthesizedItemType",vl)}function To(){Dl(34),jl(259),bs(),jl(23),Dl(37)}function No(){kl.startNonterminal("RevalidationDecl",vl),_l(108),jl(72),_l(222),jl(152);switch(ml){case 240:_l(240);break;case 171:_l(171);break;default:_l(233)}kl.endNonterminal("RevalidationDecl",vl)}function Co(){kl.startNonterminal("InsertExprTargetChoice",vl);switch(ml){case 70:_l(70);break;case 84:_l(84);break;default:if(ml==79){_l(79),jl(119);switch(ml){case 134:_l(134);break;default:_l(170)}}jl(54),_l(163)}kl.endNonterminal("InsertExprTargetChoice",vl)}function ko(){switch(ml){case 70:Dl(70);break;case 84:Dl(84);break;default:if(ml==79){Dl(79),jl(119);switch(ml){case 134:Dl(134);break;default:Dl(170)}}jl(54),Dl(163)}}function Lo(){kl.startNonterminal("InsertExpr",vl),_l(159),jl(129);switch(ml){case 191:_l(191);break;default:_l(192)}jl(267),Hl(),Bo(),Hl(),Co(),jl(267),Hl(),Fo(),kl.endNonterminal("InsertExpr",vl)}function Ao(){Dl(159),jl(129);switch(ml){case 191:Dl(191);break;default:Dl(192)}jl(267),jo(),ko(),jl(267),Io()}function Oo(){kl.startNonterminal("DeleteExpr",vl),_l(110),jl(129);switch(ml){case 191:_l(191);break;default:_l(192)}jl(267),Hl(),Fo(),kl.endNonterminal("DeleteExpr",vl)}function Mo(){Dl(110),jl(129);switch(ml){case 191:Dl(191);break;default:Dl(192)}jl(267),Io()}function _o(){kl.startNonterminal("ReplaceExpr",vl),_l(219),jl(130),ml==261&&(_l(261),jl(64),_l(196)),jl(62),_l(191),jl(267),Hl(),Fo(),_l(270),jl(267),Hl(),Cf(),kl.endNonterminal("ReplaceExpr",vl)}function Do(){Dl(219),jl(130),ml==261&&(Dl(261),jl(64),Dl(196)),jl(62),Dl(191),jl(267),Io(),Dl(270),jl(267),kf()}function Po(){kl.startNonterminal("RenameExpr",vl),_l(218),jl(62),_l(191),jl(267),Hl(),Fo(),_l(79),jl(267),Hl(),qo(),kl.endNonterminal("RenameExpr",vl)}function Ho(){Dl(218),jl(62),Dl(191),jl(267),Io(),Dl(79),jl(267),Ro()}function Bo(){kl.startNonterminal("SourceExpr",vl),Cf(),kl.endNonterminal("SourceExpr",vl)}function jo(){kf()}function Fo(){kl.startNonterminal("TargetExpr",vl),Cf(),kl.endNonterminal("TargetExpr",vl)}function Io(){kf()}function qo(){kl.startNonterminal("NewNameExpr",vl),Cf(),kl.endNonterminal("NewNameExpr",vl)}function Ro(){kf()}function Uo(){kl.startNonterminal("TransformExpr",vl),_l(103),jl(21),_l(31),jl(253),Hl(),li(),jl(27),_l(52),jl(267),Hl(),Cf();for(;;){if(ml!=41)break;_l(41),jl(21),_l(31),jl(253),Hl(),li(),jl(27),_l(52),jl(267),Hl(),Cf()}_l(181),jl(267),Hl(),Cf(),_l(220),jl(267),Hl(),Cf(),kl.endNonterminal("TransformExpr",vl)}function zo(){Dl(103),jl(21),Dl(31),jl(253),ci(),jl(27),Dl(52),jl(267),kf();for(;;){if(ml!=41)break;Dl(41),jl(21),Dl(31),jl(253),ci(),jl(27),Dl(52),jl(267),kf()}Dl(181),jl(267),kf(),Dl(220),jl(267),kf()}function Wo(){kl.startNonterminal("FTSelection",vl),Jo();for(;;){jl(211);switch(ml){case 81:Fl(151);break;default:pl=ml}if(pl!=115&&pl!=117&&pl!=127&&pl!=202&&pl!=223&&pl!=269&&pl!=64593&&pl!=121425)break;Hl(),yu()}kl.endNonterminal("FTSelection",vl)}function Xo(){Ko();for(;;){jl(211);switch(ml){case 81:Fl(151);break;default:pl=ml}if(pl!=115&&pl!=117&&pl!=127&&pl!=202&&pl!=223&&pl!=269&&pl!=64593&&pl!=121425)break;bu()}}function Vo(){kl.startNonterminal("FTWeight",vl),_l(264),jl(87),_l(276),jl(267),Hl(),G(),_l(282),kl.endNonterminal("FTWeight",vl)}function $o(){Dl(264),jl(87),Dl(276),jl(267),Y(),Dl(282)}function Jo(){kl.startNonterminal("FTOr",vl),Qo();for(;;){if(ml!=144)break;_l(144),jl(162),Hl(),Qo()}kl.endNonterminal("FTOr",vl)}function Ko(){Go();for(;;){if(ml!=144)break;Dl(144),jl(162),Go()}}function Qo(){kl.startNonterminal("FTAnd",vl),Yo();for(;;){if(ml!=142)break;_l(142),jl(162),Hl(),Yo()}kl.endNonterminal("FTAnd",vl)}function Go(){Zo();for(;;){if(ml!=142)break;Dl(142),jl(162),Zo()}}function Yo(){kl.startNonterminal("FTMildNot",vl),eu();for(;;){jl(212);if(ml!=193)break;_l(193),jl(53),_l(154),jl(162),Hl(),eu()}kl.endNonterminal("FTMildNot",vl)}function Zo(){tu();for(;;){jl(212);if(ml!=193)break;Dl(193),jl(53),Dl(154),jl(162),tu()}}function eu(){kl.startNonterminal("FTUnaryNot",vl),ml==143&&_l(143),jl(155),Hl(),nu(),kl.endNonterminal("FTUnaryNot",vl)}function tu(){ml==143&&Dl(143),jl(155),ru()}function nu(){kl.startNonterminal("FTPrimaryWithOptions",vl),iu(),jl(214),ml==259&&(Hl(),Pu()),ml==264&&(Hl(),Vo()),kl.endNonterminal("FTPrimaryWithOptions",vl)}function ru(){su(),jl(214),ml==259&&Hu(),ml==264&&$o()}function iu(){kl.startNonterminal("FTPrimary",vl);switch(ml){case 34:_l(34),jl(162),Hl(),Wo(),_l(37);break;case 35:lu();break;default:ou(),jl(215),ml==195&&(Hl(),du())}kl.endNonterminal("FTPrimary",vl)}function su(){switch(ml){case 34:Dl(34),jl(162),Xo(),Dl(37);break;case 35:cu();break;default:uu(),jl(215),ml==195&&vu()}}function ou(){kl.startNonterminal("FTWords",vl),au(),jl(221);if(ml==71||ml==76||ml==210)Hl(),hu();kl.endNonterminal("FTWords",vl)}function uu(){fu(),jl(221),(ml==71||ml==76||ml==210)&&pu()}function au(){kl.startNonterminal("FTWordsValue",vl);switch(ml){case 11:_l(11);break;default:_l(276),jl(267),Hl(),G(),_l(282)}kl.endNonterminal("FTWordsValue",vl)}function fu(){switch(ml){case 11:Dl(11);break;default:Dl(276),jl(267),Y(),Dl(282)}}function lu(){kl.startNonterminal("FTExtensionSelection",vl);for(;;){Hl(),Tr(),jl(100);if(ml!=35)break}_l(276),jl(166),ml!=282&&(Hl(),Wo()),_l(282),kl.endNonterminal("FTExtensionSelection",vl)}function cu(){for(;;){Nr(),jl(100);if(ml!=35)break}Dl(276),jl(166),ml!=282&&Xo(),Dl(282)}function hu(){kl.startNonterminal("FTAnyallOption",vl);switch(ml){case 76:_l(76),jl(218),ml==272&&_l(272);break;case 71:_l(71),jl(219),ml==273&&_l(273);break;default:_l(210)}kl.endNonterminal("FTAnyallOption",vl)}function pu(){switch(ml){case 76:Dl(76),jl(218),ml==272&&Dl(272);break;case 71:Dl(71),jl(219),ml==273&&Dl(273);break;default:Dl(210)}}function du(){kl.startNonterminal("FTTimes",vl),_l(195),jl(149),Hl(),mu(),_l(247),kl.endNonterminal("FTTimes",vl)}function vu(){Dl(195),jl(149),gu(),Dl(247)}function mu(){kl.startNonterminal("FTRange",vl);switch(ml){case 130:_l(130),jl(265),Hl(),Wn();break;case 81:_l(81),jl(125);switch(ml){case 173:_l(173),jl(265),Hl(),Wn();break;default:_l(183),jl(265),Hl(),Wn()}break;default:_l(140),jl(265),Hl(),Wn(),_l(248),jl(265),Hl(),Wn()}kl.endNonterminal("FTRange",vl)}function gu(){switch(ml){case 130:Dl(130),jl(265),Xn();break;case 81:Dl(81),jl(125);switch(ml){case 173:Dl(173),jl(265),Xn();break;default:Dl(183),jl(265),Xn()}break;default:Dl(140),jl(265),Xn(),Dl(248),jl(265),Xn()}}function yu(){kl.startNonterminal("FTPosFilter",vl);switch(ml){case 202:wu();break;case 269:Su();break;case 117:Tu();break;case 115:case 223:Lu();break;default:_u()}kl.endNonterminal("FTPosFilter",vl)}function bu(){switch(ml){case 202:Eu();break;case 269:xu();break;case 117:Nu();break;case 115:case 223:Au();break;default:Du()}}function wu(){kl.startNonterminal("FTOrder",vl),_l(202),kl.endNonterminal("FTOrder",vl)}function Eu(){Dl(202)}function Su(){kl.startNonterminal("FTWindow",vl),_l(269),jl(265),Hl(),Wn(),Hl(),Cu(),kl.endNonterminal("FTWindow",vl)}function xu(){Dl(269),jl(265),Xn(),ku()}function Tu(){kl.startNonterminal("FTDistance",vl),_l(117),jl(149),Hl(),mu(),Hl(),Cu(),kl.endNonterminal("FTDistance",vl)}function Nu(){Dl(117),jl(149),gu(),ku()}function Cu(){kl.startNonterminal("FTUnit",vl);switch(ml){case 273:_l(273);break;case 232:_l(232);break;default:_l(205)}kl.endNonterminal("FTUnit",vl)}function ku(){switch(ml){case 273:Dl(273);break;case 232:Dl(232);break;default:Dl(205)}}function Lu(){kl.startNonterminal("FTScope",vl);switch(ml){case 223:_l(223);break;default:_l(115)}jl(132),Hl(),Ou(),kl.endNonterminal("FTScope",vl)}function Au(){switch(ml){case 223:Dl(223);break;default:Dl(115)}jl(132),Mu()}function Ou(){kl.startNonterminal("FTBigUnit",vl);switch(ml){case 231:_l(231);break;default:_l(204)}kl.endNonterminal("FTBigUnit",vl)}function Mu(){switch(ml){case 231:Dl(231);break;default:Dl(204)}}function _u(){kl.startNonterminal("FTContent",vl);switch(ml){case 81:_l(81),jl(117);switch(ml){case 237:_l(237);break;default:_l(126)}break;default:_l(127),jl(42),_l(100)}kl.endNonterminal("FTContent",vl)}function Du(){switch(ml){case 81:Dl(81),jl(117);switch(ml){case 237:Dl(237);break;default:Dl(126)}break;default:Dl(127),jl(42),Dl(100)}}function Pu(){kl.startNonterminal("FTMatchOptions",vl);for(;;){_l(259),jl(181),Hl(),Bu(),jl(214);if(ml!=259)break}kl.endNonterminal("FTMatchOptions",vl)}function Hu(){for(;;){Dl(259),jl(181),ju(),jl(214);if(ml!=259)break}}function Bu(){kl.startNonterminal("FTMatchOption",vl);switch(ml){case 188:Fl(161);break;default:pl=ml}switch(pl){case 169:na();break;case 268:case 137404:ia();break;case 246:case 126140:Wu();break;case 238:case 122044:Uu();break;case 114:qu();break;case 239:case 122556:Qu();break;case 199:oa();break;default:Fu()}kl.endNonterminal("FTMatchOption",vl)}function ju(){switch(ml){case 188:Fl(161);break;default:pl=ml}switch(pl){case 169:ra();break;case 268:case 137404:sa();break;case 246:case 126140:Xu();break;case 238:case 122044:zu();break;case 114:Ru();break;case 239:case 122556:Gu();break;case 199:ua();break;default:Iu()}}function Fu(){kl.startNonterminal("FTCaseOption",vl);switch(ml){case 88:_l(88),jl(124);switch(ml){case 158:_l(158);break;default:_l(230)}break;case 177:_l(177);break;default:_l(258)}kl.endNonterminal("FTCaseOption",vl)}function Iu(){switch(ml){case 88:Dl(88),jl(124);switch(ml){case 158:Dl(158);break;default:Dl(230)}break;case 177:Dl(177);break;default:Dl(258)}}function qu(){kl.startNonterminal("FTDiacriticsOption",vl),_l(114),jl(124);switch(ml){case 158:_l(158);break;default:_l(230)}kl.endNonterminal("FTDiacriticsOption",vl)}function Ru(){Dl(114),jl(124);switch(ml){case 158:Dl(158);break;default:Dl(230)}}function Uu(){kl.startNonterminal("FTStemOption",vl);switch(ml){case 238:_l(238);break;default:_l(188),jl(74),_l(238)}kl.endNonterminal("FTStemOption",vl)}function zu(){switch(ml){case 238:Dl(238);break;default:Dl(188),jl(74),Dl(238)}}function Wu(){kl.startNonterminal("FTThesaurusOption",vl);switch(ml){case 246:_l(246),jl(142);switch(ml){case 81:Hl(),Vu();break;case 109:_l(109);break;default:_l(34),jl(112);switch(ml){case 81:Hl(),Vu();break;default:_l(109)}for(;;){jl(101);if(ml!=41)break;_l(41),jl(31),Hl(),Vu()}_l(37)}break;default:_l(188),jl(78),_l(246)}kl.endNonterminal("FTThesaurusOption",vl)}function Xu(){switch(ml){case 246:Dl(246),jl(142);switch(ml){case 81:$u();break;case 109:Dl(109);break;default:Dl(34),jl(112);switch(ml){case 81:$u();break;default:Dl(109)}for(;;){jl(101);if(ml!=41)break;Dl(41),jl(31),$u()}Dl(37)}break;default:Dl(188),jl(78),Dl(246)}}function Vu(){kl.startNonterminal("FTThesaurusID",vl),_l(81),jl(15),_l(7),jl(220),ml==217&&(_l(217),jl(17),_l(11)),jl(216);switch(ml){case 81:Fl(165);break;default:pl=ml}if(pl==130||pl==140||pl==88657||pl==93777)Hl(),Ju(),jl(58),_l(175);kl.endNonterminal("FTThesaurusID",vl)}function $u(){Dl(81),jl(15),Dl(7),jl(220),ml==217&&(Dl(217),jl(17),Dl(11)),jl(216);switch(ml){case 81:Fl(165);break;default:pl=ml}if(pl==130||pl==140||pl==88657||pl==93777)Ku(),jl(58),Dl(175)}function Ju(){kl.startNonterminal("FTLiteralRange",vl);switch(ml){case 130:_l(130),jl(16),_l(8);break;case 81:_l(81),jl(125);switch(ml){case 173:_l(173),jl(16),_l(8);break;default:_l(183),jl(16),_l(8)}break;default:_l(140),jl(16),_l(8),jl(79),_l(248),jl(16),_l(8)}kl.endNonterminal("FTLiteralRange",vl)}function Ku(){switch(ml){case 130:Dl(130),jl(16),Dl(8);break;case 81:Dl(81),jl(125);switch(ml){case 173:Dl(173),jl(16),Dl(8);break;default:Dl(183),jl(16),Dl(8)}break;default:Dl(140),jl(16),Dl(8),jl(79),Dl(248),jl(16),Dl(8)}}function Qu(){kl.startNonterminal("FTStopWordOption",vl);switch(ml){case 239:_l(239),jl(86),_l(273),jl(142);switch(ml){case 109:_l(109);for(;;){jl(217);if(ml!=131&&ml!=254)break;Hl(),ea()}break;default:Hl(),Yu();for(;;){jl(217);if(ml!=131&&ml!=254)break;Hl(),ea()}}break;default:_l(188),jl(75),_l(239),jl(86),_l(273)}kl.endNonterminal("FTStopWordOption",vl)}function Gu(){switch(ml){case 239:Dl(239),jl(86),Dl(273),jl(142);switch(ml){case 109:Dl(109);for(;;){jl(217);if(ml!=131&&ml!=254)break;ta()}break;default:Zu();for(;;){jl(217);if(ml!=131&&ml!=254)break;ta()}}break;default:Dl(188),jl(75),Dl(239),jl(86),Dl(273)}}function Yu(){kl.startNonterminal("FTStopWords",vl);switch(ml){case 81:_l(81),jl(15),_l(7);break;default:_l(34),jl(17),_l(11);for(;;){jl(101);if(ml!=41)break;_l(41),jl(17),_l(11)}_l(37)}kl.endNonterminal("FTStopWords",vl)}function Zu(){switch(ml){case 81:Dl(81),jl(15),Dl(7);break;default:Dl(34),jl(17),Dl(11);for(;;){jl(101);if(ml!=41)break;Dl(41),jl(17),Dl(11)}Dl(37)}}function ea(){kl.startNonterminal("FTStopWordsInclExcl",vl);switch(ml){case 254:_l(254);break;default:_l(131)}jl(99),Hl(),Yu(),kl.endNonterminal("FTStopWordsInclExcl",vl)}function ta(){switch(ml){case 254:Dl(254);break;default:Dl(131)}jl(99),Zu()}function na(){kl.startNonterminal("FTLanguageOption",vl),_l(169),jl(17),_l(11),kl.endNonterminal("FTLanguageOption",vl)}function ra(){Dl(169),jl(17),Dl(11)}function ia(){kl.startNonterminal("FTWildCardOption",vl);switch(ml){case 268:_l(268);break;default:_l(188),jl(84),_l(268)}kl.endNonterminal("FTWildCardOption",vl)}function sa(){switch(ml){case 268:Dl(268);break;default:Dl(188),jl(84),Dl(268)}}function oa(){kl.startNonterminal("FTExtensionOption",vl),_l(199),jl(253),Hl(),Ma(),jl(17),_l(11),kl.endNonterminal("FTExtensionOption",vl)}function ua(){Dl(199),jl(253),_a(),jl(17),Dl(11)}function aa(){kl.startNonterminal("FTIgnoreOption",vl),_l(271),jl(42),_l(100),jl(265),Hl(),Jn(),kl.endNonterminal("FTIgnoreOption",vl)}function fa(){Dl(271),jl(42),Dl(100),jl(265),Kn()}function la(){kl.startNonterminal("CollectionDecl",vl),_l(95),jl(253),Hl(),Ma(),jl(107),ml==79&&(Hl(),ca()),kl.endNonterminal("CollectionDecl",vl)}function ca(){kl.startNonterminal("CollectionTypeDecl",vl),_l(79),jl(183),Hl(),_s(),jl(156),ml!=53&&(Hl(),ms()),kl.endNonterminal("CollectionTypeDecl",vl)}function ha(){kl.startNonterminal("IndexName",vl),Ma(),kl.endNonterminal("IndexName",vl)}function pa(){kl.startNonterminal("IndexDomainExpr",vl),Cr(),kl.endNonterminal("IndexDomainExpr",vl)}function da(){kl.startNonterminal("IndexKeySpec",vl),va(),ml==79&&(Hl(),ma()),jl(146),ml==94&&(Hl(),ya()),kl.endNonterminal("IndexKeySpec",vl)}function va(){kl.startNonterminal("IndexKeyExpr",vl),Cr(),kl.endNonterminal("IndexKeyExpr",vl)}function ma(){kl.startNonterminal("IndexKeyTypeDecl",vl),_l(79),jl(253),Hl(),ga(),jl(169);if(ml==39||ml==40||ml==64)Hl(),ms();kl.endNonterminal("IndexKeyTypeDecl",vl)}function ga(){kl.startNonterminal("AtomicType",vl),Ma(),kl.endNonterminal("AtomicType",vl)}function ya(){kl.startNonterminal("IndexKeyCollation",vl),_l(94),jl(15),_l(7),kl.endNonterminal("IndexKeyCollation",vl)}function ba(){kl.startNonterminal("IndexDecl",vl),_l(155),jl(253),Hl(),ha(),jl(65),_l(197),jl(63),_l(192),jl(264),Hl(),pa(),_l(87),jl(264),Hl(),da();for(;;){jl(103);if(ml!=41)break;_l(41),jl(264),Hl(),da()}kl.endNonterminal("IndexDecl",vl)}function wa(){kl.startNonterminal("ICDecl",vl),_l(161),jl(40),_l(97),jl(253),Hl(),Ma(),jl(120);switch(ml){case 197:Hl(),Ea();break;default:Hl(),Na()}kl.endNonterminal("ICDecl",vl)}function Ea(){kl.startNonterminal("ICCollection",vl),_l(197),jl(39),_l(95),jl(253),Hl(),Ma(),jl(140);switch(ml){case 31:Hl(),Sa();break;case 191:Hl(),xa();break;default:Hl(),Ta()}kl.endNonterminal("ICCollection",vl)}function Sa(){kl.startNonterminal("ICCollSequence",vl),ai(),jl(37),_l(92),jl(267),Hl(),Cf(),kl.endNonterminal("ICCollSequence",vl)}function xa(){kl.startNonterminal("ICCollSequenceUnique",vl),_l(191),jl(21),Hl(),ai(),jl(37),_l(92),jl(80),_l(255),jl(57),_l(168),jl(264),Hl(),Cr(),kl.endNonterminal("ICCollSequenceUnique",vl)}function Ta(){kl.startNonterminal("ICCollNode",vl),_l(138),jl(62),_l(191),jl(21),Hl(),ai(),jl(37),_l(92),jl(267),Hl(),Cf(),kl.endNonterminal("ICCollNode",vl)}function Na(){kl.startNonterminal("ICForeignKey",vl),_l(139),jl(57),_l(168),jl(51),Hl(),Ca(),Hl(),ka(),kl.endNonterminal("ICForeignKey",vl)}function Ca(){kl.startNonterminal("ICForeignKeySource",vl),_l(140),jl(39),Hl(),La(),kl.endNonterminal("ICForeignKeySource",vl)}function ka(){kl.startNonterminal("ICForeignKeyTarget",vl),_l(248),jl(39),Hl(),La(),kl.endNonterminal("ICForeignKeyTarget",vl)}function La(){kl.startNonterminal("ICForeignKeyValues",vl),_l(95),jl(253),Hl(),Ma(),jl(62),_l(191),jl(21),Hl(),ai(),jl(57),_l(168),jl(264),Hl(),Cr(),kl.endNonterminal("ICForeignKeyValues",vl)}function Aa(){Dl(36);for(;;){Il(89);if(ml==50)break;switch(ml){case 24:Dl(24);break;default:Aa()}}Dl(50)}function Oa(){switch(ml){case 22:Dl(22);break;default:Aa()}}function Ma(){kl.startNonterminal("EQName",vl),Il(248);switch(ml){case 82:_l(82);break;case 96:_l(96);break;case 120:_l(120);break;case 121:_l(121);break;case 124:_l(124);break;case 145:_l(145);break;case 152:_l(152);break;case 165:_l(165);break;case 185:_l(185);break;case 191:_l(191);break;case 216:_l(216);break;case 226:_l(226);break;case 227:_l(227);break;case 243:_l(243);break;case 244:_l(244);break;case 253:_l(253);break;default:Da()}kl.endNonterminal("EQName",vl)}function _a(){Il(248);switch(ml){case 82:Dl(82);break;case 96:Dl(96);break;case 120:Dl(120);break;case 121:Dl(121);break;case 124:Dl(124);break;case 145:Dl(145);break;case 152:Dl(152);break;case 165:Dl(165);break;case 185:Dl(185);break;case 191:Dl(191);break;case 216:Dl(216);break;case 226:Dl(226);break;case 227:Dl(227);break;case 243:Dl(243);break;case 244:Dl(244);break;case 253:Dl(253);break;default:Pa()}}function Da(){kl.startNonterminal("FunctionName",vl);switch(ml){case 6:_l(6);break;case 70:_l(70);break;case 73:_l(73);break;case 74:_l(74);break;case 75:_l(75);break;case 79:_l(79);break;case 80:_l(80);break;case 84:_l(84);break;case 88:_l(88);break;case 89:_l(89);break;case 90:_l(90);break;case 93:_l(93);break;case 94:_l(94);break;case 103:_l(103);break;case 105:_l(105);break;case 108:_l(108);break;case 109:_l(109);break;case 110:_l(110);break;case 111:_l(111);break;case 112:_l(112);break;case 113:_l(113);break;case 118:_l(118);break;case 119:_l(119);break;case 122:_l(122);break;case 123:_l(123);break;case 126:_l(126);break;case 128:_l(128);break;case 129:_l(129);break;case 131:_l(131);break;case 134:_l(134);break;case 135:_l(135);break;case 136:_l(136);break;case 137:_l(137);break;case 146:_l(146);break;case 148:_l(148);break;case 150:_l(150);break;case 151:_l(151);break;case 153:_l(153);break;case 159:_l(159);break;case 160:_l(160);break;case 162:_l(162);break;case 163:_l(163);break;case 164:_l(164);break;case 170:_l(170);break;case 172:_l(172);break;case 174:_l(174);break;case 178:_l(178);break;case 180:_l(180);break;case 181:_l(181);break;case 182:_l(182);break;case 184:_l(184);break;case 186:_l(186);break;case 198:_l(198);break;case 200:_l(200);break;case 201:_l(201);break;case 202:_l(202);break;case 206:_l(206);break;case 212:_l(212);break;case 213:_l(213);break;case 218:_l(218);break;case 219:_l(219);break;case 220:_l(220);break;case 224:_l(224);break;case 229:_l(229);break;case 235:_l(235);break;case 236:_l(236);break;case 237:_l(237);break;case 248:_l(248);break;case 249:_l(249);break;case 250:_l(250);break;case 254:_l(254);break;case 256:_l(256);break;case 260:_l(260);break;case 266:_l(266);break;case 270:_l(270);break;case 274:_l(274);break;case 72:_l(72);break;case 81:_l(81);break;case 83:_l(83);break;case 85:_l(85);break;case 86:_l(86);break;case 91:_l(91);break;case 98:_l(98);break;case 101:_l(101);break;case 102:_l(102);break;case 104:_l(104);break;case 106:_l(106);break;case 125:_l(125);break;case 132:_l(132);break;case 133:_l(133);break;case 141:_l(141);break;case 154:_l(154);break;case 155:_l(155);break;case 161:_l(161);break;case 171:_l(171);break;case 192:_l(192);break;case 199:_l(199);break;case 203:_l(203);break;case 222:_l(222);break;case 225:_l(225);break;case 228:_l(228);break;case 234:_l(234);break;case 240:_l(240);break;case 251:_l(251);break;case 252:_l(252);break;case 257:_l(257);break;case 261:_l(261);break;case 262:_l(262);break;case 263:_l(263);break;case 267:_l(267);break;case 97:_l(97);break;case 176:_l(176);break;case 221:_l(221);break;case 194:_l(194);break;case 167:_l(167);break;default:_l(78)}kl.endNonterminal("FunctionName",vl)}function Pa(){switch(ml){case 6:Dl(6);break;case 70:Dl(70);break;case 73:Dl(73);break;case 74:Dl(74);break;case 75:Dl(75);break;case 79:Dl(79);break;case 80:Dl(80);break;case 84:Dl(84);break;case 88:Dl(88);break;case 89:Dl(89);break;case 90:Dl(90);break;case 93:Dl(93);break;case 94:Dl(94);break;case 103:Dl(103);break;case 105:Dl(105);break;case 108:Dl(108);break;case 109:Dl(109);break;case 110:Dl(110);break;case 111:Dl(111);break;case 112:Dl(112);break;case 113:Dl(113);break;case 118:Dl(118);break;case 119:Dl(119);break;case 122:Dl(122);break;case 123:Dl(123);break;case 126:Dl(126);break;case 128:Dl(128);break;case 129:Dl(129);break;case 131:Dl(131);break;case 134:Dl(134);break;case 135:Dl(135);break;case 136:Dl(136);break;case 137:Dl(137);break;case 146:Dl(146);break;case 148:Dl(148);break;case 150:Dl(150);break;case 151:Dl(151);break;case 153:Dl(153);break;case 159:Dl(159);break;case 160:Dl(160);break;case 162:Dl(162);break;case 163:Dl(163);break;case 164:Dl(164);break;case 170:Dl(170);break;case 172:Dl(172);break;case 174:Dl(174);break;case 178:Dl(178);break;case 180:Dl(180);break;case 181:Dl(181);break;case 182:Dl(182);break;case 184:Dl(184);break;case 186:Dl(186);break;case 198:Dl(198);break;case 200:Dl(200);break;case 201:Dl(201);break;case 202:Dl(202);break;case 206:Dl(206);break;case 212:Dl(212);break;case 213:Dl(213);break;case 218:Dl(218);break;case 219:Dl(219);break;case 220:Dl(220);break;case 224:Dl(224);break;case 229:Dl(229);break;case 235:Dl(235);break;case 236:Dl(236);break;case 237:Dl(237);break;case 248:Dl(248);break;case 249:Dl(249);break;case 250:Dl(250);break;case 254:Dl(254);break;case 256:Dl(256);break;case 260:Dl(260);break;case 266:Dl(266);break;case 270:Dl(270);break;case 274:Dl(274);break;case 72:Dl(72);break;case 81:Dl(81);break;case 83:Dl(83);break;case 85:Dl(85);break;case 86:Dl(86);break;case 91:Dl(91);break;case 98:Dl(98);break;case 101:Dl(101);break;case 102:Dl(102);break;case 104:Dl(104);break;case 106:Dl(106);break;case 125:Dl(125);break;case 132:Dl(132);break;case 133:Dl(133);break;case 141:Dl(141);break;case 154:Dl(154);break;case 155:Dl(155);break;case 161:Dl(161);break;case 171:Dl(171);break;case 192:Dl(192);break;case 199:Dl(199);break;case 203:Dl(203);break;case 222:Dl(222);break;case 225:Dl(225);break;case 228:Dl(228);break;case 234:Dl(234);break;case 240:Dl(240);break;case 251:Dl(251);break;case 252:Dl(252);break;case 257:Dl(257);break;case 261:Dl(261);break;case 262:Dl(262);break;case 263:Dl(263);break;case 267:Dl(267);break;case 97:Dl(97);break;case 176:Dl(176);break;case 221:Dl(221);break;case 194:Dl(194);break;case 167:Dl(167);break;default:Dl(78)}}function Ha(){kl.startNonterminal("NCName",vl);switch(ml){case 19:_l(19);break;case 70:_l(70);break;case 75:_l(75);break;case 79:_l(79);break;case 80:_l(80);break;case 84:_l(84);break;case 88:_l(88);break;case 89:_l(89);break;case 90:_l(90);break;case 94:_l(94);break;case 105:_l(105);break;case 109:_l(109);break;case 113:_l(113);break;case 118:_l(118);break;case 122:_l(122);break;case 123:_l(123);break;case 126:_l(126);break;case 128:_l(128);break;case 131:_l(131);break;case 137:_l(137);break;case 146:_l(146);break;case 148:_l(148);break;case 150:_l(150);break;case 151:_l(151);break;case 160:_l(160);break;case 162:_l(162);break;case 163:_l(163);break;case 164:_l(164);break;case 172:_l(172);break;case 174:_l(174);break;case 178:_l(178);break;case 180:_l(180);break;case 181:_l(181);break;case 186:_l(186);break;case 198:_l(198);break;case 200:_l(200);break;case 201:_l(201);break;case 220:_l(220);break;case 224:_l(224);break;case 236:_l(236);break;case 237:_l(237);break;case 248:_l(248);break;case 249:_l(249);break;case 254:_l(254);break;case 266:_l(266);break;case 270:_l(270);break;case 73:_l(73);break;case 74:_l(74);break;case 82:_l(82);break;case 93:_l(93);break;case 96:_l(96);break;case 103:_l(103);break;case 108:_l(108);break;case 110:_l(110);break;case 111:_l(111);break;case 112:_l(112);break;case 119:_l(119);break;case 120:_l(120);break;case 121:_l(121);break;case 124:_l(124);break;case 129:_l(129);break;case 134:_l(134);break;case 135:_l(135);break;case 136:_l(136);break;case 145:_l(145);break;case 152:_l(152);break;case 153:_l(153);break;case 159:_l(159);break;case 165:_l(165);break;case 170:_l(170);break;case 182:_l(182);break;case 184:_l(184);break;case 185:_l(185);break;case 191:_l(191);break;case 202:_l(202);break;case 206:_l(206);break;case 212:_l(212);break;case 213:_l(213);break;case 216:_l(216);break;case 218:_l(218);break;case 219:_l(219);break;case 226:_l(226);break;case 227:_l(227);break;case 229:_l(229);break;case 235:_l(235);break;case 243:_l(243);break;case 244:_l(244);break;case 250:_l(250);break;case 253:_l(253);break;case 256:_l(256);break;case 260:_l(260);break;case 262:_l(262);break;case 274:_l(274);break;case 72:_l(72);break;case 81:_l(81);break;case 83:_l(83);break;case 85:_l(85);break;case 86:_l(86);break;case 91:_l(91);break;case 98:_l(98);break;case 101:_l(101);break;case 102:_l(102);break;case 104:_l(104);break;case 106:_l(106);break;case 125:_l(125);break;case 132:_l(132);break;case 133:_l(133);break;case 141:_l(141);break;case 154:_l(154);break;case 155:_l(155);break;case 161:_l(161);break;case 171:_l(171);break;case 192:_l(192);break;case 199:_l(199);break;case 203:_l(203);break;case 222:_l(222);break;case 225:_l(225);break;case 228:_l(228);break;case 234:_l(234);break;case 240:_l(240);break;case 251:_l(251);break;case 252:_l(252);break;case 257:_l(257);break;case 261:_l(261);break;case 263:_l(263);break;case 267:_l(267);break;case 97:_l(97);break;case 176:_l(176);break;default:_l(221)}kl.endNonterminal("NCName",vl)}function Ba(){switch(ml){case 19:Dl(19);break;case 70:Dl(70);break;case 75:Dl(75);break;case 79:Dl(79);break;case 80:Dl(80);break;case 84:Dl(84);break;case 88:Dl(88);break;case 89:Dl(89);break;case 90:Dl(90);break;case 94:Dl(94);break;case 105:Dl(105);break;case 109:Dl(109);break;case 113:Dl(113);break;case 118:Dl(118);break;case 122:Dl(122);break;case 123:Dl(123);break;case 126:Dl(126);break;case 128:Dl(128);break;case 131:Dl(131);break;case 137:Dl(137);break;case 146:Dl(146);break;case 148:Dl(148);break;case 150:Dl(150);break;case 151:Dl(151);break;case 160:Dl(160);break;case 162:Dl(162);break;case 163:Dl(163);break;case 164:Dl(164);break;case 172:Dl(172);break;case 174:Dl(174);break;case 178:Dl(178);break;case 180:Dl(180);break;case 181:Dl(181);break;case 186:Dl(186);break;case 198:Dl(198);break;case 200:Dl(200);break;case 201:Dl(201);break;case 220:Dl(220);break;case 224:Dl(224);break;case 236:Dl(236);break;case 237:Dl(237);break;case 248:Dl(248);break;case 249:Dl(249);break;case 254:Dl(254);break;case 266:Dl(266);break;case 270:Dl(270);break;case 73:Dl(73);break;case 74:Dl(74);break;case 82:Dl(82);break;case 93:Dl(93);break;case 96:Dl(96);break;case 103:Dl(103);break;case 108:Dl(108);break;case 110:Dl(110);break;case 111:Dl(111);break;case 112:Dl(112);break;case 119:Dl(119);break;case 120:Dl(120);break;case 121:Dl(121);break;case 124:Dl(124);break;case 129:Dl(129);break;case 134:Dl(134);break;case 135:Dl(135);break;case 136:Dl(136);break;case 145:Dl(145);break;case 152:Dl(152);break;case 153:Dl(153);break;case 159:Dl(159);break;case 165:Dl(165);break;case 170:Dl(170);break;case 182:Dl(182);break;case 184:Dl(184);break;case 185:Dl(185);break;case 191:Dl(191);break;case 202:Dl(202);break;case 206:Dl(206);break;case 212:Dl(212);break;case 213:Dl(213);break;case 216:Dl(216);break;case 218:Dl(218);break;case 219:Dl(219);break;case 226:Dl(226);break;case 227:Dl(227);break;case 229:Dl(229);break;case 235:Dl(235);break;case 243:Dl(243);break;case 244:Dl(244);break;case 250:Dl(250);break;case 253:Dl(253);break;case 256:Dl(256);break;case 260:Dl(260);break;case 262:Dl(262);break;case 274:Dl(274);break;case 72:Dl(72);break;case 81:Dl(81);break;case 83:Dl(83);break;case 85:Dl(85);break;case 86:Dl(86);break;case 91:Dl(91);break;case 98:Dl(98);break;case 101:Dl(101);break;case 102:Dl(102);break;case 104:Dl(104);break;case 106:Dl(106);break;case 125:Dl(125);break;case 132:Dl(132);break;case 133:Dl(133);break;case 141:Dl(141);break;case 154:Dl(154);break;case 155:Dl(155);break;case 161:Dl(161);break;case 171:Dl(171);break;case 192:Dl(192);break;case 199:Dl(199);break;case 203:Dl(203);break;case 222:Dl(222);break;case 225:Dl(225);break;case 228:Dl(228);break;case 234:Dl(234);break;case 240:Dl(240);break;case 251:Dl(251);break;case 252:Dl(252);break;case 257:Dl(257);break;case 261:Dl(261);break;case 263:Dl(263);break;case 267:Dl(267);break;case 97:Dl(97);break;case 176:Dl(176);break;default:Dl(221)}}function ja(){kl.startNonterminal("MainModule",vl),l(),Hl(),Fa(),kl.endNonterminal("MainModule",vl)}function Fa(){kl.startNonterminal("Program",vl),za(),kl.endNonterminal("Program",vl)}function Ia(){kl.startNonterminal("Statements",vl);for(;;){jl(274);switch(ml){case 34:Fl(269);break;case 35:ql(250);break;case 46:Fl(281);break;case 47:Fl(263);break;case 54:ql(4);break;case 55:ql(1);break;case 59:ql(3);break;case 66:Fl(255);break;case 68:Fl(271);break;case 77:Fl(56);break;case 82:Fl(278);break;case 121:Fl(277);break;case 132:Fl(202);break;case 137:Fl(206);break;case 174:Fl(204);break;case 218:Fl(205);break;case 219:Fl(208);break;case 260:Fl(209);break;case 276:Fl(273);break;case 278:Fl(272);break;case 5:case 45:Fl(186);break;case 31:case 32:Fl(253);break;case 40:case 42:Fl(265);break;case 86:case 102:Fl(200);break;case 110:case 159:Fl(207);break;case 124:case 165:Fl(191);break;case 184:case 216:Fl(266);break;case 103:case 129:case 235:case 262:Fl(197);break;case 8:case 9:case 10:case 11:case 44:Fl(192);break;case 96:case 119:case 202:case 244:case 250:case 256:Fl(203);break;case 73:case 74:case 93:case 111:case 112:case 135:case 136:case 206:case 212:case 213:case 229:Fl(198);break;case 6:case 70:case 72:case 75:case 78:case 79:case 80:case 81:case 83:case 84:case 85:case 88:case 89:case 90:case 91:case 94:case 97:case 98:case 101:case 104:case 105:case 106:case 108:case 109:case 113:case 118:case 120:case 122:case 123:case 125:case 126:case 128:case 131:case 133:case 134:case 141:case 145:case 146:case 148:case 150:case 151:case 152:case 153:case 154:case 155:case 160:case 161:case 162:case 163:case 164:case 167:case 170:case 171:case 172:case 176:case 178:case 180:case 181:case 182:case 185:case 186:case 191:case 192:case 194:case 198:case 199:case 200:case 201:case 203:case 220:case 221:case 222:case 224:case 225:case 226:case 227:case 228:case 234:case 236:case 237:case 240:case 243:case 248:case 249:case 251:case 252:case 253:case 254:case 257:case 261:case 263:case 266:case 267:case 270:case 274:Fl(195);break;default:pl=ml}if(pl!=25&&pl!=282&&pl!=12805&&pl!=12806&&pl!=12808&&pl!=12809&&pl!=12810&&pl!=12811&&pl!=12844&&pl!=12845&&pl!=12846&&pl!=12870&&pl!=12872&&pl!=12873&&pl!=12874&&pl!=12875&&pl!=12878&&pl!=12879&&pl!=12880&&pl!=12881&&pl!=12882&&pl!=12883&&pl!=12884&&pl!=12885&&pl!=12886&&pl!=12888&&pl!=12889&&pl!=12890&&pl!=12891&&pl!=12893&&pl!=12894&&pl!=12896&&pl!=12897&&pl!=12898&&pl!=12901&&pl!=12902&&pl!=12903&&pl!=12904&&pl!=12905&&pl!=12906&&pl!=12908&&pl!=12909&&pl!=12910&&pl!=12911&&pl!=12912&&pl!=12913&&pl!=12918&&pl!=12919&&pl!=12920&&pl!=12921&&pl!=12922&&pl!=12923&&pl!=12924&&pl!=12925&&pl!=12926&&pl!=12928&&pl!=12929&&pl!=12931&&pl!=12932&&pl!=12933&&pl!=12934&&pl!=12935&&pl!=12936&&pl!=12937&&pl!=12941&&pl!=12945&&pl!=12946&&pl!=12948&&pl!=12950&&pl!=12951&&pl!=12952&&pl!=12953&&pl!=12954&&pl!=12955&&pl!=12959&&pl!=12960&&pl!=12961&&pl!=12962&&pl!=12963&&pl!=12964&&pl!=12965&&pl!=12967&&pl!=12970&&pl!=12971&&pl!=12972&&pl!=12974&&pl!=12976&&pl!=12978&&pl!=12980&&pl!=12981&&pl!=12982&&pl!=12984&&pl!=12985&&pl!=12986&&pl!=12991&&pl!=12992&&pl!=12994&&pl!=12998&&pl!=12999&&pl!=13e3&&pl!=13001&&pl!=13002&&pl!=13003&&pl!=13006&&pl!=13012&&pl!=13013&&pl!=13016&&pl!=13018&&pl!=13019&&pl!=13020&&pl!=13021&&pl!=13022&&pl!=13024&&pl!=13025&&pl!=13026&&pl!=13027&&pl!=13028&&pl!=13029&&pl!=13034&&pl!=13035&&pl!=13036&&pl!=13037&&pl!=13040&&pl!=13043&&pl!=13044&&pl!=13048&&pl!=13049&&pl!=13050&&pl!=13051&&pl!=13052&&pl!=13053&&pl!=13054&&pl!=13056&&pl!=13057&&pl!=13060&&pl!=13061&&pl!=13062&&pl!=13063&&pl!=13066&&pl!=13067&&pl!=13070&&pl!=13074&&pl!=16134&&pl!=20997&&pl!=20998&&pl!=21e3&&pl!=21001&&pl!=21002&&pl!=21003&&pl!=21036&&pl!=21037&&pl!=21038&&pl!=21062&&pl!=21064&&pl!=21065&&pl!=21066&&pl!=21067&&pl!=21070&&pl!=21071&&pl!=21072&&pl!=21073&&pl!=21074&&pl!=21075&&pl!=21076&&pl!=21077&&pl!=21078&&pl!=21080&&pl!=21081&&pl!=21082&&pl!=21083&&pl!=21085&&pl!=21086&&pl!=21088&&pl!=21089&&pl!=21090&&pl!=21093&&pl!=21094&&pl!=21095&&pl!=21096&&pl!=21097&&pl!=21098&&pl!=21100&&pl!=21101&&pl!=21102&&pl!=21103&&pl!=21104&&pl!=21105&&pl!=21110&&pl!=21111&&pl!=21112&&pl!=21113&&pl!=21114&&pl!=21115&&pl!=21116&&pl!=21117&&pl!=21118&&pl!=21120&&pl!=21121&&pl!=21123&&pl!=21124&&pl!=21125&&pl!=21126&&pl!=21127&&pl!=21128&&pl!=21129&&pl!=21133&&pl!=21137&&pl!=21138&&pl!=21140&&pl!=21142&&pl!=21143&&pl!=21144&&pl!=21145&&pl!=21146&&pl!=21147&&pl!=21151&&pl!=21152&&pl!=21153&&pl!=21154&&pl!=21155&&pl!=21156&&pl!=21157&&pl!=21159&&pl!=21162&&pl!=21163&&pl!=21164&&pl!=21166&&pl!=21168&&pl!=21170&&pl!=21172&&pl!=21173&&pl!=21174&&pl!=21176&&pl!=21177&&pl!=21178&&pl!=21183&&pl!=21184&&pl!=21186&&pl!=21190&&pl!=21191&&pl!=21192&&pl!=21193&&pl!=21194&&pl!=21195&&pl!=21198&&pl!=21204&&pl!=21205&&pl!=21208&&pl!=21210&&pl!=21211&&pl!=21212&&pl!=21213&&pl!=21214&&pl!=21216&&pl!=21217&&pl!=21218&&pl!=21219&&pl!=21220&&pl!=21221&&pl!=21226&&pl!=21227&&pl!=21228&&pl!=21229&&pl!=21232&&pl!=21235&&pl!=21236&&pl!=21240&&pl!=21241&&pl!=21242&&pl!=21243&&pl!=21244&&pl!=21245&&pl!=21246&&pl!=21248&&pl!=21249&&pl!=21252&&pl!=21253&&pl!=21254&&pl!=21255&&pl!=21258&&pl!=21259&&pl!=21262&&pl!=21266&&pl!=27141&&pl!=27142&&pl!=27144&&pl!=27145&&pl!=27146&&pl!=27147&&pl!=27180&&pl!=27181&&pl!=27182&&pl!=27206&&pl!=27208&&pl!=27209&&pl!=27210&&pl!=27211&&pl!=27214&&pl!=27215&&pl!=27216&&pl!=27217&&pl!=27218&&pl!=27219&&pl!=27220&&pl!=27221&&pl!=27222&&pl!=27224&&pl!=27225&&pl!=27226&&pl!=27227&&pl!=27229&&pl!=27230&&pl!=27232&&pl!=27233&&pl!=27234&&pl!=27237&&pl!=27238&&pl!=27239&&pl!=27240&&pl!=27241&&pl!=27242&&pl!=27244&&pl!=27245&&pl!=27246&&pl!=27247&&pl!=27248&&pl!=27249&&pl!=27254&&pl!=27255&&pl!=27256&&pl!=27257&&pl!=27258&&pl!=27259&&pl!=27260&&pl!=27261&&pl!=27262&&pl!=27264&&pl!=27265&&pl!=27267&&pl!=27268&&pl!=27269&&pl!=27270&&pl!=27271&&pl!=27272&&pl!=27273&&pl!=27277&&pl!=27281&&pl!=27282&&pl!=27284&&pl!=27286&&pl!=27287&&pl!=27288&&pl!=27289&&pl!=27290&&pl!=27291&&pl!=27295&&pl!=27296&&pl!=27297&&pl!=27298&&pl!=27299&&pl!=27300&&pl!=27301&&pl!=27303&&pl!=27306&&pl!=27307&&pl!=27308&&pl!=27310&&pl!=27312&&pl!=27314&&pl!=27316&&pl!=27317&&pl!=27318&&pl!=27320&&pl!=27321&&pl!=27322&&pl!=27327&&pl!=27328&&pl!=27330&&pl!=27334&&pl!=27335&&pl!=27336&&pl!=27337&&pl!=27338&&pl!=27339&&pl!=27342&&pl!=27348&&pl!=27349&&pl!=27352&&pl!=27354&&pl!=27355&&pl!=27356&&pl!=27357&&pl!=27358&&pl!=27360&&pl!=27361&&pl!=27362&&pl!=27363&&pl!=27364&&pl!=27365&&pl!=27370&&pl!=27371&&pl!=27372&&pl!=27373&&pl!=27376&&pl!=27379&&pl!=27380&&pl!=27384&&pl!=27385&&pl!=27386&&pl!=27387&&pl!=27388&&pl!=27389&&pl!=27390&&pl!=27392&&pl!=27393&&pl!=27396&&pl!=27397&&pl!=27398&&pl!=27399&&pl!=27402&&pl!=27403&&pl!=27406&&pl!=27410&&pl!=90198&&pl!=90214&&pl!=113284&&pl!=144389&&pl!=144390&&pl!=144392&&pl!=144393&&pl!=144394&&pl!=144395&&pl!=144428&&pl!=144429&&pl!=144430&&pl!=144454&&pl!=144456&&pl!=144457&&pl!=144458&&pl!=144459&&pl!=144462&&pl!=144463&&pl!=144464&&pl!=144465&&pl!=144466&&pl!=144467&&pl!=144468&&pl!=144469&&pl!=144470&&pl!=144472&&pl!=144473&&pl!=144474&&pl!=144475&&pl!=144477&&pl!=144478&&pl!=144480&&pl!=144481&&pl!=144482&&pl!=144485&&pl!=144486&&pl!=144487&&pl!=144488&&pl!=144489&&pl!=144490&&pl!=144492&&pl!=144493&&pl!=144494&&pl!=144495&&pl!=144496&&pl!=144497&&pl!=144502&&pl!=144503&&pl!=144504&&pl!=144505&&pl!=144506&&pl!=144507&&pl!=144508&&pl!=144509&&pl!=144510&&pl!=144512&&pl!=144513&&pl!=144515&&pl!=144516&&pl!=144517&&pl!=144518&&pl!=144519&&pl!=144520&&pl!=144521&&pl!=144525&&pl!=144529&&pl!=144530&&pl!=144532&&pl!=144534&&pl!=144535&&pl!=144536&&pl!=144537&&pl!=144538&&pl!=144539&&pl!=144543&&pl!=144544&&pl!=144545&&pl!=144546&&pl!=144547&&pl!=144548&&pl!=144549&&pl!=144551&&pl!=144554&&pl!=144555&&pl!=144556&&pl!=144558&&pl!=144560&&pl!=144562&&pl!=144564&&pl!=144565&&pl!=144566&&pl!=144568&&pl!=144569&&pl!=144570&&pl!=144575&&pl!=144576&&pl!=144578&&pl!=144582&&pl!=144583&&pl!=144584&&pl!=144585&&pl!=144586&&pl!=144587&&pl!=144590&&pl!=144596&&pl!=144597&&pl!=144600&&pl!=144602&&pl!=144603&&pl!=144604&&pl!=144605&&pl!=144606&&pl!=144608&&pl!=144609&&pl!=144610&&pl!=144611&&pl!=144612&&pl!=144613&&pl!=144618&&pl!=144619&&pl!=144620&&pl!=144621&&pl!=144624&&pl!=144627&&pl!=144628&&pl!=144632&&pl!=144633&&pl!=144634&&pl!=144635&&pl!=144636&&pl!=144637&&pl!=144638&&pl!=144640&&pl!=144641&&pl!=144644&&pl!=144645&&pl!=144646&&pl!=144647&&pl!=144650&&pl!=144651&&pl!=144654&&pl!=144658){pl=Ol(6,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Va(),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(6,vl,pl)}}if(pl!=-1&&pl!=16134&&pl!=27141&&pl!=27142&&pl!=27144&&pl!=27145&&pl!=27146&&pl!=27147&&pl!=27180&&pl!=27181&&pl!=27182&&pl!=27206&&pl!=27208&&pl!=27209&&pl!=27210&&pl!=27211&&pl!=27214&&pl!=27215&&pl!=27216&&pl!=27217&&pl!=27218&&pl!=27219&&pl!=27220&&pl!=27221&&pl!=27222&&pl!=27224&&pl!=27225&&pl!=27226&&pl!=27227&&pl!=27229&&pl!=27230&&pl!=27232&&pl!=27233&&pl!=27234&&pl!=27237&&pl!=27238&&pl!=27239&&pl!=27240&&pl!=27241&&pl!=27242&&pl!=27244&&pl!=27245&&pl!=27246&&pl!=27247&&pl!=27248&&pl!=27249&&pl!=27254&&pl!=27255&&pl!=27256&&pl!=27257&&pl!=27258&&pl!=27259&&pl!=27260&&pl!=27261&&pl!=27262&&pl!=27264&&pl!=27265&&pl!=27267&&pl!=27268&&pl!=27269&&pl!=27270&&pl!=27271&&pl!=27272&&pl!=27273&&pl!=27277&&pl!=27281&&pl!=27282&&pl!=27284&&pl!=27286&&pl!=27287&&pl!=27288&&pl!=27289&&pl!=27290&&pl!=27291&&pl!=27295&&pl!=27296&&pl!=27297&&pl!=27298&&pl!=27299&&pl!=27300&&pl!=27301&&pl!=27303&&pl!=27306&&pl!=27307&&pl!=27308&&pl!=27310&&pl!=27312&&pl!=27314&&pl!=27316&&pl!=27317&&pl!=27318&&pl!=27320&&pl!=27321&&pl!=27322&&pl!=27327&&pl!=27328&&pl!=27330&&pl!=27334&&pl!=27335&&pl!=27336&&pl!=27337&&pl!=27338&&pl!=27339&&pl!=27342&&pl!=27348&&pl!=27349&&pl!=27352&&pl!=27354&&pl!=27355&&pl!=27356&&pl!=27357&&pl!=27358&&pl!=27360&&pl!=27361&&pl!=27362&&pl!=27363&&pl!=27364&&pl!=27365&&pl!=27370&&pl!=27371&&pl!=27372&&pl!=27373&&pl!=27376&&pl!=27379&&pl!=27380&&pl!=27384&&pl!=27385&&pl!=27386&&pl!=27387&&pl!=27388&&pl!=27389&&pl!=27390&&pl!=27392&&pl!=27393&&pl!=27396&&pl!=27397&&pl!=27398&&pl!=27399&&pl!=27402&&pl!=27403&&pl!=27406&&pl!=27410&&pl!=90198&&pl!=90214&&pl!=113284)break;Hl(),Xa()}kl.endNonterminal("Statements",vl)}function qa(){for(;;){jl(274);switch(ml){case 34:Fl(269);break;case 35:ql(250);break;case 46:Fl(281);break;case 47:Fl(263);break;case 54:ql(4);break;case 55:ql(1);break;case 59:ql(3);break;case 66:Fl(255);break;case 68:Fl(271);break;case 77:Fl(56);break;case 82:Fl(278);break;case 121:Fl(277);break;case 132:Fl(202);break;case 137:Fl(206);break;case 174:Fl(204);break;case 218:Fl(205);break;case 219:Fl(208);break;case 260:Fl(209);break;case 276:Fl(273);break;case 278:Fl(272);break;case 5:case 45:Fl(186);break;case 31:case 32:Fl(253);break;case 40:case 42:Fl(265);break;case 86:case 102:Fl(200);break;case 110:case 159:Fl(207);break;case 124:case 165:Fl(191);break;case 184:case 216:Fl(266);break;case 103:case 129:case 235:case 262:Fl(197);break;case 8:case 9:case 10:case 11:case 44:Fl(192);break;case 96:case 119:case 202:case 244:case 250:case 256:Fl(203);break;case 73:case 74:case 93:case 111:case 112:case 135:case 136:case 206:case 212:case 213:case 229:Fl(198);break;case 6:case 70:case 72:case 75:case 78:case 79:case 80:case 81:case 83:case 84:case 85:case 88:case 89:case 90:case 91:case 94:case 97:case 98:case 101:case 104:case 105:case 106:case 108:case 109:case 113:case 118:case 120:case 122:case 123:case 125:case 126:case 128:case 131:case 133:case 134:case 141:case 145:case 146:case 148:case 150:case 151:case 152:case 153:case 154:case 155:case 160:case 161:case 162:case 163:case 164:case 167:case 170:case 171:case 172:case 176:case 178:case 180:case 181:case 182:case 185:case 186:case 191:case 192:case 194:case 198:case 199:case 200:case 201:case 203:case 220:case 221:case 222:case 224:case 225:case 226:case 227:case 228:case 234:case 236:case 237:case 240:case 243:case 248:case 249:case 251:case 252:case 253:case 254:case 257:case 261:case 263:case 266:case 267:case 270:case 274:Fl(195);break;default:pl=ml}if(pl!=25&&pl!=282&&pl!=12805&&pl!=12806&&pl!=12808&&pl!=12809&&pl!=12810&&pl!=12811&&pl!=12844&&pl!=12845&&pl!=12846&&pl!=12870&&pl!=12872&&pl!=12873&&pl!=12874&&pl!=12875&&pl!=12878&&pl!=12879&&pl!=12880&&pl!=12881&&pl!=12882&&pl!=12883&&pl!=12884&&pl!=12885&&pl!=12886&&pl!=12888&&pl!=12889&&pl!=12890&&pl!=12891&&pl!=12893&&pl!=12894&&pl!=12896&&pl!=12897&&pl!=12898&&pl!=12901&&pl!=12902&&pl!=12903&&pl!=12904&&pl!=12905&&pl!=12906&&pl!=12908&&pl!=12909&&pl!=12910&&pl!=12911&&pl!=12912&&pl!=12913&&pl!=12918&&pl!=12919&&pl!=12920&&pl!=12921&&pl!=12922&&pl!=12923&&pl!=12924&&pl!=12925&&pl!=12926&&pl!=12928&&pl!=12929&&pl!=12931&&pl!=12932&&pl!=12933&&pl!=12934&&pl!=12935&&pl!=12936&&pl!=12937&&pl!=12941&&pl!=12945&&pl!=12946&&pl!=12948&&pl!=12950&&pl!=12951&&pl!=12952&&pl!=12953&&pl!=12954&&pl!=12955&&pl!=12959&&pl!=12960&&pl!=12961&&pl!=12962&&pl!=12963&&pl!=12964&&pl!=12965&&pl!=12967&&pl!=12970&&pl!=12971&&pl!=12972&&pl!=12974&&pl!=12976&&pl!=12978&&pl!=12980&&pl!=12981&&pl!=12982&&pl!=12984&&pl!=12985&&pl!=12986&&pl!=12991&&pl!=12992&&pl!=12994&&pl!=12998&&pl!=12999&&pl!=13e3&&pl!=13001&&pl!=13002&&pl!=13003&&pl!=13006&&pl!=13012&&pl!=13013&&pl!=13016&&pl!=13018&&pl!=13019&&pl!=13020&&pl!=13021&&pl!=13022&&pl!=13024&&pl!=13025&&pl!=13026&&pl!=13027&&pl!=13028&&pl!=13029&&pl!=13034&&pl!=13035&&pl!=13036&&pl!=13037&&pl!=13040&&pl!=13043&&pl!=13044&&pl!=13048&&pl!=13049&&pl!=13050&&pl!=13051&&pl!=13052&&pl!=13053&&pl!=13054&&pl!=13056&&pl!=13057&&pl!=13060&&pl!=13061&&pl!=13062&&pl!=13063&&pl!=13066&&pl!=13067&&pl!=13070&&pl!=13074&&pl!=16134&&pl!=20997&&pl!=20998&&pl!=21e3&&pl!=21001&&pl!=21002&&pl!=21003&&pl!=21036&&pl!=21037&&pl!=21038&&pl!=21062&&pl!=21064&&pl!=21065&&pl!=21066&&pl!=21067&&pl!=21070&&pl!=21071&&pl!=21072&&pl!=21073&&pl!=21074&&pl!=21075&&pl!=21076&&pl!=21077&&pl!=21078&&pl!=21080&&pl!=21081&&pl!=21082&&pl!=21083&&pl!=21085&&pl!=21086&&pl!=21088&&pl!=21089&&pl!=21090&&pl!=21093&&pl!=21094&&pl!=21095&&pl!=21096&&pl!=21097&&pl!=21098&&pl!=21100&&pl!=21101&&pl!=21102&&pl!=21103&&pl!=21104&&pl!=21105&&pl!=21110&&pl!=21111&&pl!=21112&&pl!=21113&&pl!=21114&&pl!=21115&&pl!=21116&&pl!=21117&&pl!=21118&&pl!=21120&&pl!=21121&&pl!=21123&&pl!=21124&&pl!=21125&&pl!=21126&&pl!=21127&&pl!=21128&&pl!=21129&&pl!=21133&&pl!=21137&&pl!=21138&&pl!=21140&&pl!=21142&&pl!=21143&&pl!=21144&&pl!=21145&&pl!=21146&&pl!=21147&&pl!=21151&&pl!=21152&&pl!=21153&&pl!=21154&&pl!=21155&&pl!=21156&&pl!=21157&&pl!=21159&&pl!=21162&&pl!=21163&&pl!=21164&&pl!=21166&&pl!=21168&&pl!=21170&&pl!=21172&&pl!=21173&&pl!=21174&&pl!=21176&&pl!=21177&&pl!=21178&&pl!=21183&&pl!=21184&&pl!=21186&&pl!=21190&&pl!=21191&&pl!=21192&&pl!=21193&&pl!=21194&&pl!=21195&&pl!=21198&&pl!=21204&&pl!=21205&&pl!=21208&&pl!=21210&&pl!=21211&&pl!=21212&&pl!=21213&&pl!=21214&&pl!=21216&&pl!=21217&&pl!=21218&&pl!=21219&&pl!=21220&&pl!=21221&&pl!=21226&&pl!=21227&&pl!=21228&&pl!=21229&&pl!=21232&&pl!=21235&&pl!=21236&&pl!=21240&&pl!=21241&&pl!=21242&&pl!=21243&&pl!=21244&&pl!=21245&&pl!=21246&&pl!=21248&&pl!=21249&&pl!=21252&&pl!=21253&&pl!=21254&&pl!=21255&&pl!=21258&&pl!=21259&&pl!=21262&&pl!=21266&&pl!=27141&&pl!=27142&&pl!=27144&&pl!=27145&&pl!=27146&&pl!=27147&&pl!=27180&&pl!=27181&&pl!=27182&&pl!=27206&&pl!=27208&&pl!=27209&&pl!=27210&&pl!=27211&&pl!=27214&&pl!=27215&&pl!=27216&&pl!=27217&&pl!=27218&&pl!=27219&&pl!=27220&&pl!=27221&&pl!=27222&&pl!=27224&&pl!=27225&&pl!=27226&&pl!=27227&&pl!=27229&&pl!=27230&&pl!=27232&&pl!=27233&&pl!=27234&&pl!=27237&&pl!=27238&&pl!=27239&&pl!=27240&&pl!=27241&&pl!=27242&&pl!=27244&&pl!=27245&&pl!=27246&&pl!=27247&&pl!=27248&&pl!=27249&&pl!=27254&&pl!=27255&&pl!=27256&&pl!=27257&&pl!=27258&&pl!=27259&&pl!=27260&&pl!=27261&&pl!=27262&&pl!=27264&&pl!=27265&&pl!=27267&&pl!=27268&&pl!=27269&&pl!=27270&&pl!=27271&&pl!=27272&&pl!=27273&&pl!=27277&&pl!=27281&&pl!=27282&&pl!=27284&&pl!=27286&&pl!=27287&&pl!=27288&&pl!=27289&&pl!=27290&&pl!=27291&&pl!=27295&&pl!=27296&&pl!=27297&&pl!=27298&&pl!=27299&&pl!=27300&&pl!=27301&&pl!=27303&&pl!=27306&&pl!=27307&&pl!=27308&&pl!=27310&&pl!=27312&&pl!=27314&&pl!=27316&&pl!=27317&&pl!=27318&&pl!=27320&&pl!=27321&&pl!=27322&&pl!=27327&&pl!=27328&&pl!=27330&&pl!=27334&&pl!=27335&&pl!=27336&&pl!=27337&&pl!=27338&&pl!=27339&&pl!=27342&&pl!=27348&&pl!=27349&&pl!=27352&&pl!=27354&&pl!=27355&&pl!=27356&&pl!=27357&&pl!=27358&&pl!=27360&&pl!=27361&&pl!=27362&&pl!=27363&&pl!=27364&&pl!=27365&&pl!=27370&&pl!=27371&&pl!=27372&&pl!=27373&&pl!=27376&&pl!=27379&&pl!=27380&&pl!=27384&&pl!=27385&&pl!=27386&&pl!=27387&&pl!=27388&&pl!=27389&&pl!=27390&&pl!=27392&&pl!=27393&&pl!=27396&&pl!=27397&&pl!=27398&&pl!=27399&&pl!=27402&&pl!=27403&&pl!=27406&&pl!=27410&&pl!=90198&&pl!=90214&&pl!=113284&&pl!=144389&&pl!=144390&&pl!=144392&&pl!=144393&&pl!=144394&&pl!=144395&&pl!=144428&&pl!=144429&&pl!=144430&&pl!=144454&&pl!=144456&&pl!=144457&&pl!=144458&&pl!=144459&&pl!=144462&&pl!=144463&&pl!=144464&&pl!=144465&&pl!=144466&&pl!=144467&&pl!=144468&&pl!=144469&&pl!=144470&&pl!=144472&&pl!=144473&&pl!=144474&&pl!=144475&&pl!=144477&&pl!=144478&&pl!=144480&&pl!=144481&&pl!=144482&&pl!=144485&&pl!=144486&&pl!=144487&&pl!=144488&&pl!=144489&&pl!=144490&&pl!=144492&&pl!=144493&&pl!=144494&&pl!=144495&&pl!=144496&&pl!=144497&&pl!=144502&&pl!=144503&&pl!=144504&&pl!=144505&&pl!=144506&&pl!=144507&&pl!=144508&&pl!=144509&&pl!=144510&&pl!=144512&&pl!=144513&&pl!=144515&&pl!=144516&&pl!=144517&&pl!=144518&&pl!=144519&&pl!=144520&&pl!=144521&&pl!=144525&&pl!=144529&&pl!=144530&&pl!=144532&&pl!=144534&&pl!=144535&&pl!=144536&&pl!=144537&&pl!=144538&&pl!=144539&&pl!=144543&&pl!=144544&&pl!=144545&&pl!=144546&&pl!=144547&&pl!=144548&&pl!=144549&&pl!=144551&&pl!=144554&&pl!=144555&&pl!=144556&&pl!=144558&&pl!=144560&&pl!=144562&&pl!=144564&&pl!=144565&&pl!=144566&&pl!=144568&&pl!=144569&&pl!=144570&&pl!=144575&&pl!=144576&&pl!=144578&&pl!=144582&&pl!=144583&&pl!=144584&&pl!=144585&&pl!=144586&&pl!=144587&&pl!=144590&&pl!=144596&&pl!=144597&&pl!=144600&&pl!=144602&&pl!=144603&&pl!=144604&&pl!=144605&&pl!=144606&&pl!=144608&&pl!=144609&&pl!=144610&&pl!=144611&&pl!=144612&&pl!=144613&&pl!=144618&&pl!=144619&&pl!=144620&&pl!=144621&&pl!=144624&&pl!=144627&&pl!=144628&&pl!=144632&&pl!=144633&&pl!=144634&&pl!=144635&&pl!=144636&&pl!=144637&&pl!=144638&&pl!=144640&&pl!=144641&&pl!=144644&&pl!=144645&&pl!=144646&&pl!=144647&&pl!=144650&&pl!=144651&&pl!=144654&&pl!=144658){pl=Ol(6,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Va(),Al(6,t,-1);continue}catch(a){dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(6,t,-2);break}}}if(pl!=-1&&pl!=16134&&pl!=27141&&pl!=27142&&pl!=27144&&pl!=27145&&pl!=27146&&pl!=27147&&pl!=27180&&pl!=27181&&pl!=27182&&pl!=27206&&pl!=27208&&pl!=27209&&pl!=27210&&pl!=27211&&pl!=27214&&pl!=27215&&pl!=27216&&pl!=27217&&pl!=27218&&pl!=27219&&pl!=27220&&pl!=27221&&pl!=27222&&pl!=27224&&pl!=27225&&pl!=27226&&pl!=27227&&pl!=27229&&pl!=27230&&pl!=27232&&pl!=27233&&pl!=27234&&pl!=27237&&pl!=27238&&pl!=27239&&pl!=27240&&pl!=27241&&pl!=27242&&pl!=27244&&pl!=27245&&pl!=27246&&pl!=27247&&pl!=27248&&pl!=27249&&pl!=27254&&pl!=27255&&pl!=27256&&pl!=27257&&pl!=27258&&pl!=27259&&pl!=27260&&pl!=27261&&pl!=27262&&pl!=27264&&pl!=27265&&pl!=27267&&pl!=27268&&pl!=27269&&pl!=27270&&pl!=27271&&pl!=27272&&pl!=27273&&pl!=27277&&pl!=27281&&pl!=27282&&pl!=27284&&pl!=27286&&pl!=27287&&pl!=27288&&pl!=27289&&pl!=27290&&pl!=27291&&pl!=27295&&pl!=27296&&pl!=27297&&pl!=27298&&pl!=27299&&pl!=27300&&pl!=27301&&pl!=27303&&pl!=27306&&pl!=27307&&pl!=27308&&pl!=27310&&pl!=27312&&pl!=27314&&pl!=27316&&pl!=27317&&pl!=27318&&pl!=27320&&pl!=27321&&pl!=27322&&pl!=27327&&pl!=27328&&pl!=27330&&pl!=27334&&pl!=27335&&pl!=27336&&pl!=27337&&pl!=27338&&pl!=27339&&pl!=27342&&pl!=27348&&pl!=27349&&pl!=27352&&pl!=27354&&pl!=27355&&pl!=27356&&pl!=27357&&pl!=27358&&pl!=27360&&pl!=27361&&pl!=27362&&pl!=27363&&pl!=27364&&pl!=27365&&pl!=27370&&pl!=27371&&pl!=27372&&pl!=27373&&pl!=27376&&pl!=27379&&pl!=27380&&pl!=27384&&pl!=27385&&pl!=27386&&pl!=27387&&pl!=27388&&pl!=27389&&pl!=27390&&pl!=27392&&pl!=27393&&pl!=27396&&pl!=27397&&pl!=27398&&pl!=27399&&pl!=27402&&pl!=27403&&pl!=27406&&pl!=27410&&pl!=90198&&pl!=90214&&pl!=113284)break;Va()}}function Ra(){kl.startNonterminal("StatementsAndExpr",vl),Ia(),Hl(),G(),kl.endNonterminal("StatementsAndExpr",vl)}function Ua(){qa(),Y()}function za(){kl.startNonterminal("StatementsAndOptionalExpr",vl),Ia(),ml!=25&&ml!=282&&(Hl(),G()),kl.endNonterminal("StatementsAndOptionalExpr",vl)}function Wa(){qa(),ml!=25&&ml!=282&&Y()}function Xa(){kl.startNonterminal("Statement",vl);switch(ml){case 132:Fl(189);break;case 137:Fl(196);break;case 174:Fl(193);break;case 250:Fl(190);break;case 262:Fl(187);break;case 276:Fl(273);break;case 31:case 32:Fl(253);break;case 86:case 102:Fl(188);break;case 152:case 243:case 253:case 267:Fl(185);break;default:pl=ml}if(pl==2836||pl==3103||pl==3104||pl==3348||pl==4372||pl==4884||pl==5396||pl==5908||pl==16148||pl==16660||pl==17675||pl==17684||pl==18196||pl==20756||pl==21780||pl==22804||pl==23316||pl==23828||pl==24340||pl==27924||pl==28436||pl==30484||pl==34068||pl==35092||pl==35871||pl==35872||pl==36116||pl==36895||pl==36896||pl==37140||pl==37407||pl==37408||pl==37652||pl==37919||pl==37920||pl==38164||pl==38431||pl==38432||pl==38676||pl==39700||pl==39967||pl==39968||pl==40212||pl==40479||pl==40480||pl==40724||pl==40991||pl==40992||pl==41236||pl==41503||pl==41504||pl==41748||pl==42015||pl==42016||pl==42260||pl==42527||pl==42528||pl==42772||pl==43039||pl==43040||pl==43284||pl==43551||pl==43552||pl==43796||pl==44063||pl==44064||pl==44308||pl==45087||pl==45088||pl==45332||pl==45599||pl==45600||pl==45844||pl==46111||pl==46112||pl==46356||pl==46623||pl==46624||pl==46868||pl==47647||pl==47648||pl==47892||pl==48159||pl==48160||pl==48404||pl==49183||pl==49184||pl==49428||pl==49695||pl==49696||pl==49940||pl==50207||pl==50208||pl==50452||pl==51743||pl==51744||pl==51988||pl==52255||pl==52256||pl==52500||pl==52767||pl==52768||pl==53012||pl==53279||pl==53280||pl==53524||pl==53791||pl==53792||pl==54036||pl==54303||pl==54304||pl==54548||pl==55327||pl==55328||pl==55572||pl==55839||pl==55840||pl==56084||pl==56351||pl==56352||pl==56596||pl==56863||pl==56864||pl==57108||pl==57375||pl==57376||pl==57620||pl==57887||pl==57888||pl==58132||pl==60447||pl==60448||pl==60692||pl==60959||pl==60960||pl==61204||pl==61471||pl==61472||pl==61716||pl==61983||pl==61984||pl==62228||pl==62495||pl==62496||pl==62740||pl==63007||pl==63008||pl==63252||pl==63519||pl==63520||pl==63764||pl==64031||pl==64032||pl==64276||pl==64543||pl==64544||pl==64788||pl==65567||pl==65568||pl==65812||pl==66079||pl==66080||pl==66324||pl==67103||pl==67104||pl==67348||pl==67615||pl==67616||pl==67860||pl==68127||pl==68128||pl==68372||pl==68639||pl==68640||pl==68884||pl==69151||pl==69152||pl==69396||pl==69663||pl==69664||pl==69908||pl==70175||pl==70176||pl==70420||pl==72223||pl==72224||pl==72468||pl==74271||pl==74272||pl==74516||pl==74783||pl==74784||pl==75028||pl==75807||pl==75808||pl==76052||pl==76831||pl==76832||pl==77076||pl==77343||pl==77344||pl==77588||pl==77855||pl==77856||pl==78100||pl==78367||pl==78368||pl==78612||pl==78879||pl==78880||pl==79124||pl==79391||pl==79392||pl==79636||pl==81439||pl==81440||pl==81684||pl==81951||pl==81952||pl==82196||pl==82463||pl==82464||pl==82708||pl==82975||pl==82976||pl==83220||pl==83487||pl==83488||pl==83732||pl==83999||pl==84e3||pl==84244||pl==84511||pl==84512||pl==84756||pl==85535||pl==85536||pl==85780||pl==87071||pl==87072||pl==87316||pl==87583||pl==87584||pl==87828||pl==88095||pl==88096||pl==88340||pl==89119||pl==89120||pl==89364||pl==90143||pl==90144||pl==90388||pl==91167||pl==91168||pl==91412||pl==92191||pl==92192||pl==92436||pl==92703||pl==92704||pl==92948||pl==93215||pl==93216||pl==93460||pl==94239||pl==94240||pl==94484||pl==94751||pl==94752||pl==94996||pl==95263||pl==95264||pl==95508||pl==97823||pl==97824||pl==98068||pl==98335||pl==98336||pl==98580||pl==99359||pl==99360||pl==99604||pl==101407||pl==101408||pl==101652||pl==101919||pl==101920||pl==102164||pl==102431||pl==102432||pl==102676||pl==102943||pl==102944||pl==103188||pl==103455||pl==103456||pl==103700||pl==103967||pl==103968||pl==104212||pl==105503||pl==105504||pl==105748||pl==108575||pl==108576||pl==108820||pl==109087||pl==109088||pl==109332||pl==110623||pl==110624||pl==110868||pl==111647||pl==111648||pl==111892||pl==112159||pl==112160||pl==112404||pl==112671||pl==112672||pl==112916||pl==113183||pl==113184||pl==113428||pl==113695||pl==113696||pl==113940||pl==114719||pl==114720||pl==114964||pl==115231||pl==115232||pl==115476||pl==115743||pl==115744||pl==115988||pl==116255||pl==116256||pl==116500||pl==116767||pl==116768||pl==117012||pl==117279||pl==117280||pl==117524||pl==119839||pl==119840||pl==120084||pl==120351||pl==120352||pl==120596||pl==120863||pl==120864||pl==121108||pl==121375||pl==121376||pl==121620||pl==122911||pl==122912||pl==123156||pl==124447||pl==124448||pl==124692||pl==124959||pl==124960||pl==125204||pl==127007||pl==127008||pl==127252||pl==127519||pl==127520||pl==127764||pl==128031||pl==128032||pl==128276||pl==128543||pl==128544||pl==128788||pl==129055||pl==129056||pl==129300||pl==129567||pl==129568||pl==129812||pl==130079||pl==130080||pl==130324||pl==131103||pl==131104||pl==131348||pl==131615||pl==131616||pl==131860||pl==133151||pl==133152||pl==133396||pl==133663||pl==133664||pl==133908||pl==134175||pl==134176||pl==134420||pl==134687||pl==134688||pl==134932||pl==136223||pl==136224||pl==136468||pl==136735||pl==136736||pl==136980||pl==138271||pl==138272||pl==138516||pl==140319||pl==140320||pl==140564||pl==141588||pl==142612||pl==144660){pl=Ol(7,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Ja(),pl=-1}catch(a){try{dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Qa(),pl=-2}catch(f){try{dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Ya(),pl=-3}catch(l){try{dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),xf(),pl=-12}catch(c){pl=-13}}}}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(7,vl,pl)}}switch(pl){case-2:Ka();break;case-3:Ga();break;case 90198:Za();break;case 90214:tf();break;case 113284:rf();break;case 16009:case 16046:case 116910:case 119945:case 128649:of();break;case 17560:lf();break;case 17651:hf();break;case 141562:mf();break;case 17661:yf();break;case-12:case 16134:Sf();break;case-13:Tf();break;default:$a()}kl.endNonterminal("Statement",vl)}function Va(){switch(ml){case 132:Fl(189);break;case 137:Fl(196);break;case 174:Fl(193);break;case 250:Fl(190);break;case 262:Fl(187);break;case 276:Fl(273);break;case 31:case 32:Fl(253);break;case 86:case 102:Fl(188);break;case 152:case 243:case 253:case 267:Fl(185);break;default:pl=ml}if(pl==2836||pl==3103||pl==3104||pl==3348||pl==4372||pl==4884||pl==5396||pl==5908||pl==16148||pl==16660||pl==17675||pl==17684||pl==18196||pl==20756||pl==21780||pl==22804||pl==23316||pl==23828||pl==24340||pl==27924||pl==28436||pl==30484||pl==34068||pl==35092||pl==35871||pl==35872||pl==36116||pl==36895||pl==36896||pl==37140||pl==37407||pl==37408||pl==37652||pl==37919||pl==37920||pl==38164||pl==38431||pl==38432||pl==38676||pl==39700||pl==39967||pl==39968||pl==40212||pl==40479||pl==40480||pl==40724||pl==40991||pl==40992||pl==41236||pl==41503||pl==41504||pl==41748||pl==42015||pl==42016||pl==42260||pl==42527||pl==42528||pl==42772||pl==43039||pl==43040||pl==43284||pl==43551||pl==43552||pl==43796||pl==44063||pl==44064||pl==44308||pl==45087||pl==45088||pl==45332||pl==45599||pl==45600||pl==45844||pl==46111||pl==46112||pl==46356||pl==46623||pl==46624||pl==46868||pl==47647||pl==47648||pl==47892||pl==48159||pl==48160||pl==48404||pl==49183||pl==49184||pl==49428||pl==49695||pl==49696||pl==49940||pl==50207||pl==50208||pl==50452||pl==51743||pl==51744||pl==51988||pl==52255||pl==52256||pl==52500||pl==52767||pl==52768||pl==53012||pl==53279||pl==53280||pl==53524||pl==53791||pl==53792||pl==54036||pl==54303||pl==54304||pl==54548||pl==55327||pl==55328||pl==55572||pl==55839||pl==55840||pl==56084||pl==56351||pl==56352||pl==56596||pl==56863||pl==56864||pl==57108||pl==57375||pl==57376||pl==57620||pl==57887||pl==57888||pl==58132||pl==60447||pl==60448||pl==60692||pl==60959||pl==60960||pl==61204||pl==61471||pl==61472||pl==61716||pl==61983||pl==61984||pl==62228||pl==62495||pl==62496||pl==62740||pl==63007||pl==63008||pl==63252||pl==63519||pl==63520||pl==63764||pl==64031||pl==64032||pl==64276||pl==64543||pl==64544||pl==64788||pl==65567||pl==65568||pl==65812||pl==66079||pl==66080||pl==66324||pl==67103||pl==67104||pl==67348||pl==67615||pl==67616||pl==67860||pl==68127||pl==68128||pl==68372||pl==68639||pl==68640||pl==68884||pl==69151||pl==69152||pl==69396||pl==69663||pl==69664||pl==69908||pl==70175||pl==70176||pl==70420||pl==72223||pl==72224||pl==72468||pl==74271||pl==74272||pl==74516||pl==74783||pl==74784||pl==75028||pl==75807||pl==75808||pl==76052||pl==76831||pl==76832||pl==77076||pl==77343||pl==77344||pl==77588||pl==77855||pl==77856||pl==78100||pl==78367||pl==78368||pl==78612||pl==78879||pl==78880||pl==79124||pl==79391||pl==79392||pl==79636||pl==81439||pl==81440||pl==81684||pl==81951||pl==81952||pl==82196||pl==82463||pl==82464||pl==82708||pl==82975||pl==82976||pl==83220||pl==83487||pl==83488||pl==83732||pl==83999||pl==84e3||pl==84244||pl==84511||pl==84512||pl==84756||pl==85535||pl==85536||pl==85780||pl==87071||pl==87072||pl==87316||pl==87583||pl==87584||pl==87828||pl==88095||pl==88096||pl==88340||pl==89119||pl==89120||pl==89364||pl==90143||pl==90144||pl==90388||pl==91167||pl==91168||pl==91412||pl==92191||pl==92192||pl==92436||pl==92703||pl==92704||pl==92948||pl==93215||pl==93216||pl==93460||pl==94239||pl==94240||pl==94484||pl==94751||pl==94752||pl==94996||pl==95263||pl==95264||pl==95508||pl==97823||pl==97824||pl==98068||pl==98335||pl==98336||pl==98580||pl==99359||pl==99360||pl==99604||pl==101407||pl==101408||pl==101652||pl==101919||pl==101920||pl==102164||pl==102431||pl==102432||pl==102676||pl==102943||pl==102944||pl==103188||pl==103455||pl==103456||pl==103700||pl==103967||pl==103968||pl==104212||pl==105503||pl==105504||pl==105748||pl==108575||pl==108576||pl==108820||pl==109087||pl==109088||pl==109332||pl==110623||pl==110624||pl==110868||pl==111647||pl==111648||pl==111892||pl==112159||pl==112160||pl==112404||pl==112671||pl==112672||pl==112916||pl==113183||pl==113184||pl==113428||pl==113695||pl==113696||pl==113940||pl==114719||pl==114720||pl==114964||pl==115231||pl==115232||pl==115476||pl==115743||pl==115744||pl==115988||pl==116255||pl==116256||pl==116500||pl==116767||pl==116768||pl==117012||pl==117279||pl==117280||pl==117524||pl==119839||pl==119840||pl==120084||pl==120351||pl==120352||pl==120596||pl==120863||pl==120864||pl==121108||pl==121375||pl==121376||pl==121620||pl==122911||pl==122912||pl==123156||pl==124447||pl==124448||pl==124692||pl==124959||pl==124960||pl==125204||pl==127007||pl==127008||pl==127252||pl==127519||pl==127520||pl==127764||pl==128031||pl==128032||pl==128276||pl==128543||pl==128544||pl==128788||pl==129055||pl==129056||pl==129300||pl==129567||pl==129568||pl==129812||pl==130079||pl==130080||pl==130324||pl==131103||pl==131104||pl==131348||pl==131615||pl==131616||pl==131860||pl==133151||pl==133152||pl==133396||pl==133663||pl==133664||pl==133908||pl==134175||pl==134176||pl==134420||pl==134687||pl==134688||pl==134932||pl==136223||pl==136224||pl==136468||pl==136735||pl==136736||pl==136980||pl==138271||pl==138272||pl==138516||pl==140319||pl==140320||pl==140564||pl==141588||pl==142612||pl==144660){pl=Ol(7,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Ja(),Al(7,t,-1),pl=-14}catch(a){try{dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Qa(),Al(7,t,-2),pl=-14}catch(f){try{dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Ya(),Al(7,t,-3),pl=-14}catch(l){try{dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),xf(),Al(7,t,-12),pl=-14}catch(c){pl=-13,dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(7,t,-13)}}}}}}switch(pl){case-2:Qa();break;case-3:Ya();break;case 90198:ef();break;case 90214:nf();break;case 113284:sf();break;case 16009:case 16046:case 116910:case 119945:case 128649:uf();break;case 17560:cf();break;case 17651:pf();break;case 141562:gf();break;case 17661:bf();break;case-12:case 16134:xf();break;case-13:Nf();break;case-14:break;default:Ja()}}function $a(){kl.startNonterminal("ApplyStatement",vl),Lf(),_l(53),kl.endNonterminal("ApplyStatement",vl)}function Ja(){Af(),Dl(53)}function Ka(){kl.startNonterminal("AssignStatement",vl),_l(31),jl(253),Hl(),li(),jl(27),_l(52),jl(267),Hl(),Cf(),_l(53),kl.endNonterminal("AssignStatement",vl)}function Qa(){Dl(31),jl(253),ci(),jl(27),Dl(52),jl(267),kf(),Dl(53)}function Ga(){kl.startNonterminal("BlockStatement",vl),_l(276),jl(273),Hl(),Ia(),_l(282),kl.endNonterminal("BlockStatement",vl)}function Ya(){Dl(276),jl(273),qa(),Dl(282)}function Za(){kl.startNonterminal("BreakStatement",vl),_l(86),jl(59),_l(176),jl(28),_l(53),kl.endNonterminal("BreakStatement",vl)}function ef(){Dl(86),jl(59),Dl(176),jl(28),Dl(53)}function tf(){kl.startNonterminal("ContinueStatement",vl),_l(102),jl(59),_l(176),jl(28),_l(53),kl.endNonterminal("ContinueStatement",vl)}function nf(){Dl(102),jl(59),Dl(176),jl(28),Dl(53)}function rf(){kl.startNonterminal("ExitStatement",vl),_l(132),jl(71),_l(221),jl(267),Hl(),Cf(),_l(53),kl.endNonterminal("ExitStatement",vl)}function sf(){Dl(132),jl(71),Dl(221),jl(267),kf(),Dl(53)}function of(){kl.startNonterminal("FLWORStatement",vl),tt();for(;;){jl(173);if(ml==220)break;Hl(),rt()}Hl(),af(),kl.endNonterminal("FLWORStatement",vl)}function uf(){nt();for(;;){jl(173);if(ml==220)break;it()}ff()}function af(){kl.startNonterminal("ReturnStatement",vl),_l(220),jl(267),Hl(),Xa(),kl.endNonterminal("ReturnStatement",vl)}function ff(){Dl(220),jl(267),Va()}function lf(){kl.startNonterminal("IfStatement",vl),_l(152),jl(22),_l(34),jl(267),Hl(),G(),_l(37),jl(77),_l(245),jl(267),Hl(),Xa(),jl(48),_l(122),jl(267),Hl(),Xa(),kl.endNonterminal("IfStatement",vl)}function cf(){Dl(152),jl(22),Dl(34),jl(267),Y(),Dl(37),jl(77),Dl(245),jl(267),Va(),jl(48),Dl(122),jl(267),Va()}function hf(){kl.startNonterminal("SwitchStatement",vl),_l(243),jl(22),_l(34),jl(267),Hl(),G(),_l(37);for(;;){jl(35),Hl(),df(),jl(113);if(ml!=88)break}_l(109),jl(70),_l(220),jl(267),Hl(),Xa(),kl.endNonterminal("SwitchStatement",vl)}function pf(){Dl(243),jl(22),Dl(34),jl(267),Y(),Dl(37);for(;;){jl(35),vf(),jl(113);if(ml!=88)break}Dl(109),jl(70),Dl(220),jl(267),Va()}function df(){kl.startNonterminal("SwitchCaseStatement",vl);for(;;){_l(88),jl(267),Hl(),hn();if(ml!=88)break}_l(220),jl(267),Hl(),Xa(),kl.endNonterminal("SwitchCaseStatement",vl)}function vf(){for(;;){Dl(88),jl(267),pn();if(ml!=88)break}Dl(220),jl(267),Va()}function mf(){kl.startNonterminal("TryCatchStatement",vl),_l(250),jl(87),Hl(),Ga();for(;;){jl(36),_l(91),jl(255),Hl(),On(),Hl(),Ga(),jl(274);switch(ml){case 91:Fl(276);break;default:pl=ml}if(pl==38491||pl==45659||pl==46171||pl==60507||pl==65627||pl==67163||pl==74843||pl==76891||pl==77403||pl==82011||pl==83035||pl==84059||pl==88155||pl==91227||pl==92251||pl==95323||pl==102491||pl==127067||pl==127579||pl==130139){pl=Ol(8,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{jl(36),Dl(91),jl(255),Mn(),Ya(),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(8,vl,pl)}}if(pl!=-1&&pl!=2651&&pl!=3163&&pl!=35931&&pl!=36955&&pl!=37467&&pl!=37979&&pl!=40027&&pl!=40539&&pl!=41051&&pl!=41563&&pl!=42075&&pl!=42587&&pl!=43099&&pl!=43611&&pl!=44123&&pl!=45147&&pl!=46683&&pl!=47707&&pl!=48219&&pl!=49243&&pl!=49755&&pl!=50267&&pl!=51803&&pl!=52315&&pl!=52827&&pl!=53339&&pl!=53851&&pl!=54363&&pl!=55387&&pl!=55899&&pl!=56411&&pl!=56923&&pl!=57435&&pl!=57947&&pl!=61019&&pl!=61531&&pl!=62043&&pl!=62555&&pl!=63067&&pl!=63579&&pl!=64091&&pl!=64603&&pl!=66139&&pl!=67675&&pl!=68187&&pl!=68699&&pl!=69211&&pl!=69723&&pl!=70235&&pl!=72283&&pl!=74331&&pl!=75867&&pl!=77915&&pl!=78427&&pl!=78939&&pl!=79451&&pl!=81499&&pl!=82523&&pl!=83547&&pl!=84571&&pl!=85595&&pl!=87131&&pl!=87643&&pl!=89179&&pl!=90203&&pl!=92763&&pl!=93275&&pl!=94299&&pl!=94811&&pl!=97883&&pl!=98395&&pl!=99419&&pl!=101467&&pl!=101979&&pl!=103003&&pl!=103515&&pl!=104027&&pl!=105563&&pl!=108635&&pl!=109147&&pl!=110683&&pl!=111707&&pl!=112219&&pl!=112731&&pl!=113243&&pl!=113755&&pl!=114779&&pl!=115291&&pl!=115803&&pl!=116315&&pl!=116827&&pl!=117339&&pl!=119899&&pl!=120411&&pl!=120923&&pl!=121435&&pl!=122971&&pl!=124507&&pl!=125019&&pl!=128091&&pl!=128603&&pl!=129115&&pl!=129627&&pl!=131163&&pl!=131675&&pl!=133211&&pl!=133723&&pl!=134235&&pl!=134747&&pl!=136283&&pl!=136795&&pl!=138331&&pl!=140379)break}kl.endNonterminal("TryCatchStatement",vl)}function gf(){Dl(250),jl(87),Ya(),jl(36),Dl(91),jl(255),Mn(),Ya();for(;;){jl(274);switch(ml){case 91:Fl(276);break;default:pl=ml}if(pl==38491||pl==45659||pl==46171||pl==60507||pl==65627||pl==67163||pl==74843||pl==76891||pl==77403||pl==82011||pl==83035||pl==84059||pl==88155||pl==91227||pl==92251||pl==95323||pl==102491||pl==127067||pl==127579||pl==130139){pl=Ol(8,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{jl(36),Dl(91),jl(255),Mn(),Ya(),Al(8,t,-1);continue}catch(a){dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(8,t,-2);break}}}if(pl!=-1&&pl!=2651&&pl!=3163&&pl!=35931&&pl!=36955&&pl!=37467&&pl!=37979&&pl!=40027&&pl!=40539&&pl!=41051&&pl!=41563&&pl!=42075&&pl!=42587&&pl!=43099&&pl!=43611&&pl!=44123&&pl!=45147&&pl!=46683&&pl!=47707&&pl!=48219&&pl!=49243&&pl!=49755&&pl!=50267&&pl!=51803&&pl!=52315&&pl!=52827&&pl!=53339&&pl!=53851&&pl!=54363&&pl!=55387&&pl!=55899&&pl!=56411&&pl!=56923&&pl!=57435&&pl!=57947&&pl!=61019&&pl!=61531&&pl!=62043&&pl!=62555&&pl!=63067&&pl!=63579&&pl!=64091&&pl!=64603&&pl!=66139&&pl!=67675&&pl!=68187&&pl!=68699&&pl!=69211&&pl!=69723&&pl!=70235&&pl!=72283&&pl!=74331&&pl!=75867&&pl!=77915&&pl!=78427&&pl!=78939&&pl!=79451&&pl!=81499&&pl!=82523&&pl!=83547&&pl!=84571&&pl!=85595&&pl!=87131&&pl!=87643&&pl!=89179&&pl!=90203&&pl!=92763&&pl!=93275&&pl!=94299&&pl!=94811&&pl!=97883&&pl!=98395&&pl!=99419&&pl!=101467&&pl!=101979&&pl!=103003&&pl!=103515&&pl!=104027&&pl!=105563&&pl!=108635&&pl!=109147&&pl!=110683&&pl!=111707&&pl!=112219&&pl!=112731&&pl!=113243&&pl!=113755&&pl!=114779&&pl!=115291&&pl!=115803&&pl!=116315&&pl!=116827&&pl!=117339&&pl!=119899&&pl!=120411&&pl!=120923&&pl!=121435&&pl!=122971&&pl!=124507&&pl!=125019&&pl!=128091&&pl!=128603&&pl!=129115&&pl!=129627&&pl!=131163&&pl!=131675&&pl!=133211&&pl!=133723&&pl!=134235&&pl!=134747&&pl!=136283&&pl!=136795&&pl!=138331&&pl!=140379)break;jl(36),Dl(91),jl(255),Mn(),Ya()}}function yf(){kl.startNonterminal("TypeswitchStatement",vl),_l(253),jl(22),_l(34),jl(267),Hl(),G(),_l(37);for(;;){jl(35),Hl(),wf(),jl(113);if(ml!=88)break}_l(109),jl(95),ml==31&&(_l(31),jl(253),Hl(),li()),jl(70),_l(220),jl(267),Hl(),Xa(),kl.endNonterminal("TypeswitchStatement",vl)}function bf(){Dl(253),jl(22),Dl(34),jl(267),Y(),Dl(37);for(;;){jl(35),Ef(),jl(113);if(ml!=88)break}Dl(109),jl(95),ml==31&&(Dl(31),jl(253),ci()),jl(70),Dl(220),jl(267),Va()}function wf(){kl.startNonterminal("CaseStatement",vl),_l(88),jl(260),ml==31&&(_l(31),jl(253),Hl(),li(),jl(30),_l(79)),jl(259),Hl(),ds(),jl(70),_l(220),jl(267),Hl(),Xa(),kl.endNonterminal("CaseStatement",vl)}function Ef(){Dl(88),jl(260),ml==31&&(Dl(31),jl(253),ci(),jl(30),Dl(79)),jl(259),vs(),jl(70),Dl(220),jl(267),Va()}function Sf(){kl.startNonterminal("VarDeclStatement",vl);for(;;){jl(98);if(ml!=32)break;Hl(),B()}_l(262),jl(21),_l(31),jl(253),Hl(),li(),jl(157),ml==79&&(Hl(),hs()),jl(145),ml==52&&(_l(52),jl(267),Hl(),Cf());for(;;){if(ml!=41)break;_l(41),jl(21),_l(31),jl(253),Hl(),li(),jl(157),ml==79&&(Hl(),hs()),jl(145),ml==52&&(_l(52),jl(267),Hl(),Cf())}_l(53),kl.endNonterminal("VarDeclStatement",vl)}function xf(){for(;;){jl(98);if(ml!=32)break;j()}Dl(262),jl(21),Dl(31),jl(253),ci(),jl(157),ml==79&&ps(),jl(145),ml==52&&(Dl(52),jl(267),kf());for(;;){if(ml!=41)break;Dl(41),jl(21),Dl(31),jl(253),ci(),jl(157),ml==79&&ps(),jl(145),ml==52&&(Dl(52),jl(267),kf())}Dl(53)}function Tf(){kl.startNonterminal("WhileStatement",vl),_l(267),jl(22),_l(34),jl(267),Hl(),G(),_l(37),jl(267),Hl(),Xa(),kl.endNonterminal("WhileStatement",vl)}function Nf(){Dl(267),jl(22),Dl(34),jl(267),Y(),Dl(37),jl(267),Va()}function Cf(){kl.startNonterminal("ExprSingle",vl);switch(ml){case 137:Fl(233);break;case 174:Fl(231);break;case 250:Fl(230);break;case 152:case 243:case 253:Fl(228);break;default:pl=ml}switch(pl){case 16009:case 16046:case 116910:case 119945:case 128649:Z();break;case 17560:wn();break;case 17651:an();break;case 141562:Sn();break;case 17661:dn();break;default:Lf()}kl.endNonterminal("ExprSingle",vl)}function kf(){switch(ml){case 137:Fl(233);break;case 174:Fl(231);break;case 250:Fl(230);break;case 152:case 243:case 253:Fl(228);break;default:pl=ml}switch(pl){case 16009:case 16046:case 116910:case 119945:case 128649:et();break;case 17560:En();break;case 17651:fn();break;case 141562:xn();break;case 17661:vn();break;default:Af()}}function Lf(){kl.startNonterminal("ExprSimple",vl);switch(ml){case 218:Fl(232);break;case 219:Fl(235);break;case 110:case 159:Fl(234);break;case 103:case 129:case 235:Fl(229);break;default:pl=ml}switch(pl){case 16001:case 16107:on();break;case 97951:case 98463:Lo();break;case 97902:case 98414:Oo();break;case 98010:Po();break;case 98011:case 133851:_o();break;case 15975:Uo();break;case 85102:Of();break;case 85151:_f();break;case 85210:Pf();break;case 85211:Bf();break;case 77:Ff();break;default:_n()}kl.endNonterminal("ExprSimple",vl)}function Af(){switch(ml){case 218:Fl(232);break;case 219:Fl(235);break;case 110:case 159:Fl(234);break;case 103:case 129:case 235:Fl(229);break;default:pl=ml}switch(pl){case 16001:case 16107:un();break;case 97951:case 98463:Ao();break;case 97902:case 98414:Mo();break;case 98010:Ho();break;case 98011:case 133851:Do();break;case 15975:zo();break;case 85102:Mf();break;case 85151:Df();break;case 85210:Hf();break;case 85211:jf();break;case 77:If();break;default:Dn()}}function Of(){kl.startNonterminal("JSONDeleteExpr",vl),_l(110),jl(56),_l(166),jl(262),Hl(),Qr(),kl.endNonterminal("JSONDeleteExpr",vl)}function Mf(){Dl(110),jl(56),Dl(166),jl(262),Gr()}function _f(){kl.startNonterminal("JSONInsertExpr",vl),_l(159),jl(56),_l(166),jl(267),Hl(),Cf(),_l(163),jl(267),Hl(),Cf();switch(ml){case 81:Fl(69);break;default:pl=ml}if(pl==108113){pl=Ol(9,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Dl(81),jl(69),Dl(211),jl(267),kf(),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(9,vl,pl)}}pl==-1&&(_l(81),jl(69),_l(211),jl(267),Hl(),Cf()),kl.endNonterminal("JSONInsertExpr",vl)}function Df(){Dl(159),jl(56),Dl(166),jl(267),kf(),Dl(163),jl(267),kf();switch(ml){case 81:Fl(69);break;default:pl=ml}if(pl==108113){pl=Ol(9,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Dl(81),jl(69),Dl(211),jl(267),kf(),Al(9,t,-1)}catch(a){dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(9,t,-2)}pl=-2}}pl==-1&&(Dl(81),jl(69),Dl(211),jl(267),kf())}function Pf(){kl.startNonterminal("JSONRenameExpr",vl),_l(218),jl(56),_l(166),jl(262),Hl(),Qr(),_l(79),jl(267),Hl(),Cf(),kl.endNonterminal("JSONRenameExpr",vl)}function Hf(){Dl(218),jl(56),Dl(166),jl(262),Gr(),Dl(79),jl(267),kf()}function Bf(){kl.startNonterminal("JSONReplaceExpr",vl),_l(219),jl(56),_l(166),jl(82),_l(261),jl(64),_l(196),jl(262),Hl(),Qr(),_l(270),jl(267),Hl(),Cf(),kl.endNonterminal("JSONReplaceExpr",vl)}function jf(){Dl(219),jl(56),Dl(166),jl(82),Dl(261),jl(64),Dl(196),jl(262),Gr(),Dl(270),jl(267),kf()}function Ff(){kl.startNonterminal("JSONAppendExpr",vl),_l(77),jl(56),_l(166),jl(267),Hl(),Cf(),_l(163),jl(267),Hl(),Cf(),kl.endNonterminal("JSONAppendExpr",vl)}function If(){Dl(77),jl(56),Dl(166),jl(267),kf(),Dl(163),jl(267),kf()}function qf(){kl.startNonterminal("CommonContent",vl);switch(ml){case 12:_l(12);break;case 23:_l(23);break;case 277:_l(277);break;case 283:_l(283);break;default:ll()}kl.endNonterminal("CommonContent",vl)}function Rf(){switch(ml){case 12:Dl(12);break;case 23:Dl(23);break;case 277:Dl(277);break;case 283:Dl(283);break;default:cl()}}function Uf(){kl.startNonterminal("ContentExpr",vl),Ra(),kl.endNonterminal("ContentExpr",vl)}function zf(){Ua()}function Wf(){kl.startNonterminal("CompDocConstructor",vl),_l(119),jl(87),Hl(),ll(),kl.endNonterminal("CompDocConstructor",vl)}function Xf(){Dl(119),jl(87),cl()}function Vf(){kl.startNonterminal("CompAttrConstructor",vl),_l(82),jl(256);switch(ml){case 276:_l(276),jl(267),Hl(),G(),_l(282);break;default:Hl(),Ma()}jl(87);switch(ml){case 276:Fl(273);break;default:pl=ml}if(pl==144660){pl=Ol(10,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Dl(276),jl(88),Dl(282),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(10,vl,pl)}}switch(pl){case-1:_l(276),jl(88),_l(282);break;default:Hl(),ll()}kl.endNonterminal("CompAttrConstructor",vl)}function $f(){Dl(82),jl(256);switch(ml){case 276:Dl(276),jl(267),Y(),Dl(282);break;default:_a()}jl(87);switch(ml){case 276:Fl(273);break;default:pl=ml}if(pl==144660){pl=Ol(10,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Dl(276),jl(88),Dl(282),Al(10,t,-1),pl=-3}catch(a){pl=-2,dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(10,t,-2)}}}switch(pl){case-1:Dl(276),jl(88),Dl(282);break;case-3:break;default:cl()}}function Jf(){kl.startNonterminal("CompPIConstructor",vl),_l(216),jl(249);switch(ml){case 276:_l(276),jl(267),Hl(),G(),_l(282);break;default:Hl(),Ha()}jl(87);switch(ml){case 276:Fl(273);break;default:pl=ml}if(pl==144660){pl=Ol(11,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Dl(276),jl(88),Dl(282),pl=-1}catch(a){pl=-2}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(11,vl,pl)}}switch(pl){case-1:_l(276),jl(88),_l(282);break;default:Hl(),ll()}kl.endNonterminal("CompPIConstructor",vl)}function Kf(){Dl(216),jl(249);switch(ml){case 276:Dl(276),jl(267),Y(),Dl(282);break;default:Ba()}jl(87);switch(ml){case 276:Fl(273);break;default:pl=ml}if(pl==144660){pl=Ol(11,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{Dl(276),jl(88),Dl(282),Al(11,t,-1),pl=-3}catch(a){pl=-2,dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(11,t,-2)}}}switch(pl){case-1:Dl(276),jl(88),Dl(282);break;case-3:break;default:cl()}}function Qf(){kl.startNonterminal("CompCommentConstructor",vl),_l(96),jl(87),Hl(),ll(),kl.endNonterminal("CompCommentConstructor",vl)}function Gf(){Dl(96),jl(87),cl()}function Yf(){kl.startNonterminal("CompTextConstructor",vl),_l(244),jl(87),Hl(),ll(),kl.endNonterminal("CompTextConstructor",vl)}function Zf(){Dl(244),jl(87),cl()}function el(){kl.startNonterminal("PrimaryExpr",vl);switch(ml){case 184:Fl(254);break;case 216:Fl(252);break;case 276:Fl(273);break;case 82:case 121:Fl(257);break;case 96:case 244:Fl(93);break;case 119:case 202:case 256:Fl(139);break;case 6:case 70:case 72:case 73:case 74:case 75:case 78:case 79:case 80:case 81:case 83:case 84:case 85:case 86:case 88:case 89:case 90:case 91:case 93:case 94:case 97:case 98:case 101:case 102:case 103:case 104:case 105:case 106:case 108:case 109:case 110:case 111:case 112:case 113:case 118:case 122:case 123:case 125:case 126:case 128:case 129:case 131:case 132:case 133:case 134:case 135:case 136:case 137:case 141:case 146:case 148:case 150:case 151:case 153:case 154:case 155:case 159:case 160:case 161:case 162:case 163:case 164:case 167:case 170:case 171:case 172:case 174:case 176:case 178:case 180:case 181:case 182:case 186:case 192:case 194:case 198:case 199:case 200:case 201:case 203:case 206:case 212:case 213:case 218:case 219:case 220:case 221:case 222:case 224:case 225:case 228:case 229:case 234:case 235:case 236:case 237:case 240:case 248:case 249:case 250:case 251:case 252:case 254:case 257:case 260:case 261:case 262:case 263:case 266:case 267:case 270:case 274:Fl(92);break;default:pl=ml}if(pl==2836||pl==3348||pl==4372||pl==4884||pl==5396||pl==5908||pl==16148||pl==16660||pl==17684||pl==18196||pl==20756||pl==21780||pl==22804||pl==23316||pl==23828||pl==24340||pl==27924||pl==28436||pl==30484||pl==34068||pl==35092||pl==36116||pl==37140||pl==37652||pl==38164||pl==38676||pl==39700||pl==40212||pl==40724||pl==41236||pl==41748||pl==42260||pl==42772||pl==43284||pl==43796||pl==44308||pl==45332||pl==45844||pl==46356||pl==46868||pl==47892||pl==48404||pl==49428||pl==49940||pl==50452||pl==51988||pl==52500||pl==53012||pl==53524||pl==54036||pl==54548||pl==55572||pl==56084||pl==56596||pl==57108||pl==57620||pl==58132||pl==60692||pl==61204||pl==61716||pl==62228||pl==62740||pl==63252||pl==63764||pl==64276||pl==64788||pl==65812||pl==66324||pl==67348||pl==67860||pl==68372||pl==68884||pl==69396||pl==69908||pl==70420||pl==72468||pl==74516||pl==75028||pl==76052||pl==77076||pl==77588||pl==78100||pl==78612||pl==79124||pl==79636||pl==81684||pl==82196||pl==82708||pl==83220||pl==83732||pl==84244||pl==84756||pl==85780||pl==87316||pl==87828||pl==88340||pl==89364||pl==90388||pl==91412||pl==92436||pl==92948||pl==93460||pl==94484||pl==94996||pl==95508||pl==98068||pl==98580||pl==99604||pl==101652||pl==102164||pl==102676||pl==103188||pl==103700||pl==104212||pl==105748||pl==108820||pl==109332||pl==110868||pl==111892||pl==112404||pl==112916||pl==113428||pl==113940||pl==114964||pl==115476||pl==115988||pl==116500||pl==117012||pl==117524||pl==120084||pl==120596||pl==121108||pl==121620||pl==123156||pl==124692||pl==125204||pl==127252||pl==127764||pl==128276||pl==128788||pl==129300||pl==129812||pl==130324||pl==131348||pl==131860||pl==133396||pl==133908||pl==134420||pl==134932||pl==136468||pl==136980||pl==138516||pl==140564||pl==141588||pl==142612||pl==144660){pl=Ol(12,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{cl(),pl=-10}catch(a){pl=-11}dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(12,vl,pl)}}switch(pl){case 8:case 9:case 10:case 11:ii();break;case 31:ai();break;case 34:hi();break;case 44:di();break;case 17414:case 17478:case 17480:case 17481:case 17482:case 17483:case 17486:case 17487:case 17488:case 17489:case 17491:case 17492:case 17493:case 17494:case 17496:case 17497:case 17498:case 17499:case 17501:case 17502:case 17505:case 17506:case 17509:case 17510:case 17511:case 17512:case 17513:case 17514:case 17516:case 17517:case 17518:case 17519:case 17520:case 17521:case 17526:case 17527:case 17530:case 17531:case 17533:case 17534:case 17536:case 17537:case 17539:case 17540:case 17541:case 17542:case 17543:case 17544:case 17545:case 17549:case 17554:case 17556:case 17558:case 17559:case 17561:case 17562:case 17563:case 17567:case 17568:case 17569:case 17570:case 17571:case 17572:case 17575:case 17578:case 17579:case 17580:case 17582:case 17584:case 17586:case 17588:case 17589:case 17590:case 17592:case 17594:case 17600:case 17602:case 17606:case 17607:case 17608:case 17609:case 17610:case 17611:case 17614:case 17620:case 17621:case 17626:case 17627:case 17628:case 17629:case 17630:case 17632:case 17633:case 17636:case 17637:case 17642:case 17643:case 17644:case 17645:case 17648:case 17656:case 17657:case 17658:case 17659:case 17660:case 17662:case 17664:case 17665:case 17668:case 17669:case 17670:case 17671:case 17674:case 17675:case 17678:case 17682:wi();break;case 141514:mi();break;case 141568:yi();break;case 32:case 120:case 124:case 145:case 152:case 165:case 185:case 191:case 226:case 227:case 243:case 253:case 14854:case 14918:case 14920:case 14921:case 14922:case 14923:case 14926:case 14927:case 14928:case 14929:case 14930:case 14931:case 14932:case 14933:case 14934:case 14936:case 14937:case 14938:case 14939:case 14941:case 14942:case 14944:case 14945:case 14946:case 14949:case 14950:case 14951:case 14952:case 14953:case 14954:case 14956:case 14957:case 14958:case 14959:case 14960:case 14961:case 14966:case 14967:case 14969:case 14970:case 14971:case 14973:case 14974:case 14976:case 14977:case 14979:case 14980:case 14981:case 14982:case 14983:case 14984:case 14985:case 14989:case 14994:case 14996:case 14998:case 14999:case 15001:case 15002:case 15003:case 15007:case 15008:case 15009:case 15010:case 15011:case 15012:case 15015:case 15018:case 15019:case 15020:case 15022:case 15024:case 15026:case 15028:case 15029:case 15030:case 15032:case 15034:case 15040:case 15042:case 15046:case 15047:case 15048:case 15049:case 15050:case 15051:case 15054:case 15060:case 15061:case 15064:case 15066:case 15067:case 15068:case 15069:case 15070:case 15072:case 15073:case 15076:case 15077:case 15082:case 15083:case 15084:case 15085:case 15088:case 15092:case 15096:case 15097:case 15098:case 15099:case 15100:case 15102:case 15104:case 15105:case 15108:case 15109:case 15110:case 15111:case 15114:case 15115:case 15118:case 15122:is();break;case-10:ll();break;case-11:il();break;case 68:al();break;case 278:nl();break;default:Ci()}kl.endNonterminal("PrimaryExpr",vl)}function tl(){switch(ml){case 184:Fl(254);break;case 216:Fl(252);break;case 276:Fl(273);break;case 82:case 121:Fl(257);break;case 96:case 244:Fl(93);break;case 119:case 202:case 256:Fl(139);break;case 6:case 70:case 72:case 73:case 74:case 75:case 78:case 79:case 80:case 81:case 83:case 84:case 85:case 86:case 88:case 89:case 90:case 91:case 93:case 94:case 97:case 98:case 101:case 102:case 103:case 104:case 105:case 106:case 108:case 109:case 110:case 111:case 112:case 113:case 118:case 122:case 123:case 125:case 126:case 128:case 129:case 131:case 132:case 133:case 134:case 135:case 136:case 137:case 141:case 146:case 148:case 150:case 151:case 153:case 154:case 155:case 159:case 160:case 161:case 162:case 163:case 164:case 167:case 170:case 171:case 172:case 174:case 176:case 178:case 180:case 181:case 182:case 186:case 192:case 194:case 198:case 199:case 200:case 201:case 203:case 206:case 212:case 213:case 218:case 219:case 220:case 221:case 222:case 224:case 225:case 228:case 229:case 234:case 235:case 236:case 237:case 240:case 248:case 249:case 250:case 251:case 252:case 254:case 257:case 260:case 261:case 262:case 263:case 266:case 267:case 270:case 274:Fl(92);break;default:pl=ml}if(pl==2836||pl==3348||pl==4372||pl==4884||pl==5396||pl==5908||pl==16148||pl==16660||pl==17684||pl==18196||pl==20756||pl==21780||pl==22804||pl==23316||pl==23828||pl==24340||pl==27924||pl==28436||pl==30484||pl==34068||pl==35092||pl==36116||pl==37140||pl==37652||pl==38164||pl==38676||pl==39700||pl==40212||pl==40724||pl==41236||pl==41748||pl==42260||pl==42772||pl==43284||pl==43796||pl==44308||pl==45332||pl==45844||pl==46356||pl==46868||pl==47892||pl==48404||pl==49428||pl==49940||pl==50452||pl==51988||pl==52500||pl==53012||pl==53524||pl==54036||pl==54548||pl==55572||pl==56084||pl==56596||pl==57108||pl==57620||pl==58132||pl==60692||pl==61204||pl==61716||pl==62228||pl==62740||pl==63252||pl==63764||pl==64276||pl==64788||pl==65812||pl==66324||pl==67348||pl==67860||pl==68372||pl==68884||pl==69396||pl==69908||pl==70420||pl==72468||pl==74516||pl==75028||pl==76052||pl==77076||pl==77588||pl==78100||pl==78612||pl==79124||pl==79636||pl==81684||pl==82196||pl==82708||pl==83220||pl==83732||pl==84244||pl==84756||pl==85780||pl==87316||pl==87828||pl==88340||pl==89364||pl==90388||pl==91412||pl==92436||pl==92948||pl==93460||pl==94484||pl==94996||pl==95508||pl==98068||pl==98580||pl==99604||pl==101652||pl==102164||pl==102676||pl==103188||pl==103700||pl==104212||pl==105748||pl==108820||pl==109332||pl==110868||pl==111892||pl==112404||pl==112916||pl==113428||pl==113940||pl==114964||pl==115476||pl==115988||pl==116500||pl==117012||pl==117524||pl==120084||pl==120596||pl==121108||pl==121620||pl==123156||pl==124692||pl==125204||pl==127252||pl==127764||pl==128276||pl==128788||pl==129300||pl==129812||pl==130324||pl==131348||pl==131860||pl==133396||pl==133908||pl==134420||pl==134932||pl==136468||pl==136980||pl==138516||pl==140564||pl==141588||pl==142612||pl==144660){pl=Ol(12,vl);if(pl==0){var e=dl,t=vl,n=ml,r=gl,i=yl,s=bl,o=wl,u=El;try{cl(),Al(12,t,-10),pl=-14}catch(a){pl=-11,dl=e,vl=t,ml=n,ml==0?Wl=t:(gl=r,yl=i,bl=s,bl==0?Wl=i:(wl=o,El=u,Wl=u)),Al(12,t,-11)}}}switch(pl){case 8:case 9:case 10:case 11:si();break;case 31:fi();break;case 34:pi();break;case 44:vi();break;case 17414:case 17478:case 17480:case 17481:case 17482:case 17483:case 17486:case 17487:case 17488:case 17489:case 17491:case 17492:case 17493:case 17494:case 17496:case 17497:case 17498:case 17499:case 17501:case 17502:case 17505:case 17506:case 17509:case 17510:case 17511:case 17512:case 17513:case 17514:case 17516:case 17517:case 17518:case 17519:case 17520:case 17521:case 17526:case 17527:case 17530:case 17531:case 17533:case 17534:case 17536:case 17537:case 17539:case 17540:case 17541:case 17542:case 17543:case 17544:case 17545:case 17549:case 17554:case 17556:case 17558:case 17559:case 17561:case 17562:case 17563:case 17567:case 17568:case 17569:case 17570:case 17571:case 17572:case 17575:case 17578:case 17579:case 17580:case 17582:case 17584:case 17586:case 17588:case 17589:case 17590:case 17592:case 17594:case 17600:case 17602:case 17606:case 17607:case 17608:case 17609:case 17610:case 17611:case 17614:case 17620:case 17621:case 17626:case 17627:case 17628:case 17629:case 17630:case 17632:case 17633:case 17636:case 17637:case 17642:case 17643:case 17644:case 17645:case 17648:case 17656:case 17657:case 17658:case 17659:case 17660:case 17662:case 17664:case 17665:case 17668:case 17669:case 17670:case 17671:case 17674:case 17675:case 17678:case 17682:Ei();break;case 141514:gi();break;case 141568:bi();break;case 32:case 120:case 124:case 145:case 152:case 165:case 185:case 191:case 226:case 227:case 243:case 253:case 14854:case 14918:case 14920:case 14921:case 14922:case 14923:case 14926:case 14927:case 14928:case 14929:case 14930:case 14931:case 14932:case 14933:case 14934:case 14936:case 14937:case 14938:case 14939:case 14941:case 14942:case 14944:case 14945:case 14946:case 14949:case 14950:case 14951:case 14952:case 14953:case 14954:case 14956:case 14957:case 14958:case 14959:case 14960:case 14961:case 14966:case 14967:case 14969:case 14970:case 14971:case 14973:case 14974:case 14976:case 14977:case 14979:case 14980:case 14981:case 14982:case 14983:case 14984:case 14985:case 14989:case 14994:case 14996:case 14998:case 14999:case 15001:case 15002:case 15003:case 15007:case 15008:case 15009:case 15010:case 15011:case 15012:case 15015:case 15018:case 15019:case 15020:case 15022:case 15024:case 15026:case 15028:case 15029:case 15030:case 15032:case 15034:case 15040:case 15042:case 15046:case 15047:case 15048:case 15049:case 15050:case 15051:case 15054:case 15060:case 15061:case 15064:case 15066:case 15067:case 15068:case 15069:case 15070:case 15072:case 15073:case 15076:case 15077:case 15082:case 15083:case 15084:case 15085:case 15088:case 15092:case 15096:case 15097:case 15098:case 15099:case 15100:case 15102:case 15104:case 15105:case 15108:case 15109:case 15110:case 15111:case 15114:case 15115:case 15118:case 15122:ss();break;case-10:cl();break;case-11:sl();break;case 68:fl();break;case 278:rl();break;case-14:break;default:ki()}}function nl(){kl.startNonterminal("JSONSimpleObjectUnion",vl),_l(278),jl(272),ml!=281&&(Hl(),G()),_l(281),kl.endNonterminal("JSONSimpleObjectUnion",vl)}function rl(){Dl(278),jl(272),ml!=281&&Y(),Dl(281)}function il(){kl.startNonterminal("ObjectConstructor",vl),_l(276),jl(273);if(ml!=282){Hl(),ol();for(;;){if(ml!=41)break;_l(41),jl(267),Hl(),ol()}}_l(282),kl.endNonterminal("ObjectConstructor",vl)}function sl(){Dl(276),jl(273);if(ml!=282){ul();for(;;){if(ml!=41)break;Dl(41),jl(267),ul()}}Dl(282)}function ol(){kl.startNonterminal("PairConstructor",vl),Cf(),_l(49),jl(267),Hl(),Cf(),kl.endNonterminal("PairConstructor",vl)}function ul(){kf(),Dl(49),jl(267),kf()}function al(){kl.startNonterminal("ArrayConstructor",vl),_l(68),jl(271),ml!=69&&(Hl(),G()),_l(69),kl.endNonterminal("ArrayConstructor",vl)}function fl(){Dl(68),jl(271),ml!=69&&Y(),Dl(69)}function ll(){kl.startNonterminal("BlockExpr",vl),_l(276),jl(273),Hl(),za(),_l(282),kl.endNonterminal("BlockExpr",vl)}function cl(){Dl(276),jl(273),Wa(),Dl(282)}function hl(){kl.startNonterminal("FunctionDecl",vl),_l(145),jl(253),Hl(),Ma(),jl(22),_l(34),jl(94),ml==31&&(Hl(),U()),_l(37),jl(148),ml==79&&(_l(79),jl(259),Hl(),ds()),jl(118);switch(ml){case 276:_l(276),jl(273),Hl(),za(),_l(282);break;default:_l(133)}kl.endNonterminal("FunctionDecl",vl)}function Al(e,t,n){Ll[(t<<4)+e]=n}function Ol(e,t){var n=Ll[(t<<4)+e];return typeof n!="undefined"?n:0}function Ml(e,t,r,i,s){throw t>xl&&(Sl=e,xl=t,Tl=r,Nl=i,Cl=s),new n.ParseException(Sl,xl,Tl,Nl,Cl)}function _l(e){ml==e?(Hl(),kl.terminal(i.TOKEN[ml],gl,yl>Ul?Ul:yl),dl=gl,vl=yl,ml=bl,ml!=0&&(gl=wl,yl=El,bl=0)):Ml(gl,yl,0,ml,e)}function Dl(e){ml==e?(dl=gl,vl=yl,ml=bl,ml!=0&&(gl=wl,yl=El,bl=0)):Ml(gl,yl,0,ml,e)}function Pl(e){var t=dl,n=vl,r=ml,i=gl,s=yl;ml=e,gl=zl,yl=Wl,bl=0,Oa(),dl=t,vl=n,ml=r,ml!=0&&(gl=i,yl=s)}function Hl(){vl!=gl&&(dl=vl,vl=gl,kl.whitespace(dl,vl))}function Bl(e){var t;for(;;){t=Xl(e);if(t!=22){if(t!=36)break;Pl(t)}}return t}function jl(e){ml==0&&(ml=Bl(e),gl=zl,yl=Wl)}function Fl(e){bl==0&&(bl=Bl(e),wl=zl,El=Wl),pl=bl<<9|ml}function Il(e){ml==0&&(ml=Xl(e),gl=zl,yl=Wl)}function ql(e){bl==0&&(bl=Xl(e),wl=zl,El=Wl),pl=bl<<9|ml}function Xl(e){var t=!1;zl=Wl;var n=Wl,r=i.INITIAL[e],s=0;for(var o=r&4095;o!=0;){var u,a=n<Ul?Rl.charCodeAt(n):0;++n;if(a<128)u=i.MAP0[a];else if(a<55296){var f=a>>4;u=i.MAP1[(a&15)+i.MAP1[(f&31)+i.MAP1[f>>5]]]}else{if(a<56320){var f=n<Ul?Rl.charCodeAt(n):0;f>=56320&&f<57344&&(++n,a=((a&1023)<<10)+(f&1023)+65536,t=!0)}var l=0,c=5;for(var h=3;;h=c+l>>1){if(i.MAP2[h]>a)c=h-1;else{if(!(i.MAP2[6+h]<a)){u=i.MAP2[12+h];break}l=h+1}if(l>c){u=0;break}}}s=o;var p=(u<<12)+o-1;o=i.TRANSITION[(p&15)+i.TRANSITION[p>>4]],o>4095&&(r=o,o&=4095,Wl=n)}r>>=12;if(r==0){Wl=n-1;var f=Wl<Ul?Rl.charCodeAt(Wl):0;return f>=56320&&f<57344&&--Wl,Ml(zl,Wl,s,-1,-1)}if(t)for(var d=r>>9;d>0;--d){--Wl;var f=Wl<Ul?Rl.charCodeAt(Wl):0;f>=56320&&f<57344&&--Wl}else Wl-=r>>9;return(r&511)-1}r(e,t);var n=this;this.ParseException=function(e,t,n,r,i){var s=e,o=t,u=n,a=r,f=i;this.getBegin=function(){return s},this.getEnd=function(){return o},this.getState=function(){return u},this.getExpected=function(){return f},this.getOffending=function(){return a},this.getMessage=function(){return a<0?"lexical analysis failed":"syntax error"}},this.getInput=function(){return Rl},this.getOffendingToken=function(e){var t=e.getOffending();return t>=0?i.TOKEN[t]:null},this.getExpectedTokenSet=function(e){var t;return e.getExpected()<0?t=i.getTokenSet(-e.getState()):t=[i.TOKEN[e.getExpected()]],t},this.getErrorMessage=function(e){var t=this.getExpectedTokenSet(e),n=this.getOffendingToken(e),r=Rl.substring(0,e.getBegin()),i=r.split("\\n"),s=i.length,o=i[s-1].length+1,u=e.getEnd()-e.getBegin();return e.getMessage()+(n==null?"":", found "+n)+"\\nwhile expecting "+(t.length==1?t[0]:"["+t.join(", ")+"]")+"\\n"+(u==0||n!=null?"":"after successfully scanning "+u+" characters beginning ")+"at line "+s+", column "+o+":\\n..."+Rl.substring(e.getBegin(),Math.min(Rl.length,e.getBegin()+64))+"..."},this.parse_XQuery=function(){kl.startNonterminal("XQuery",vl),jl(268),Hl(),o(),_l(25),kl.endNonterminal("XQuery",vl)};var pl,dl,vl,ml,gl,yl,bl,wl,El,Sl,xl,Tl,Nl,Cl,kl,Ll,Rl,Ul,zl,Wl};r.getTokenSet=function(e){var t=[],n=e<0?-e:INITIAL[e]&4095;for(var i=0;i<284;i+=32){var s=i,o=(i>>5)*3684+n-1,u=o>>2,a=u>>2,f=r.EXPECTED[(o&3)+r.EXPECTED[(u&3)+r.EXPECTED[(a&7)+r.EXPECTED[a>>3]]]];for(;f!=0;f>>>=1,++s)(f&1)!=0&&t.push(r.TOKEN[s])}return t},r.MAP0=[70,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,17,17,17,17,17,17,17,17,18,19,20,21,22,23,24,25,26,27,28,29,26,30,30,30,30,30,31,32,33,30,30,34,30,30,35,30,30,30,36,30,30,37,38,39,38,30,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,38,38],r.MAP1=[108,124,214,214,214,214,214,214,214,214,214,214,214,214,214,214,156,181,181,181,181,181,214,215,213,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,247,261,277,293,309,355,371,387,423,423,423,415,339,331,339,331,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,440,440,440,440,440,440,440,324,339,339,339,339,339,339,339,339,401,423,423,424,422,423,423,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,423,338,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,339,423,70,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,17,17,17,17,17,17,17,17,17,18,19,20,21,22,23,24,25,26,27,28,29,26,30,30,30,30,30,31,32,33,30,30,30,30,30,30,30,30,30,30,30,30,30,30,38,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,34,30,30,35,30,30,30,36,30,30,37,38,39,38,30,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,38,38,38,38,38,38,38,38,38,38,38,38,30,30,38,38,38,38,38,38,38,69,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69],r.MAP2=[57344,63744,64976,65008,65536,983040,63743,64975,65007,65533,983039,1114111,38,30,38,30,30,38],r.INITIAL=[1,12290,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],r.TRANSITION=[23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22007,18176,18196,18196,18196,18203,18196,18196,18196,18196,18230,18196,18196,18196,18196,18219,18196,18180,18246,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,21369,18411,20907,20920,20932,20944,22539,18416,20967,23546,23546,23546,35799,23546,23546,51042,37625,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,21008,21032,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21632,21055,23546,23546,23546,21178,23546,23546,23916,42362,21241,23546,23546,23546,23546,19298,47203,21077,21110,23546,23546,23546,35799,23546,23546,21194,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,21229,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21358,21323,23546,23546,23546,26152,23546,23546,27593,23546,21369,29482,21257,21282,21273,21304,21317,21346,20967,23546,23546,23546,28947,23546,23546,21385,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,20711,21423,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,21446,26048,18745,18766,18771,20561,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23540,23546,23546,23546,25880,23545,23546,31245,23546,21468,23534,21504,23546,21511,23546,21527,21539,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,21567,23546,23546,23546,31874,23546,23546,21586,23546,23546,21608,21620,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,35211,23546,23546,23546,23546,23546,23546,23424,21648,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,21681,18544,18567,18590,50977,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21736,21705,23546,23546,23546,44539,23546,23546,24265,25689,25607,23546,23546,23546,23546,26450,47502,21724,21752,23546,23546,23546,35799,23546,23546,21783,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,20237,21819,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21551,21857,21913,21913,21913,21864,21908,21913,21918,21967,21842,21949,21880,21961,21896,21934,21983,21995,20967,23546,23546,23546,26225,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,22023,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,28636,23546,23546,23546,25912,50946,23546,50080,50952,21369,28635,23546,22054,22060,22076,22111,22121,22137,23546,23546,23546,30755,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,22183,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,27655,23546,23546,23546,25841,23546,23546,23546,51066,39748,22869,22242,22228,22245,22261,22277,22288,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,20285,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,18648,40763,24585,22304,22324,22304,22338,24585,22308,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,22361,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,22386,23546,23546,23546,25841,18403,23546,19576,22382,44281,22402,22429,22434,22434,22450,22385,22413,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22473,23546,23546,23546,23546,25841,23546,23546,23546,23546,21369,25653,22498,22518,22498,22532,25653,22502,22555,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27132,23546,42897,23546,44844,38626,22584,22361,37471,23546,23546,23546,23546,22587,47563,46856,47563,47563,22603,35356,22824,22824,34828,22804,22621,22804,22804,33187,36943,23546,23546,23546,23546,23546,26071,23546,22641,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,43701,32739,23546,23546,23546,23546,23546,29474,22702,23546,33124,44563,47563,47563,47563,47564,22719,35350,22824,22764,22824,22767,35689,22783,22804,22803,22804,29879,33195,23546,23546,23546,23546,23546,27587,23546,23546,47562,46826,47563,47563,27195,22821,42846,22824,22824,22824,30376,22804,22841,22804,22804,29883,33199,23546,23546,21430,23546,49502,48973,47563,47563,36153,45209,22824,22824,39816,27834,22804,22804,43796,30403,39964,23546,23546,22861,23546,47560,22885,47563,23113,22903,22824,33078,22920,22804,38116,23546,23546,22937,29174,22980,47563,34384,42527,22825,23019,22804,31964,47447,46606,23083,36624,23105,32340,30673,23131,36549,23164,40907,43074,23200,23229,23275,36645,36686,33550,48975,23107,30672,23141,39417,23313,23334,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,24855,21369,23546,23546,23546,23546,23546,20980,20992,23383,23546,23546,23546,35799,23546,23546,23420,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,23440,27132,23546,23546,23546,44844,23546,23546,18368,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,22603,22824,22824,22824,34828,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,26071,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23485,23546,23546,23546,26606,23546,23546,23546,23546,21369,28080,23505,23528,23563,23575,28081,23512,20967,23546,23546,23546,35799,23546,23546,51042,30821,23546,37478,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23598,23546,23546,23546,25841,23546,23546,23546,23184,21369,23546,23546,23546,23546,23546,22653,22665,23615,23546,23546,23546,35799,23546,23546,23644,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,23664,27132,23546,23546,23546,44844,23546,23546,23688,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,22603,22824,22824,22824,34828,22804,22804,22804,22804,39677,48779,23733,23546,23546,23546,23546,34921,23753,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,23777,48792,23546,23546,23546,23546,23546,50620,23546,23546,23546,48976,47563,47563,47563,47563,41753,22821,22824,22824,22824,22824,44122,35849,22804,22804,22804,22804,29879,23672,23807,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,34866,22821,22824,22824,22824,22824,23826,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,39721,23546,23546,23546,30797,25982,23546,23546,23849,21369,20313,44188,23887,23893,23909,23546,49114,23932,23546,23546,23546,36603,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,24187,24465,24820,25200,24258,18282,18849,18305,23964,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,23993,24116,24017,24046,24001,24088,25090,24132,24812,24103,24159,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,24182,25436,24884,24206,24190,24890,24819,24363,24227,24819,24414,24143,25214,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,24243,24030,25425,24281,24706,24308,24337,24350,24389,24405,24517,24423,25208,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,24439,19364,24455,25063,24489,24505,24533,25266,24373,24545,24561,24577,18900,19554,23717,19574,19592,19632,19657,20190,20797,19809,24679,24601,25048,19406,24473,24617,25251,25017,24736,26492,19746,41094,19782,18942,19201,19798,24633,24673,24695,24722,24779,24801,24836,23977,20842,20016,18679,20827,20042,24871,24906,24935,24951,25006,25411,25295,20159,20175,20206,25033,24292,25079,25281,25106,20376,20392,19394,24919,24657,20462,19676,24211,24785,32258,19353,24647,24966,20473,24060,25136,20616,25172,25188,25236,24072,25311,25362,25396,25452,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,21328,23546,23546,23546,25841,25477,23546,23546,25472,32915,25493,25501,25501,25501,25517,21330,25540,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,25581,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20499,25597,18792,18808,18830,23628,18814,25623,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,21016,25645,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,25669,25705,25721,19477,25754,19498,25737,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,18708,21452,19692,19708,20143,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,50535,23259,25770,25770,25770,25779,21123,21135,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,25220,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,25802,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21147,20888,23546,23546,23546,25841,23546,23546,23546,23546,21369,22959,25825,25825,25825,25834,20891,22964,25857,23546,23546,23546,35799,23546,23546,51042,23546,23546,27140,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,25873,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,25552,25561,23546,23546,23546,26852,23546,23546,23546,23546,21369,33245,25896,25896,25896,25905,36950,33250,25928,23546,23546,23546,35799,23546,23546,51042,23546,23546,22366,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,25964,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,25998,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,26099,23546,23546,23546,23546,25841,21661,23546,23546,21094,43925,23546,23546,23546,21665,26069,21092,26087,20967,23546,23546,23546,35799,23546,23546,51042,31389,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,26115,26145,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,21369,23546,23546,23546,23546,23546,43987,26168,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,50621,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,40883,26241,23546,23546,23546,23546,23546,50620,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,23672,23807,23546,23546,23546,23546,26285,23546,23546,47562,47563,47563,47563,29369,22821,22824,22824,22824,22824,28821,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,26302,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,50621,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,40883,26241,23546,23546,23546,23546,23546,50620,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,23672,23807,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,29369,22821,22824,22824,22824,22824,28821,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,50621,26321,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,40883,26241,23546,23546,23546,23546,23546,50620,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,23672,23807,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,29369,22821,22824,22824,22824,22824,28821,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,50621,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,40883,26241,23546,23546,23546,23546,23546,19867,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,23672,23807,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,29369,22821,22824,22824,22824,22824,28821,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,26341,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,26341,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,50621,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,40883,26241,23546,23546,23546,23546,23546,50620,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,23672,23807,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,29369,22821,22824,22824,22824,22824,28821,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,23049,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26364,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,19293,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,31312,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,37937,26399,26410,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,26426,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,26445,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,21369,41698,26466,26486,26508,26520,41701,26470,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,38227,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,26543,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,21369,23546,23546,23546,23546,23546,23546,23424,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,21369,28554,23546,26577,26583,26599,47449,44239,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,26622,20175,20206,20222,51139,20274,51143,20301,26638,20392,51127,20418,50802,26654,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,27306,23546,23546,23546,26527,26683,26714,28322,26699,26731,50814,50823,26775,26789,26801,26817,26829,26204,26845,23599,23546,25326,21171,35898,34903,26868,26909,26948,33311,26979,26959,26995,27011,45967,27047,27063,27101,27117,34536,27156,23546,23546,44844,41240,34846,23546,42415,27173,27664,23546,42356,28101,47563,47563,47563,27192,27418,22824,22824,42533,43762,22804,22804,22804,27211,27231,36943,23546,44839,40944,23546,27267,27287,46640,23546,27304,35519,43402,27322,27344,47563,47563,27380,27403,27436,31453,22824,33011,27464,27493,27533,27556,22804,38069,35418,30315,27573,26241,27609,23546,44532,27629,39107,50620,23546,45009,27646,31107,27698,47563,27746,27765,23297,27785,27825,36368,22824,27859,48139,23833,27991,44504,49256,22804,43572,23672,27877,42988,25683,23546,27893,27913,46094,23546,21213,44018,47563,30489,32462,27941,34820,22824,45399,49012,28821,27978,22804,22804,28014,28034,49064,28072,35792,28097,51046,28117,50856,22994,28137,47563,41728,28206,28229,22824,41433,28267,28290,22804,34572,28320,28338,23546,23546,39715,47560,28358,45550,23113,28379,35308,33078,28399,36714,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,41649,28419,28455,40472,38341,28471,38828,40452,28791,24756,33030,27540,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,28526,23546,23546,26527,23546,23546,23546,23546,34078,28545,23546,28652,28658,28674,28690,28701,26204,23546,23546,23546,35799,23546,23546,23546,23546,26963,23546,23546,23546,23546,23546,48973,47563,22605,35842,45303,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,46230,50621,28718,23546,28717,23546,48975,47563,47563,47563,27769,28735,22823,22824,22824,22824,49361,49439,22804,22804,22804,22804,28781,29885,40883,26241,23546,23546,23546,23546,23546,50620,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,23672,23807,23546,18289,23546,23546,44779,49528,23546,36898,47563,47563,47563,40417,28807,22824,22824,22824,50340,31197,28844,22804,22804,22804,28863,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,21205,28900,28924,28940,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,28963,23546,23546,26527,23546,28992,23546,29010,36977,29029,29038,29054,29069,29081,29097,29109,26204,23546,23546,33645,49739,23546,28529,23546,23546,31365,23546,23546,23546,35995,23546,29125,31167,22824,29149,40337,48749,32108,23546,29172,23546,44844,29190,42384,23546,31347,50774,29209,23546,25948,29214,29230,29291,47563,47563,29309,29325,22824,22824,45608,49036,29349,22804,22804,39677,36943,30220,23546,23546,47099,23546,22095,50621,37205,27682,23546,23546,48975,28152,40051,47563,29366,37135,45217,46920,46953,36665,22824,49439,49901,29385,29404,34563,22804,29885,40883,26241,23546,23546,47600,23546,23546,29423,23546,29445,23546,48976,47563,47563,47563,44406,47564,22821,22824,22824,49328,42575,22767,35849,22804,22804,39288,28274,50448,23672,29464,23546,23546,23546,29498,42828,23546,23546,47562,47563,47563,46820,29369,22821,22824,22824,37856,22824,28821,22804,22804,30184,22804,29883,33199,23546,23546,29517,23546,47519,29538,47563,46768,47563,41728,22824,49353,22824,41433,22804,41641,22804,27843,29565,23546,23546,23546,29581,33988,49629,29610,50265,49148,29627,30732,37573,29644,31970,23546,23546,28626,22586,47563,47563,29661,22824,47375,22804,22804,29679,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,45087,23089,29701,47077,23141,24756,33030,33551,47559,33030,33552,39426,42307,27251,29717,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,21570,23546,23546,26527,23546,29745,24166,23546,32508,29764,29773,29789,29803,29812,29828,29839,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,34673,34671,23546,38486,38493,29855,28213,35842,29875,43066,27800,23546,40629,29901,44844,23546,29926,30774,23546,23546,41541,20026,29946,29989,29293,38320,30005,40270,30031,42116,30052,30082,30100,49972,39453,30135,41942,39677,36943,23546,23546,23546,42078,23546,30162,50621,23546,23546,23546,39564,48975,47563,47563,47563,48721,37135,22823,22824,22824,22824,42777,49439,22804,22804,22804,22804,30182,30146,30200,30236,23546,23546,23546,30252,30271,50620,23546,23546,45468,23469,31420,34156,47563,47563,45201,30292,30331,30348,22824,22824,30365,29156,29407,22804,22804,22804,30399,23672,23807,23546,23546,23546,23546,45523,28572,23546,33872,47563,47563,30419,29369,30438,22824,22824,48645,22824,31904,22804,22804,50360,22804,30539,33199,49920,23546,30462,23546,50724,48973,36270,47563,30480,41728,35391,22824,30505,41433,50493,22804,30530,30403,47447,49732,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23251,23546,22586,47563,47563,30555,22824,36108,22804,22804,30575,47447,46606,22585,47563,24761,22824,30673,22804,30597,46609,47561,23111,30673,39296,30622,30648,30668,30689,19013,30707,30727,30748,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23547,30771,23546,26527,25156,30790,23546,30813,24321,30837,30846,30862,30876,30888,30904,30915,26204,22703,30931,26561,35799,30978,26921,26341,27925,30994,31013,31032,31061,31045,31097,31131,31147,31183,31227,31261,31277,39237,39476,31293,33748,31328,22212,31363,31381,41158,23546,23546,40033,23546,22587,32449,31405,47817,28510,31441,31475,46890,31498,30304,31538,22625,36744,47681,39677,36943,23698,29973,31554,29930,31590,23708,31634,39997,31661,48812,31689,31711,31727,31763,31798,31814,29245,31850,40093,31890,34721,31940,35662,31956,31986,27076,32035,32066,32093,32133,26241,50755,23546,43683,23546,32169,19239,32192,32249,22951,24750,43255,32274,47563,32292,45560,22821,32317,22824,42593,48588,50230,35849,32356,22804,45665,32384,32405,32421,23807,25150,32478,32497,47176,23546,32524,45835,36145,40407,31425,32550,44054,32586,34739,22824,32631,32657,30066,33080,32683,47042,40501,29883,33199,23546,45717,33237,23546,23546,32701,31115,42955,32563,41728,45894,41614,32608,41433,33712,42499,35727,30403,47447,28590,32719,48060,32755,32790,42232,33671,32806,37745,39609,32837,40736,33730,32892,32931,32953,19435,22586,32974,48106,28046,33009,33027,33047,48381,35461,47447,40617,22585,47563,50257,22824,33074,36473,36549,33096,40786,36807,32667,39296,33119,43227,48451,49953,33140,24763,23318,45645,33156,33172,33217,47559,33030,30691,33266,33282,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,33306,23546,26527,33327,33345,25456,24849,33370,33400,23546,33386,33428,33437,33453,33464,26204,23546,23546,33480,35799,23546,23546,23546,23546,27288,23546,23546,34477,23546,34484,31605,33499,33519,43660,33545,33568,27800,23546,33621,23546,44844,33621,23546,23546,30997,23546,33640,34051,23546,22587,33661,47563,47563,47563,33687,22824,22824,22824,43762,33703,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,50621,23546,23546,23546,33746,48975,47563,47563,47563,43863,37135,22823,22824,22824,22824,34733,49439,22804,22804,22804,22804,33764,29885,40883,26241,23546,23546,23546,23546,23546,50620,23546,20258,23546,48976,47563,47563,46759,47563,47564,22821,22824,22824,37850,22824,22767,35849,22804,22804,33781,22804,29879,23672,23807,23546,23546,23546,23546,23546,43159,23546,47562,47563,47563,31773,29369,22821,22824,22824,49239,22824,28821,22804,22804,22804,33801,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,41728,22824,22824,22824,41433,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,33820,23546,23546,22586,44762,47563,23109,33840,22825,34299,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,23335,32233,42307,22729,33859,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,32176,23546,23546,41552,33893,33902,33918,33924,33940,33956,33967,26204,23546,23546,23546,35799,23546,23546,37894,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,28765,41920,23546,23546,44844,23546,23546,23546,39585,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,43177,23546,23546,45738,48975,47563,47563,47563,47563,37135,41960,22824,22824,22824,22824,47410,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,20340,23546,23178,20358,23546,23546,20360,33983,47563,47563,34004,47563,47564,22821,22824,36824,22824,22824,22767,35849,22804,33785,22804,22804,29879,34024,23546,23546,23546,34050,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,32147,47539,23546,48973,47563,47563,39206,45209,22824,22824,43898,27834,22804,22804,34943,30403,47447,34067,47158,34094,23546,34121,32984,34141,34177,43533,34196,34244,36447,34263,31970,28608,23546,34315,34336,34355,34372,28875,33605,34412,34436,34454,31964,47447,46606,43054,32993,34501,34521,30673,34552,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,43326,34588,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,41690,23546,26286,34628,23546,23546,23546,34692,23546,34693,23546,23546,34656,34689,40521,22887,37164,34396,43815,34709,34755,23546,23546,29501,44844,26383,30255,23546,23546,41921,23546,23546,23546,22587,47563,47563,32276,47563,27418,22824,22824,35655,43762,22804,22804,35850,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,34780,43953,48975,47563,47563,47563,47563,29859,22823,22824,22824,22824,22824,30446,22804,22804,22804,22804,22804,34799,33201,23546,34844,23546,23546,23546,23546,23546,23546,23546,42714,48976,34862,47563,47563,47563,47564,34882,22824,22824,22824,22824,22767,30383,22804,22804,22804,22804,29879,33195,23546,23546,23546,34898,23546,23546,23546,23546,47562,47563,47563,49594,27195,22821,22824,22824,22824,49007,30376,22804,22804,22804,28251,29883,33199,23546,23546,45156,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,28617,23546,48860,47563,47563,23109,22824,22825,22804,22804,48020,34919,46606,50168,47563,35289,22824,34937,22804,34959,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,26217,23546,26527,28994,29429,32937,21397,21407,19607,19616,34984,34999,35011,35027,35038,26204,23546,23546,23546,21159,35548,23546,23546,29013,35054,32876,23546,35263,35074,35112,39498,35166,47961,27448,49402,46199,35202,23546,23546,23546,38910,23546,47123,35227,23546,23546,23546,35244,44990,22587,44754,35279,47563,35324,35372,48187,22824,29333,35407,49176,35434,22804,35477,39677,36943,23546,35515,50019,41319,42187,35535,23546,19253,43384,35575,35592,35612,35186,47563,42920,37391,20600,22823,35386,22824,40181,35635,35678,29350,22804,33765,35713,35750,48433,33201,23546,23546,23546,23546,35766,20349,35815,44388,23546,23546,40380,47253,47563,47563,41209,36250,35833,43893,22824,22824,48653,43541,43789,35866,22804,22804,31917,36853,33195,23546,19730,35885,35914,32534,35930,35957,45488,36011,28363,36030,36050,36074,36103,39870,50408,42260,32597,45635,22804,36124,36169,36204,27085,31863,36220,46659,44955,21826,38142,32958,36266,47872,36286,36321,36366,36384,36409,36435,36471,36489,36514,36540,36572,23546,23546,18340,36595,30632,36619,36640,39370,36661,36681,36702,36740,36760,31970,23546,36781,18841,22586,47563,47563,23109,22824,22825,22804,22804,31964,34034,46606,22585,31741,36801,36823,36840,38424,36549,46609,36869,23111,30673,39296,36886,35338,36933,36966,48975,23107,30672,23141,24756,33030,33551,42313,47646,36993,39426,42307,22729,23448,37021,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,39988,23546,26527,23546,23546,23546,23546,21369,50028,21708,39996,40225,24990,37071,37082,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,31016,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,27420,22824,43762,22804,22804,48012,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,25524,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,37098,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,37115,23546,23546,23546,23546,23546,23546,23546,23546,48976,37134,47563,47563,47563,47564,37151,22824,22824,22824,22824,22767,28828,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,41164,23546,26527,23546,34764,23546,19155,37185,37221,37234,37250,37256,37272,37288,37299,26204,23546,37315,23546,35799,23546,43426,26746,23546,23546,37335,23546,32153,42194,37334,37351,37380,37407,37443,40833,37430,32821,37459,23546,23546,34612,23546,23546,40581,34220,23546,41122,29193,49795,34228,47262,37494,29549,41774,37514,42784,22904,45886,37530,38036,37570,36188,37589,23034,37618,28342,23546,23546,23546,23546,50126,23546,23546,23546,23546,23546,48975,28498,44484,47563,28434,44023,37641,37671,39810,30349,22824,39853,47704,29645,22804,49383,22804,37657,33201,23546,23546,50909,37693,23546,32019,38379,23546,23546,23546,48976,47563,47563,46474,32220,37710,22821,22824,22824,49321,37734,37761,35849,22804,22804,37788,37809,29879,33195,23546,37872,23546,23546,37889,23546,23546,23546,47562,27357,47563,47563,27195,22821,40293,22824,22824,22824,30376,34247,22804,22804,22804,29883,33199,37910,31075,23546,37928,47744,48973,37953,47563,47563,37979,38003,22824,22824,38027,38061,22804,22804,38085,47447,23404,23546,28599,23546,47560,31782,47563,23113,38011,22824,33078,33721,22804,31970,23546,21592,23546,22586,47563,50097,23109,22824,40810,22804,22804,38110,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,33290,45056,38132,38158,38179,33552,39426,27505,38215,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23648,23546,26527,23546,26305,23546,23546,29594,20530,20539,38250,38264,38273,38289,38300,26364,23546,23948,23546,35799,23546,34320,23546,23546,23546,23948,23546,35554,36579,23947,35559,38316,33588,36393,38336,43066,27800,23546,23546,38357,44844,23546,39344,42555,23546,39071,23546,23546,38375,41192,48530,47563,47812,38395,28750,22824,42121,31482,43762,38449,22804,38419,38440,32050,38473,38509,46688,34783,23546,23546,23546,23546,23546,38530,23546,23546,48975,47883,38550,42949,47563,37135,22823,38568,30084,22824,22824,49439,42031,34293,41837,22804,22804,29885,33201,23546,38929,23546,38602,23546,44369,37873,23791,38621,23546,48976,27031,38642,47563,38659,47564,38683,47916,22824,22824,38702,33843,35849,39277,22804,33804,38724,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,36556,23546,23546,23546,23546,47560,38744,47563,30559,22824,22824,46066,22804,22804,31970,23546,23546,49685,22586,47563,47563,23109,47427,22825,22804,35452,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,38761,47561,38782,38802,43621,23464,38824,38844,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,38045,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23810,23546,46101,23546,29522,38860,33103,38895,38945,38984,38970,38989,38954,39005,39016,26204,23546,24981,39032,39052,39135,26183,26715,27157,23546,39087,39123,35972,23871,39151,32436,39187,39222,39262,39312,39360,27800,27271,23546,23546,40856,29748,35256,26269,47340,39386,28121,33483,41086,39406,48539,39200,45029,47563,29260,30036,22824,47369,43762,41883,39448,22787,22804,32852,39469,27673,33624,23546,39492,23546,23546,30166,23546,19760,23546,25974,48975,39514,47563,47563,47563,37135,37987,39541,30332,22824,22824,49439,34278,22804,48403,22804,22804,29885,33201,23546,23546,23546,23546,49277,23546,23546,39561,44662,39580,2e4,47563,47563,38745,47563,41583,39601,22824,22824,42751,22824,39625,36344,22804,22804,49650,22804,39663,33195,39390,39701,21803,40964,23546,28563,39737,39764,42864,39780,30015,27711,27195,22821,39796,39832,37838,39869,30376,37543,39886,39910,39936,47724,39958,49087,33227,48840,39980,40013,20680,50204,40049,40067,40083,45419,22824,40109,40125,36765,22804,40151,40167,47447,40217,23546,23546,19121,40241,48114,40263,48445,44596,40286,40309,42808,40330,30581,40353,23546,23546,40374,28485,40396,27517,40433,40468,40722,40488,31964,30114,48477,40517,36058,24761,45115,30673,40537,36549,40555,19020,29663,30673,40603,40652,40668,40708,40752,40779,40802,40826,40849,24756,33030,33551,47559,33030,33552,40872,40899,22729,23448,40923,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,40939,26527,23546,35150,40960,23546,26932,40980,40989,41005,41019,41028,41044,41055,26204,41071,27176,35142,41110,22748,41145,23546,41180,29961,41225,35127,41274,41299,41335,41350,41366,41401,41487,41458,41474,41503,23546,18442,27630,46235,23546,41314,19147,41528,40358,23546,23546,45375,22587,47563,36909,41568,47891,27418,38686,27953,41607,41630,22804,23213,41665,46983,39677,36943,23546,45937,23546,37118,23546,39337,41681,33824,35058,38605,23546,41717,41752,28167,41769,47563,43475,41790,42050,41800,22824,22824,41816,41853,50302,41874,22804,49204,29885,47656,41907,23546,38879,36785,23546,23546,23546,23546,23546,39036,48976,47563,46791,34008,47563,47564,22821,22824,44589,46895,22824,22767,35849,22804,41937,38457,22804,29879,33195,23546,23546,49550,23546,45766,23546,23546,23546,47562,47563,47563,47563,32301,41958,22824,22824,22824,46046,28243,22804,22804,22804,22804,41977,33199,20951,42005,23546,23546,23546,44350,47563,31827,47563,41591,22824,49433,22824,28884,22804,42026,22804,30403,31211,23546,23546,23546,23546,27328,40247,47563,27241,38708,22824,42285,31924,22804,29685,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,22739,46606,49667,46712,38403,42047,44103,22804,44463,42066,42221,42103,42137,42175,42210,42248,42276,42301,48975,23107,30672,23141,24756,33030,33551,47559,33030,35697,39426,36136,22729,23448,42329,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,26377,26527,23546,23546,42378,33354,42400,20758,23546,26429,42436,42448,42464,42475,26204,23546,23546,25120,35799,23546,23546,23546,31573,31305,23546,23546,31567,25118,23546,48973,37963,23115,42491,47011,42515,27800,23546,42549,23546,44844,23546,38766,18352,23546,39064,23546,23546,22159,22587,48548,38163,45793,48521,47316,42571,42591,47404,42609,44147,39942,22845,35499,47057,42343,42636,23546,42657,23546,42010,42641,26759,23546,23546,23546,23546,48975,47563,47563,36917,47563,37135,22823,22824,22824,42693,22824,49439,22804,22804,28847,22804,22804,29885,45066,44270,23546,42713,23546,23546,26553,42677,42730,31574,23546,48976,47563,48931,47563,47563,47564,42748,22824,42767,22824,22824,34180,35849,22804,42800,22804,22804,29879,33195,23546,44983,23546,23546,23546,23546,42824,23546,47562,47563,36034,47563,27749,22821,22824,22824,42844,22824,48373,22804,22804,38192,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,18259,23546,23546,42862,47563,47563,23113,22824,22824,33078,22804,22804,39325,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,48281,42880,42913,28181,33529,39296,42936,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,38514,23546,23546,23546,44073,44076,50916,44069,36233,42971,33598,40201,40539,43066,29275,42987,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,43004,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,43023,22824,22824,22824,22824,43497,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,30422,47563,23109,38579,22825,32685,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,22195,38234,23546,23546,22088,23546,31645,43040,31695,43090,43103,43112,43128,43139,26204,23546,31341,32732,35799,43366,43155,43175,36087,40692,50768,31673,43193,32904,31522,31081,43243,43271,43287,43315,43342,40683,23546,23546,23546,45381,43358,40568,43382,43400,43418,23546,23546,30119,43208,47563,43442,27364,43462,43491,28908,22824,43513,43557,22804,43588,41858,43607,43637,43676,23546,23546,23546,18266,35576,23546,23546,43699,43717,43736,20331,32703,47563,41378,47563,46720,41989,43754,29628,22824,22824,43651,43778,43812,46171,22804,44212,43831,43879,33201,23546,23546,45346,23546,43914,43941,23546,27809,23863,43976,44003,47563,48620,44039,35181,49990,44092,22824,45449,39545,44119,42697,44138,22804,44163,27998,44211,35734,33195,39171,23546,23546,23067,44228,32012,23546,44255,36870,46433,23003,47563,27195,22821,44297,46134,22824,22824,30376,39647,22804,44322,22804,41442,44340,23546,44366,44385,23546,23546,34339,44404,47563,47563,44422,22824,22824,22824,44438,22804,22804,22804,44454,47447,48298,23546,23546,23546,44479,47563,47563,46130,22824,22824,44500,22804,22804,44520,23546,40027,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,38094,49704,44555,44579,44612,44650,23464,24759,33031,33550,44685,30652,34420,36724,24756,33030,33551,47559,33030,45310,44716,44744,32641,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,25786,26527,44778,28976,18999,44795,44824,44860,44808,44885,44899,44911,44927,44938,26204,44954,40587,23546,44971,23546,23546,43960,23546,50132,23546,45006,35089,26325,35096,32207,45025,45045,44306,45082,45103,27800,35987,37200,44669,44844,34640,23546,23546,23546,23546,45137,45172,23546,19324,45188,43446,47563,47563,45233,45249,45268,22824,43762,45291,40314,22804,22804,39677,36943,37912,23546,23546,45326,45362,23546,23546,23546,23546,23546,37055,48975,48512,31834,47563,47563,46028,22823,45397,45415,22824,22824,36333,38728,44324,22804,22804,22804,45435,33201,23546,23546,26251,43720,23546,45465,26758,45484,45504,23546,45539,47563,47563,47285,43856,45576,45600,22824,22824,47994,48169,45624,45661,22804,22804,42152,45681,29879,45697,45713,45733,23546,25942,23546,23546,30214,45754,47562,47563,27730,45789,27195,22821,22824,47619,47969,22824,30376,22804,22804,45809,22804,29883,33199,23546,21039,23546,49467,37049,48973,47563,45851,48716,45584,47934,22824,45868,48003,35869,22804,45910,30403,47447,23546,48332,18869,22345,47560,47563,47563,23113,22824,22824,33078,22804,22804,32e3,21288,23546,45931,45953,47563,37498,23109,22824,40444,22804,34438,36455,45997,44634,19558,46021,50382,46044,28056,22804,34468,46609,35619,30711,46062,46082,23464,24759,33031,33550,19538,36296,49945,23141,46117,38586,45823,48503,46150,46187,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23737,26527,23546,23546,34968,23546,46215,26881,26893,46251,46267,46279,46295,46306,26204,46322,23241,25565,35799,25341,42889,46340,22204,44869,46352,46368,46377,46393,46349,46420,46455,46490,46547,46518,46534,32867,46005,19766,34600,44844,46563,23546,26188,46580,41258,46596,46625,46675,46736,46784,46807,46842,38552,46877,45877,46911,46944,36419,46977,46999,47027,27557,39677,37035,47093,47115,35228,23546,47139,47174,23546,47766,23546,49770,47192,20591,47219,47244,47278,38643,47301,41736,47356,47391,47426,31459,49439,36524,39920,40135,22804,35492,33058,47443,23546,20251,43007,37694,47465,46324,47491,47518,23546,47535,47555,39525,47841,47563,34125,47580,47616,47635,39844,22824,37169,48362,35849,47672,47697,22804,41891,47720,33195,23058,47740,23546,45516,47760,23546,47782,18627,47798,50186,47833,47857,27195,47907,47932,47950,47985,48036,39636,46165,37602,50472,50517,37554,27477,48056,18311,23546,35780,48076,48095,44700,47563,47563,48130,48155,37677,22824,48203,48236,49183,22804,48272,47447,18372,48297,48314,48330,41202,45981,33877,34811,48348,48040,48397,48419,37793,31970,48467,23546,23546,48493,46466,31618,34505,49612,47069,35443,43299,48564,28304,47475,19993,48611,37364,48636,48669,43591,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,44177,29729,48685,36498,48701,45275,48737,39426,42307,22729,39685,48765,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,48828,23546,23546,48856,23546,35941,30944,30953,48876,30953,30962,48892,48903,26204,23546,23546,23546,40636,23546,26348,23546,23546,23546,23546,26345,23546,38923,23546,48973,48919,48178,48947,38808,37005,31513,38873,23546,23546,44844,23546,23546,27897,48963,23546,23546,23546,23546,48971,46750,47563,47563,34356,48992,22824,22824,22824,36305,49028,22804,22804,22804,49052,44728,49080,23546,49103,45341,23546,23546,42732,48802,47595,38359,35596,48975,47563,49130,41385,43221,47228,22823,48595,46928,41415,49146,49164,22804,49199,49220,45915,29388,37824,33201,23546,25346,23546,26261,23546,23546,23546,49474,23546,23546,48976,33503,47563,47563,47563,47564,49236,37414,22824,22824,22824,22767,49255,36180,22804,22804,22804,29879,33195,49272,23546,49293,23546,23546,23546,23546,28581,36243,47563,47563,47563,27195,49311,22824,22824,22824,22824,37772,22804,22804,22804,22804,29883,46502,23546,23546,50321,46564,23546,30276,23289,47563,47563,37718,49344,22824,22824,30514,49377,22804,22804,42620,47447,39101,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,46439,24761,43524,30673,49399,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,49418,45121,44624,47559,33030,33552,39426,32368,49455,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,49490,49547,33412,49525,23546,34105,23546,33409,49544,42420,41283,49566,49577,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,49593,35299,27962,22805,43066,27800,23546,33329,27613,44844,23546,23546,23546,23546,23546,32481,23546,23546,22587,32570,47563,46861,47563,27418,49610,22824,32331,43762,42159,22804,27215,22804,39677,36943,23546,23546,23546,23546,23546,37318,23546,23546,23546,20322,23546,48975,47563,47563,49628,47563,37135,22823,22824,32615,22824,22824,49439,22804,22804,49645,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,49666,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,49683,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,49701,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,49720,23546,50953,23546,25809,49755,49786,23546,49811,49825,49837,49853,49864,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,27387,22824,49893,38199,49880,34211,23546,23546,23546,44844,23546,23546,23546,23546,42672,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,49917,23546,23546,23546,22167,47563,47563,47563,47563,47564,49936,22824,22824,22824,22824,22767,49969,22804,22804,22804,22804,29879,33195,23546,23546,45149,23546,23546,23546,23546,23546,47562,47563,49988,47563,50006,22821,22824,48578,22824,41424,30376,22804,39894,22804,32389,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,26445,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,41512,50052,50063,26204,23546,23546,23546,35799,50079,30464,23546,23546,23546,23546,32774,23546,41129,32770,46701,50096,40191,28190,22805,43066,27800,23546,23546,23546,50113,28719,34485,45773,23546,23546,23546,23546,23546,22587,47563,29611,47563,27026,27418,22824,35645,28383,43762,22804,22921,22804,48250,39677,50148,50164,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,41250,23546,23546,23546,48976,47563,47563,50184,47563,45852,22821,22824,38786,22824,22824,45252,35849,22804,48256,22804,22804,29879,33195,48079,23546,23546,23546,23546,23546,23546,23546,47562,50202,47563,47563,27195,22821,50220,22824,22824,22824,30376,48220,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,23546,23546,23546,23546,19262,39432,32077,26204,21798,23546,23546,35799,23546,23546,46652,23546,23546,23546,23546,46656,23546,23546,50246,28439,22824,50294,36350,50281,47331,23546,29448,23546,44844,23546,23546,23546,23546,23546,23546,23546,35817,22587,47563,47563,47563,27723,27418,22824,22824,27861,43762,22804,22804,22804,48212,39677,36943,23546,50318,23546,23546,23546,23546,23546,23546,37099,23546,23546,48975,38667,47563,36014,47563,37135,22823,50337,22824,46961,22824,49439,28018,22804,22804,50356,22804,29885,33201,23546,43738,23546,23546,23546,23546,23546,38534,23546,23546,48976,47563,50376,47563,47563,47564,50398,41961,50424,22824,22824,22767,50443,28403,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,21488,23546,47562,47563,31747,47563,34161,22821,22824,43024,22824,22824,50464,22804,22804,50488,22804,43844,33199,23546,23546,18921,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,31241,23546,23546,39165,23546,29133,47563,47563,33578,22824,22824,50509,22804,22804,31970,23546,49295,23546,22586,47563,31161,23109,50427,22825,22804,41830,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22677,23546,23546,23546,23546,26527,23546,23546,23546,23546,21369,21483,23546,23546,23546,19262,39432,32077,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27800,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,27418,22824,22824,22824,43762,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,46404,21767,21765,32117,22038,50563,21058,21061,50533,22036,50551,50579,50591,20967,23546,23546,23546,35799,23546,23546,50607,23546,23546,23546,23546,23546,23546,23546,25629,19208,50637,19916,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,50655,18544,18567,18590,19934,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,22150,23546,21369,20766,50679,50692,50708,50717,49509,50740,20967,23546,23546,23546,35799,23546,23546,51042,23546,23546,23546,23761,23546,23546,23758,25629,19208,50639,19926,50639,50790,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,18521,18544,18567,18590,50663,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,42087,23546,23546,23546,23546,22568,29910,50839,50872,50878,50849,23148,50894,20967,23546,23546,23546,35799,23546,23546,50932,23546,23546,22686,23546,23546,23546,22682,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,18327,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,50969,18544,18567,18590,21689,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,20159,20175,20206,20222,51139,20274,51143,20301,20376,20392,51127,20418,50802,20462,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,21089,23546,23546,23546,23546,25841,23546,23546,23546,23546,21369,23546,23546,23546,23546,23546,23546,23489,26204,23546,23546,23546,35799,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48973,47563,22824,35842,22805,43066,27132,23546,23546,23546,44844,23546,23546,23546,23546,23546,23546,23546,23546,22587,47563,47563,47563,47563,22603,22824,22824,22824,34828,22804,22804,22804,22804,39677,36943,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48975,47563,47563,47563,47563,37135,22823,22824,22824,22824,22824,49439,22804,22804,22804,22804,22804,29885,33201,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,48976,47563,47563,47563,47563,47564,22821,22824,22824,22824,22824,22767,35849,22804,22804,22804,22804,29879,33195,23546,23546,23546,23546,23546,23546,23546,23546,47562,47563,47563,47563,27195,22821,22824,22824,22824,22824,30376,22804,22804,22804,22804,29883,33199,23546,23546,23546,23546,23546,48973,47563,47563,47563,45209,22824,22824,22824,27834,22804,22804,22804,30403,47447,23546,23546,23546,23546,47560,47563,47563,23113,22824,22824,33078,22804,22804,31970,23546,23546,23546,22586,47563,47563,23109,22824,22825,22804,22804,31964,47447,46606,22585,47563,24761,22824,30673,22804,36549,46609,47561,23111,30673,39296,23464,24759,33031,33550,48975,23107,30672,23141,24756,33030,33551,47559,33030,33552,39426,42307,22729,23448,23351,23363,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,22457,23546,23546,22482,50993,50998,50998,51019,22480,51014,51035,23546,23546,23546,23546,23546,23546,51042,23546,23546,23546,23546,23546,23546,23546,25629,19208,50639,19926,50639,20660,19723,18282,18849,18305,51062,23546,23546,18368,23546,18915,18388,18432,18458,18463,18479,18968,18495,19670,50655,18544,18567,18590,19934,18528,18551,18574,18597,20868,18620,23546,30606,23546,23546,23546,23582,23367,18643,23546,18664,50036,18695,19209,26024,18505,19208,25377,18724,26048,18745,18766,18771,19889,50639,26053,18750,50639,18776,19839,20674,23546,18792,18808,18830,23628,18814,18865,23546,44195,18885,18937,18958,20812,26011,20051,18984,19036,19054,19072,19090,26127,19108,19038,19056,19074,19092,26129,18604,20668,23396,19137,19171,19225,39246,19278,47150,19314,19340,26667,19186,19380,19422,19456,25721,19477,25754,19498,19451,25716,19472,25749,19493,19514,19530,18900,19554,23717,19574,19592,19632,19657,20190,20797,20402,21452,19692,19708,19964,21452,19692,19708,20432,19853,26492,19746,41094,19782,18942,19201,19798,19825,19883,19905,19950,19883,19905,19980,23977,20842,20016,18679,20827,20042,20067,20090,20113,20074,20097,20129,20446,51082,20175,20206,20222,51139,20274,51143,20301,51098,20392,51127,20418,50802,51114,25380,50639,18729,32258,26037,20489,20515,19641,20555,20577,20616,20632,20648,20696,20727,20743,20782,20858,20884,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,23546,94503,94503,90406,90406,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,1,12290,3,0,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,362,94503,90406,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,94503,0,94503,90406,94503,94503,94503,94503,94503,94503,94503,69632,73728,94503,94503,94503,94503,94503,65536,94503,0,2183168,0,0,0,90406,94503,296,297,0,2134016,300,301,0,0,0,0,0,0,2985,0,0,0,0,0,0,0,0,0,1631,0,0,0,0,0,1637,0,0,2424832,2433024,0,0,2457600,0,0,0,0,0,0,0,0,0,0,2454,0,0,0,0,0,0,0,0,0,2904064,2908160,0,0,0,0,0,0,0,0,0,0,0,2751,0,0,0,0,0,0,0,3117056,0,0,0,0,0,0,0,362,362,0,0,0,0,0,0,2997,0,0,0,0,3001,0,0,0,0,0,0,1186,0,0,0,1191,0,0,0,0,1107,0,0,0,2138112,0,0,0,0,0,0,0,0,0,0,0,0,0,2978,0,0,0,2424832,0,0,0,0,0,0,0,0,0,0,0,0,2625536,0,0,0,0,0,172032,0,172032,0,0,0,0,0,0,0,0,0,111050,111050,111050,111050,111050,111050,111050,111050,1,12290,3,0,2699264,2715648,0,0,2772992,2805760,2830336,0,2863104,2920448,0,0,0,0,0,0,0,1114,0,0,0,0,1118,0,0,1121,0,2805760,2920448,0,0,0,0,0,2920448,0,0,0,0,0,0,0,2732032,0,2179072,2179072,2179072,2424832,2433024,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2625536,2805760,2179072,2830336,2179072,2179072,2863104,2179072,2179072,2179072,2920448,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2801664,2813952,2179072,2838528,2179072,2179072,2179072,2179072,2179072,0,914,2125824,2125824,2125824,2125824,2424832,2433024,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2625536,2125824,2125824,2125824,2125824,2125824,2125824,2625536,2125824,2125824,2125824,2125824,2125824,2125824,2699264,2125824,2715648,2125824,2723840,2125824,2732032,2772992,2125824,2125824,2125824,2723840,2125824,2732032,2772992,2125824,2125824,2125824,2805760,2125824,2830336,2125824,2125824,2863104,2125824,2125824,2125824,2125824,2920448,2125824,2125824,2125824,2125824,2125824,2125824,2920448,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3117056,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3207168,2125824,2125824,2179072,2125824,2125824,2125824,2125824,2457600,2125824,2125824,2125824,2125824,2183168,0,0,0,0,0,0,0,0,0,0,2518,0,0,0,0,0,0,0,0,0,2375680,0,0,0,0,0,0,0,0,0,0,0,0,167936,0,0,0,0,0,0,2408448,0,0,2584576,0,0,0,0,2838528,0,0,2838528,0,0,0,0,0,2469888,2506752,2756608,0,0,2580480,0,0,0,2396160,2400256,2412544,0,0,2838528,0,0,0,0,0,2179072,2179072,2179072,2408448,2179072,2179072,2179072,2179072,2179072,2179072,3223552,914,0,2125824,2125824,2125824,2125824,2125824,2445312,2125824,0,2125824,2125824,2125824,2408448,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,2502656,0,0,3010560,2125824,2125824,2125824,2125824,2125824,2662400,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2801664,2813952,2125824,2838528,2125824,2801664,2813952,2125824,2838528,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3125248,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2461696,0,0,0,0,0,0,0,0,0,0,0,0,2600960,0,2674688,0,2768896,2777088,2781184,0,2822144,0,0,2883584,0,0,0,0,0,0,0,0,0,0,0,0,3055616,0,0,0,3080192,3100672,3104768,0,0,0,0,3186688,0,0,0,0,0,0,0,3182,0,0,0,0,0,0,0,0,0,2732032,0,0,0,0,0,0,0,0,0,3133440,0,0,0,0,0,0,0,0,0,0,0,0,0,3003,3004,0,2719744,0,0,0,0,0,0,0,0,0,0,3014656,3207168,0,2691072,0,0,0,0,0,2818048,2846720,0,2916352,0,0,3002368,0,0,3022848,0,0,0,0,0,2871296,0,0,0,0,0,0,0,0,0,0,0,2766,0,0,0,0,0,3215360,0,0,0,0,0,0,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2494464,2179072,2179072,2514944,2179072,2179072,2461696,2465792,2179072,2179072,2179072,2179072,2179072,2179072,2523136,2179072,2179072,2179072,2179072,2179072,2179072,2699264,2179072,2715648,2179072,2723840,2179072,2732032,2772992,2179072,2179072,3100672,2179072,2179072,3133440,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,3207168,2179072,0,0,0,0,391,392,0,393,0,0,0,0,0,393,0,0,0,0,0,3504,0,0,0,540,540,540,540,540,540,540,540,540,540,540,3399,540,540,0,0,0,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2461696,2465792,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2523136,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2600960,2125824,2125824,2125824,2125824,2125824,2125824,2641920,2125824,2125824,2125824,2125824,2125824,2125824,2719744,2125824,2125824,2125824,2125824,2125824,2768896,2777088,2768896,2777088,2125824,2797568,2822144,2125824,2125824,2125824,2883584,2125824,2912256,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3133440,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3207168,2125824,0,0,0,0,0,0,3011,0,0,0,0,0,0,3018,0,0,0,0,2605056,0,0,0,0,2887680,0,2924544,0,0,0,0,0,0,0,1135,0,0,0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,3162112,3170304,0,0,3219456,3035136,0,0,0,0,0,3072e3,2650112,2179072,2179072,2179072,2707456,2179072,2736128,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2887680,2179072,2179072,2543616,2547712,2179072,2179072,2596864,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2584576,0,0,2809856,0,0,0,0,0,0,0,0,0,0,3088384,0,0,0,0,0,1670,0,0,0,0,0,0,0,2112,0,0,0,0,0,1680,1681,0,1683,0,0,0,0,0,0,0,540,561,540,561,540,540,561,540,585,0,0,2576384,0,0,0,0,0,0,0,0,0,0,0,2420736,0,0,0,0,429,0,0,0,0,0,0,0,0,0,0,0,300,0,0,0,0,0,0,3121152,3141632,0,0,0,2924544,0,2682880,0,0,0,0,0,0,0,1242,1272,1273,0,1242,0,540,540,540,3112960,2387968,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2453504,2179072,2473984,2482176,2179072,2179072,2179072,2179072,2179072,3010560,2179072,2179072,2126737,2126737,2503569,2126737,2126737,2126737,2126737,2126737,2126737,2532241,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2605969,2126737,2924544,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,3035136,2179072,2179072,3072e3,2179072,2179072,2179072,3137536,2126737,2126737,2499473,2126737,2126737,2126737,2556817,2565009,2126737,2126737,2126737,2126737,2126737,2126737,3224465,0,0,2126810,2126810,2126810,2126810,2126810,2446298,2126810,3121152,2179072,2179072,3141632,2179072,2179072,2179072,3170304,2179072,2179072,3190784,3194880,2179072,0,0,0,0,0,0,3181,0,0,0,3184,3185,3186,0,0,3189,3194880,2125824,0,0,0,0,0,0,2387968,2125824,2125824,2420736,2125824,2125824,2125824,2125824,2125824,2453504,2125824,2473984,2482176,2125824,2125824,2125824,2605056,2125824,2629632,2125824,2125824,2650112,2125824,2125824,2125824,2707456,2125824,2736128,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3035136,2125824,2125824,3072e3,2125824,2125824,3121152,2125824,2125824,3141632,2125824,2125824,2125824,3170304,2125824,2125824,3190784,2125824,3170304,2125824,2125824,3190784,3194880,2125824,2125824,2179072,2125824,2125824,2125824,2179072,2179072,3112960,3219456,2125824,2125824,3112960,3219456,2125824,2125824,3112960,3219456,0,0,0,0,0,0,0,0,0,3507,540,540,540,540,540,540,0,3145728,0,3203072,0,0,0,0,0,0,0,0,0,0,0,0,0,3314,0,540,0,3067904,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,172032,0,0,0,0,2895872,0,0,0,2445312,0,2842624,0,0,0,2637824,0,0,0,0,432,0,0,0,329,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,467,0,0,0,2621440,0,3182592,2899968,0,2961408,0,0,2179072,2179072,2179072,2179072,2179072,2592768,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2125824,2445312,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2551808,2179072,2179072,2179072,2179072,2179072,3117056,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2126737,2126737,2126737,2126737,2637824,2125824,2125824,2125824,2125824,2727936,2752512,2125824,2125824,2125824,2125824,2842624,2846720,2125824,2895872,2916352,2125824,2125824,2945024,2125824,2125824,2994176,2125824,3002368,2125824,2125824,3022848,2125824,3067904,3084288,3096576,2125824,0,2125824,2125824,2125824,2125824,2125824,0,0,0,0,0,0,0,0,0,0,2442,2443,0,0,2446,0,0,0,0,0,2928640,0,0,0,3059712,0,2543616,2666496,0,2633728,0,0,0,0,0,1697,0,0,0,0,0,0,0,0,0,0,1116,0,0,0,0,0,2494464,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3211264,2179072,2928640,2179072,2179072,2179072,2998272,2179072,2179072,2179072,2179072,3059712,2179072,2179072,2179072,2179072,2179072,2179072,3223552,0,0,2126737,2126737,2126737,2126737,2126737,2446225,2126737,2179072,3178496,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2494464,2125824,2125824,2514944,2125824,2125824,2125824,2125824,2125824,2125824,2179072,2125824,2125824,2125824,2179072,2179072,2179072,2179072,2125824,2125824,0,0,0,0,0,0,2510848,2514944,0,0,2547712,2596864,0,0,0,0,0,1670,0,0,0,0,0,0,0,0,2113,0,2125824,2543616,2547712,2125824,2125824,2596864,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,0,2125824,2125824,2125824,2408448,2125824,2928640,2125824,2125824,2125824,2998272,2125824,2125824,2125824,2125824,3059712,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,2125824,2126811,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,0,0,2125824,2125824,2125824,2125824,2424832,2125824,3178496,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2494464,2125824,2125824,2514944,2125824,2125824,2125824,2125824,2125824,2125824,3223552,0,0,2125824,2125824,2125824,2125824,2125824,2445312,2125824,2125824,3178496,2125824,2179072,2125824,2125824,2179072,2179072,2125824,2125824,2125824,2125824,2441216,0,0,0,0,0,0,3311,0,0,0,0,0,0,0,0,540,540,540,2165,540,540,540,540,0,0,0,2740224,0,0,0,0,0,2793472,0,0,0,0,0,0,0,1244,0,0,0,0,1247,0,1194,0,2646016,2179072,2179072,2695168,2756608,2179072,2179072,2179072,2932736,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,3039232,2179072,3063808,2179072,2179072,2179072,2179072,3129344,2179072,2179072,3153920,3166208,3174400,2396160,2400256,2125824,2125824,2441216,2125824,2469888,2125824,2125824,2125824,2519040,2125824,2125824,2125824,2125824,2588672,2125824,2519040,2125824,2125824,2125824,2125824,2588672,2125824,2613248,2646016,2125824,2125824,2695168,2756608,2125824,2125824,2125824,2125824,2932736,2125824,2125824,2125824,2125824,2125824,2125824,2932736,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3129344,2125824,2125824,3153920,3166208,3174400,2396160,2125824,2125824,3129344,2125824,2125824,3153920,3166208,3174400,2125824,2506752,2506752,2506752,2179072,2179072,2125824,2125824,2125824,2125824,2125824,2125824,3223552,987,0,2125824,2125824,2125824,2125824,2125824,2445312,2125824,0,3043328,0,3149824,2936832,0,2760704,3176,0,0,0,0,2953216,0,0,2826240,3158016,2437120,0,2785280,0,0,0,2428928,0,3018752,2764800,2572288,0,0,3051520,2179072,2179072,2637824,2179072,2179072,2179072,2179072,2727936,2752512,2179072,2179072,2179072,2842624,2846720,2179072,2916352,2428928,2437120,2179072,2486272,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2654208,2678784,2760704,2764800,2854912,2969600,2179072,3006464,2179072,3018752,2179072,2179072,2179072,3149824,2125824,2428928,2437120,2125824,2486272,2125824,0,2125824,2125824,2125824,2125824,2125824,0,0,0,0,0,0,297,0,0,0,0,0,2043,2044,0,0,0,0,0,0,0,0,0,2140,0,0,0,0,0,0,2125824,3018752,2125824,2125824,2125824,3149824,2125824,2428928,2437120,2125824,2486272,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,24576,987,2125824,2125824,2125824,2125824,2424832,2125824,3149824,2125824,2179072,3051520,2125824,3051520,2125824,3051520,0,2490368,2498560,0,0,0,0,0,0,304,0,204800,0,0,0,0,0,0,0,0,1713,0,0,0,0,0,0,0,0,1727,0,0,0,0,0,0,0,0,2068,0,0,0,0,0,0,0,0,2095,0,0,0,0,0,0,0,0,2107,0,0,0,0,0,0,0,0,0,2875392,0,0,0,3176,0,0,2834432,0,3227648,2568192,0,0,0,0,2564096,0,2940928,2179072,2179072,2498560,2179072,2179072,2179072,2555904,2564096,2179072,2179072,2179072,2179072,2179072,2179072,3223552,0,0,2125824,2125824,2125824,2125824,2125824,2445312,2125824,2125824,2125824,2125824,2125824,2125824,3137536,2125824,2125824,2498560,2125824,2125824,2125824,2555904,2564096,2125824,2125824,2125824,2125824,2125824,2125824,3223552,2125824,2179072,2416640,2125824,2125824,2179072,2179072,2125824,2125824,0,2486272,0,0,0,0,0,2678784,2854912,3006464,0,3108864,3198976,0,0,2748416,2879488,0,3176,0,0,0,0,0,0,0,0,2179072,2179072,2179072,2179072,2179072,2592768,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2126737,2125824,2125824,2125824,2125824,3010560,2125824,2125824,2125824,2125824,2502656,2125824,2125824,2125824,2125824,2125824,2125824,296,0,0,0,296,0,297,0,0,0,2125824,2125824,2125824,3010560,2125824,2125824,2125824,0,0,0,0,0,0,0,2592768,0,0,0,0,433,0,0,0,453,469,469,469,469,469,469,469,469,469,479,469,469,469,469,469,469,2125824,2125824,2125824,2125824,2592768,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,1918,2125824,2125824,2125824,2408448,2125824,2592768,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2449408,0,2535424,3031040,0,0,0,0,0,1734,0,1736,1710,540,540,540,540,540,540,540,540,1816,1818,540,540,540,540,540,1360,0,2859008,0,0,2179072,2449408,2179072,2535424,2179072,2609152,2179072,2859008,2179072,2179072,2179072,3031040,2125824,2449408,2125824,2535424,2125824,2609152,2125824,2859008,2125824,2125824,2125824,3031040,2125824,2449408,2125824,2535424,2125824,2609152,2125824,2859008,2125824,2125824,2125824,3031040,2125824,2527232,0,0,0,0,0,2179072,2125824,2125824,2125824,2179072,2179072,2179072,2179072,2179072,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,0,0,0,0,0,0,0,0,0,0,2804,540,540,540,540,2527232,2179072,2179072,2179072,2179072,2179072,2125824,2527232,2125824,2125824,2125824,2125824,2125824,2125824,2527232,2125824,0,2125824,2125824,2125824,2125824,2125824,0,0,0,0,1080,1084,0,0,1088,2125824,2125824,2125824,2125824,3092480,0,0,0,0,3026944,2404352,2179072,2179072,2179072,2179072,3026944,2404352,2125824,2125824,2125824,2125824,3026944,2404352,2125824,2125824,2125824,2125824,3026944,2539520,0,2949120,0,0,0,0,434,0,0,446,0,0,0,0,0,0,0,0,457,1147354,1147354,1147354,1147354,1147354,1147354,1147354,2179072,2658304,2973696,2179072,2125824,2658304,2973696,2125824,2125824,2658304,2973696,2125824,2711552,0,256e4,2179072,2179072,2945024,2179072,2179072,2994176,2179072,3002368,2179072,2179072,3022848,2179072,3067904,3084288,3096576,2179072,2179072,2600960,2179072,2179072,2179072,2179072,2641920,2179072,2179072,2179072,2179072,2179072,2179072,2719744,2179072,2179072,2441216,2179072,2469888,2179072,2179072,2179072,2519040,2179072,2179072,2179072,2179072,2588672,2179072,2613248,2703360,0,0,0,0,2977792,0,0,3047424,3129344,0,2981888,2396160,0,3153920,256e4,2125824,256e4,2125824,0,2179072,2125824,2125824,0,2179072,2125824,2125824,0,2179072,2125824,2125824,2125824,2457600,2179072,2179072,2179072,2179072,2457600,2125824,2125824,2125824,2985984,2985984,2985984,2985984,0,0,0,0,0,0,0,0,0,0,0,0,0,249856,0,0,0,0,0,111050,111050,111050,111050,111050,111050,111050,111050,111050,111050,111050,111050,111050,111050,111050,111050,458,458,111050,458,458,458,458,458,458,458,458,458,458,111050,111050,111050,111050,111050,111050,111050,111050,111050,458,111050,111050,111050,111050,111050,0,0,0,0,0,0,0,0,0,0,2738,0,0,0,0,0,0,2183168,0,0,0,0,0,296,297,0,2134016,300,301,0,0,0,0,0,0,184723,184931,184931,184931,0,184931,184931,184931,184931,184931,0,0,0,0,0,184931,0,184931,1,12290,3,78112,1059,0,0,2179072,2125824,2125824,2125824,2179072,2179072,2179072,2179072,2179072,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,296,0,297,0,2125824,1059,2125824,2125824,2125824,2125824,2125824,0,0,0,0,0,0,0,0,0,0,2750,0,0,0,0,2755,0,300,118784,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1134592,0,0,0,0,300,300,300,300,0,0,0,0,0,300,0,300,1,12290,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,266240,0,0,0,0,2183168,0,0,0,0,0,33403,297,0,2134016,49791,301,0,0,0,0,0,0,225889,225889,225889,225889,225740,225889,225889,225889,225889,225889,225740,225740,225740,225740,225740,225906,225740,225906,1,12290,3,0,0,0,0,249856,0,0,0,249856,0,0,0,0,0,0,697,698,0,362,362,362,0,0,0,0,0,0,711,0,0,0,0,0,0,0,0,0,362,296,0,0,0,0,0,0,0,0,2134016,0,0,0,0,0,0,57344,0,0,0,0,0,0,0,3506,0,540,540,540,540,540,540,540,2530,540,540,540,540,540,540,540,2125824,0,2125824,2125824,2125824,2125824,2125824,0,0,0,296,0,0,0,300,0,0,0,300,119195,73728,0,0,0,0,0,65536,0,0,122880,122880,122880,122880,122880,122880,122880,122880,122880,122880,122880,122880,122880,122880,122880,0,0,0,0,122880,122880,122880,122880,122880,122880,122880,122880,0,0,122880,0,0,0,0,0,0,0,0,0,0,0,3166,3167,0,0,0,0,0,122880,0,122880,122880,122880,0,0,0,0,0,122880,0,122880,0,0,0,0,0,0,0,0,122880,0,0,0,0,0,0,0,0,0,0,0,0,221184,0,0,0,0,0,0,0,0,0,122880,122880,122880,122880,122880,0,122880,0,2105629,12290,3,0,0,291,0,0,0,0,291,0,0,0,0,0,0,0,69632,73728,0,0,0,0,0,65536,0,0,0,0,2134016,0,0,0,0,0,0,0,746,0,0,0,0,0,0,328,0,0,0,0,0,0,0,328,0,0,69632,73728,0,416,416,0,0,65536,416,1092,0,2424832,2433024,0,0,2457600,0,0,0,0,0,0,0,0,0,0,2765,0,0,0,0,0,1824,2125824,2125824,2125824,2408448,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2551808,2125824,2125824,2125824,2125824,2125824,0,0,0,131072,0,0,0,69632,73728,0,0,0,0,0,65536,0,0,0,0,435,0,0,0,0,0,0,0,0,0,0,0,2507,0,0,0,0,0,131072,0,0,131072,131072,0,0,0,0,0,0,131072,0,131072,0,131072,0,0,0,0,0,0,0,0,0,0,131072,0,131072,131072,131072,131072,0,131072,131072,131072,131072,131072,0,0,0,0,0,131072,0,131072,1,12290,3,0,0,0,0,0,0,0,0,0,0,0,0,298,0,135168,135168,0,0,0,0,0,0,0,0,0,0,0,0,0,320,321,0,0,0,135168,0,0,135168,0,0,0,0,0,0,0,0,0,0,0,3174,0,0,0,0,0,0,0,135168,135168,135168,135168,135168,135168,135168,0,135168,135168,135168,135168,135168,0,0,0,0,0,135168,0,135168,1,12290,3,0,0,0,0,0,0,0,0,0,0,0,118784,296,0,2183168,0,0,0,0,0,636,637,0,2134016,640,641,0,0,0,0,0,0,266240,0,0,0,0,0,0,0,0,0,0,266240,0,0,0,1361,2125824,2125824,2125824,2125824,2424832,2433024,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,0,986,2125824,2125824,2125824,2125824,2424832,0,301,139264,0,0,0,0,0,0,0,0,0,0,0,0,0,331,0,331,301,301,301,301,0,0,0,0,0,301,0,301,1,12290,3,0,0,0,0,0,0,0,0,0,0,0,139264,297,0,2183168,0,0,0,0,0,296,33406,0,2134016,300,49794,0,0,0,0,0,0,1134592,0,0,0,0,0,0,0,0,0,0,1134592,0,0,0,2134016,0,0,0,0,0,0,0,0,0,0,61440,0,0,0,0,647,0,0,0,0,0,0,0,0,0,0,0,2455,0,0,0,0,0,301,2424832,2433024,0,0,2457600,0,0,0,0,0,0,0,0,0,0,2779,0,0,0,0,0,298,298,143728,298,298,298,143728,69632,73728,298,298,143658,298,298,65536,298,298,0,0,298,298,143658,298,298,298,298,298,298,298,298,298,363,298,0,143658,298,298,298,143658,143658,143658,143658,143658,143658,143658,143658,143658,143658,143658,143658,143658,143658,143658,143658,298,298,298,298,143658,143658,143658,143658,143658,143658,143658,143658,298,298,298,143658,368,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,143658,298,298,143658,298,298,143658,143658,143658,143658,143658,143658,298,0,298,0,298,298,298,143658,298,298,298,298,298,298,298,298,298,143658,298,143658,143658,143658,143658,298,298,143658,298,298,298,298,298,298,298,298,298,298,298,143728,298,298,298,298,298,298,298,143658,143658,143658,143658,143658,143658,143728,143658,143728,143728,143728,143728,143728,143658,143658,143658,143658,143658,143658,143658,143658,1,12290,3,0,0,0,0,0,0,0,90406,90406,90406,90406,0,94503,0,0,0,3117056,0,0,0,0,0,0,0,2200252,2200252,0,0,0,0,0,0,1134592,0,0,0,0,0,0,1134592,0,0,0,0,0,0,0,155648,155648,0,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,155648,0,0,0,0,155648,0,0,0,0,0,0,345,0,0,0,0,0,0,0,0,0,1663,0,0,0,0,0,0,0,0,155648,0,0,155648,0,0,0,0,0,0,0,155648,0,0,0,155648,155648,0,155648,155648,0,12290,3,0,0,2183168,126976,0,0,0,0,296,297,0,2134016,300,301,0,0,0,0,0,0,1146880,0,1146880,0,0,0,0,0,0,0,1107,0,0,0,0,0,0,0,0,540,2163,540,540,540,540,540,540,0,0,0,3117056,0,0,0,0,0,0,0,362,0,0,0,0,0,0,345,346,347,0,0,0,0,0,0,0,757,0,0,0,0,0,0,0,0,1156,0,0,0,0,0,0,0,159744,159744,159744,0,0,159744,0,0,0,0,0,0,0,0,159744,159744,159744,159744,159744,159744,159744,159744,159744,159744,159744,159744,159744,159744,159744,159744,163840,159744,159744,159744,163840,159744,159744,159744,159744,159744,0,0,0,0,0,0,0,0,25160,0,0,159744,0,0,0,0,25160,25160,25160,159744,25160,25160,25160,25160,25160,159744,159744,159744,159744,25160,159744,25160,1,12290,3,0,167936,167936,167936,167936,167936,167936,167936,167936,167936,167936,167936,167936,167936,167936,167936,167936,1,12290,3,0,167936,167936,167936,0,0,167936,0,0,0,0,0,0,0,0,167936,167936,167936,167936,167936,167936,167936,0,0,0,0,0,0,0,0,0,0,3015,0,0,0,0,0,0,0,0,2138112,1183,0,0,0,0,0,0,0,0,0,0,0,0,262144,0,0,0,0,172032,172032,0,0,0,0,0,0,0,0,0,0,172032,0,0,0,0,0,0,172032,172032,0,172032,0,0,172032,0,172032,0,172032,0,0,0,0,172032,172032,172032,172032,172032,172032,172032,172032,1,12290,3,0,172032,0,172032,172032,0,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,172032,0,0,0,0,0,0,0,0,0,0,106496,0,0,0,0,0,1,286,3,0,0,0,292,0,0,0,0,0,0,0,0,0,0,106496,0,106496,0,0,0,0,106496,176128,176128,176128,176128,176128,176128,176128,176128,176128,176128,176128,176128,176128,176128,176128,176128,1,0,3,78112,176128,176128,176128,0,0,176128,0,0,0,0,0,0,0,0,176128,176128,176128,176128,176128,176128,176128,0,0,0,0,0,0,0,0,0,0,111050,0,0,0,0,0,78112,290,0,634,0,0,0,296,297,0,2134016,300,301,0,0,0,0,0,0,1159168,414,414,0,0,0,0,0,414,0,1164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,540,540,540,0,914,561,561,561,561,561,561,561,561,561,561,561,561,561,561,959,561,585,585,585,1490,585,585,585,585,585,585,585,585,585,585,585,585,585,1498,585,585,0,0,229376,0,0,0,0,0,0,0,0,1686,0,0,0,0,0,0,404,404,404,404,0,404,404,404,404,404,0,0,0,0,0,404,0,404,1,12290,3,78112,290,0,0,0,0,0,0,0,0,0,0,0,0,1155072,0,0,0,0,0,0,0,2131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,658,0,0,0,561,561,561,561,561,561,2250,561,561,561,561,561,561,585,585,585,585,585,585,0,0,0,0,0,0,3295,0,0,0,0,0,0,0,712,0,0,0,716,0,0,719,0,561,561,2287,561,561,561,561,561,561,561,561,561,561,561,561,561,0,0,0,585,585,585,2347,585,585,585,585,585,585,585,585,585,585,585,585,585,1514,585,585,2372,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,561,0,0,0,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,585,585,585,585,2671,585,585,585,585,585,585,585,585,585,585,585,585,585,1515,585,585,0,0,0,2994,0,0,0,2998,0,0,0,0,0,0,0,0,0,159744,159744,159744,159744,159744,159744,159744,540,3035,540,540,540,540,540,540,540,540,540,540,540,540,540,540,910,540,3075,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1417,3116,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1501,0,0,3178,0,0,0,0,0,0,0,0,0,0,3187,0,0,0,0,0,2046,0,2149,0,0,0,0,0,0,0,0,0,249856,249856,249856,249856,249856,249856,249856,249856,1,12290,3,0,540,540,540,3203,540,540,540,540,540,540,540,540,540,3211,540,540,540,540,540,2813,540,540,2817,540,540,540,540,540,540,540,540,540,2555,540,540,540,540,540,540,3255,585,585,585,3258,585,585,585,585,585,585,585,585,585,3266,585,561,0,1287,585,1467,1376,540,540,1339,540,540,561,561,1430,561,0,585,585,585,585,585,288,1079,0,0,0,0,0,0,0,0,2427,0,0,0,0,0,0,0,0,2465,0,0,2468,0,0,0,0,0,0,0,0,3309,0,0,0,0,0,0,0,0,0,0,540,3508,540,3509,540,540,540,3326,3327,540,540,540,540,540,540,540,540,561,561,561,561,561,561,561,561,561,561,561,561,561,561,961,561,585,585,585,3361,585,585,585,585,3362,3363,585,585,585,585,585,585,561,0,0,0,0,0,0,0,0,0,0,1159168,0,0,0,0,0,0,0,0,0,3176,0,0,0,0,0,0,0,0,3387,0,0,0,0,0,2092,0,0,0,0,0,0,0,0,0,0,404,0,0,0,0,0,561,3416,561,561,561,561,585,585,585,585,585,585,3425,585,585,585,585,585,585,1492,585,585,585,585,585,585,585,1499,585,585,585,585,3431,585,585,585,585,3435,540,561,585,0,0,0,0,0,0,665,0,0,668,0,0,0,0,0,0,0,3172,0,0,0,0,0,0,0,0,0,225740,225740,225740,225740,225740,225740,225740,0,0,0,0,3176,0,0,0,0,0,0,0,0,3450,540,540,540,540,540,2814,540,2816,540,540,540,540,540,540,540,540,540,2233,540,540,540,540,540,0,561,561,561,3573,561,561,561,561,561,561,561,561,585,585,585,585,585,585,3538,585,585,3585,585,585,585,585,585,585,585,585,561,0,0,0,0,0,0,3627,561,561,585,585,0,540,561,585,0,540,561,585,0,540,561,585,0,0,0,0,0,0,0,0,0,0,0,0,0,2662400,0,2813952,78112,290,0,0,0,0,0,296,297,0,2134016,300,301,0,0,0,0,0,0,2473984,2478080,0,0,0,0,0,0,0,0,0,2976,0,0,0,0,0,0,0,0,0,2134756,0,0,0,0,0,0,0,0,0,0,0,0,1,12290,3,0,0,0,188416,540,585,585,561,540,540,540,540,540,561,561,561,561,585,585,585,585,0,0,540,540,0,0,0,0,3176,0,0,0,0,0,0,0,0,540,540,540,540,540,540,540,2169,0,0,0,302,0,0,0,0,0,0,0,0,0,0,0,0,1,12290,3,78112,192971,192971,192971,192971,192971,192971,192971,192971,192971,192971,192971,192971,192971,192971,192971,192971,0,192971,0,1,12290,3,0,192971,192971,192971,0,0,192971,0,0,0,0,0,0,0,0,0,0,0,131072,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,322,0,0,0,0,192971,192971,192971,192971,192971,192971,192971,192971,192971,0,192971,192971,192971,192971,192971,0,0,0,0,0,0,0,0,0,0,2801664,0,0,0,0,2142208,299,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,674,78112,290,0,0,0,0,0,296,297,0,299,300,301,0,0,0,0,0,0,2797568,0,0,0,0,0,0,0,2850816,2867200,0,0,740,404,0,0,0,0,0,0,0,0,0,0,0,0,335,0,0,0,0,0,740,540,585,585,561,540,540,540,540,540,561,561,561,561,585,585,585,585,2029,0,2031,0,0,0,0,740,1184,0,0,0,0,1188,0,0,0,0,0,0,0,1583,0,1585,0,0,0,0,0,0,0,1661,1662,0,0,0,0,0,0,0,0,2727936,0,0,0,3084288,0,0,0,0,0,0,1577,0,0,0,0,0,0,0,0,0,0,0,0,351,352,353,354,0,0,0,1188,1670,0,0,0,0,0,0,0,0,0,0,0,0,1150976,0,0,0,0,0,0,561,561,585,585,585,585,1559,2029,0,0,0,0,1565,2031,0,0,0,0,0,2120,0,0,0,0,0,0,0,0,0,2130,2033,0,2035,0,0,0,0,0,0,0,0,0,0,0,0,0,336,337,338,561,561,2323,2648,0,0,0,0,585,585,585,585,585,585,585,585,585,585,585,2339,585,585,2342,0,304,0,304,0,0,0,0,0,0,0,0,0,304,0,0,0,0,0,2136,0,2138,0,0,0,0,0,0,0,0,791,817,0,817,812,0,0,0,0,0,0,204800,204800,0,204800,204800,204800,204800,204800,204800,204800,204800,204800,204800,204800,204800,204800,205104,204800,204800,205103,205104,204800,205103,205103,204800,204800,0,0,0,0,0,0,0,0,0,296,0,0,0,0,0,0,0,2183801,0,0,0,0,0,296,297,151552,2134016,300,301,0,212992,0,0,0,0,662,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3117056,0,0,0,0,0,0,0,0,2200253,0,0,0,0,0,0,2932736,2965504,0,0,3076096,0,0,2695168,3174400,2646016,0,914,2126737,2126737,2126737,2126737,2425745,2433937,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,0,0,987,2126810,2126810,2126810,2126810,2425818,2724753,2126737,2732945,2773905,2126737,2126737,2126737,2806673,2126737,2831249,2126737,2126737,2864017,2126737,2126737,2126737,2126737,2126737,2524049,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2601873,2126737,2126737,2921361,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,3117969,2126737,2126737,2126737,2126737,2593681,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126810,2126810,2126810,2126810,3093393,0,0,0,0,3026944,2404352,2179072,2179072,2179072,2179072,3026944,2434010,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2626522,2126810,2126737,0,2179072,2126810,2126810,2126737,2457600,2179072,2179072,2179072,2179072,2458513,2126737,2126737,2126737,2126737,2126737,2626449,2126737,2126737,2126737,2126737,2126737,2126737,2700177,2126737,2716561,2126737,2806746,2126810,2831322,2126810,2126810,2864090,2126810,2126810,2126810,2126810,2921434,2126810,2126810,2126810,2126810,2126810,2126737,2179072,2126810,2126810,2126737,2179072,2179072,2179072,2179072,2126737,2126737,2126737,2458586,2126810,2126810,2126810,2126810,2183168,0,0,0,0,0,0,0,0,0,321,395,0,0,0,321,0,0,2126737,2126737,2126737,2409361,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,3126161,2126737,2126737,2126737,2802577,2814865,2126737,2839441,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126810,2126810,2126810,2126810,2126810,2663386,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2802650,2814938,2126810,2839514,0,0,0,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2462609,2466705,2126737,0,2126810,2126810,2126810,2126810,2126810,0,0,0,0,0,0,0,0,0,297,0,0,0,0,0,0,2769809,2778001,2126737,2798481,2823057,2126737,2126737,2126737,2884497,2126737,2913169,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2655121,2679697,2761617,2765713,2786193,2855825,2970513,2126737,3007377,2126737,3134353,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,3208081,2126737,0,0,0,0,0,325,0,69632,73728,0,0,0,0,0,65536,0,0,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2462682,2466778,2126810,2126810,2126810,2524122,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2601946,2126810,2126810,2126810,2585562,2126810,2126810,2126810,2126810,2126810,2618330,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2888666,2126810,2126810,2925530,2126810,2126810,2126810,2126810,2126810,2126810,2642906,2126810,2126810,2126810,2126810,2126810,2126810,2720730,2126810,2126810,2126810,2126810,2126810,2769882,2778074,2126810,2798554,2823130,2126810,2126810,2126810,2884570,2126810,2913242,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,3126234,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,3208154,2126810,2126737,2179072,2126810,2126810,2126737,0,0,0,2388881,2126737,2126737,2421649,2126737,2126737,2126737,2126737,2126737,2454417,2126737,2474897,2483089,2630545,2126737,2126737,2651025,2126737,2126737,2126737,2708369,2126737,2737041,2126737,2126737,2126737,2126737,2126737,2126737,2126737,985,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2552794,2126810,2126810,2126810,2126810,2126810,2126737,2126737,3072913,2126737,2126737,3122065,2126737,2126737,3142545,2126737,2126737,2126737,3171217,2126737,2126737,3191697,3195793,2126737,0,0,0,0,0,0,2388954,2126810,2126810,2421722,2126810,2126810,2126810,2126810,2126810,3040218,2126810,3064794,2126810,2126810,2126810,2126810,3101658,2126810,2126810,3134426,2126810,2454490,2126810,2474970,2483162,2126810,2126810,2126810,2126810,2126810,2126810,2532314,2126810,2126810,2126810,2126810,3036122,2126810,2126810,3072986,2126810,2126810,3122138,2126810,2126810,3142618,2126810,2126810,2126810,3171290,2126810,2126810,3191770,3195866,2126810,2126737,2179072,2126810,2126810,2126737,2179072,2179072,3112960,3219456,2126737,2126737,3113873,3220369,2126810,2126810,3113946,3220442,0,0,0,0,0,0,0,0,0,167936,167936,167936,167936,167936,167936,167936,2638737,2126737,2126737,2126737,2126737,2728849,2753425,2126737,2126737,2126737,2126737,2843537,2847633,2126737,2896785,2917265,2638810,2126810,2126810,2126810,2126810,2728922,2753498,2126810,2126810,2126810,2126810,2843610,2847706,2126810,2896858,2917338,2179072,3178496,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2495377,2126737,2126737,2515857,2126737,2126737,2126737,2126737,3011473,2126737,2126737,2126810,2126810,2503642,2126810,2126810,2126810,2126810,2126810,2126810,2126810,3138522,2126737,2940928,2941841,2941914,0,0,0,0,2126737,2544529,2548625,2126737,2126737,2597777,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2552721,2126737,2126737,2126737,2126737,2126737,2126737,2929553,2126737,2126737,2126737,2999185,2126737,2126737,2126737,2126737,3060625,2126737,2126737,2126737,2126737,2126737,2126737,2126737,3040145,2126737,3064721,2126737,2126737,2126737,2126737,3101585,2126737,2126737,3179409,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2495450,2126810,2126810,2515930,2126810,2126810,0,0,0,0,0,0,2510848,2514944,0,0,2547712,2596864,0,0,0,0,0,2160,0,0,540,540,540,540,540,540,540,540,540,540,540,540,540,561,561,561,561,561,561,3525,561,2126810,2544602,2548698,2126810,2126810,2597850,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126737,0,2502656,0,0,3010560,2126810,2929626,2126810,2126810,2126810,2999258,2126810,2126810,2126810,2126810,3060698,2126810,2126810,2126810,2126810,2126810,2126810,3118042,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126737,2126810,3179482,2126737,2179072,2126810,2126737,2179072,2179072,2126737,2126737,2126810,2126810,2441216,0,0,0,0,0,326,0,0,0,0,0,0,0,0,0,0,403,0,0,0,0,0,3129344,2179072,2179072,3153920,3166208,3174400,2397073,2401169,2126737,2126737,2442129,2126737,2470801,2126737,2126737,2126737,2126737,2126737,2663313,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,0,0,2126810,2126810,2126810,2409434,2519953,2126737,2126737,2126737,2126737,2589585,2126737,2614161,2646929,2126737,2126737,2696081,2757521,2126737,2126737,2126737,2126737,2126737,3138449,2126810,2126810,2499546,2126810,2126810,2126810,2556890,2565082,2126810,2126810,2126737,2933649,2126737,2126737,2126737,2126737,2126737,2126737,2126737,3130257,2126737,2126737,3154833,3167121,3175313,2397146,2401242,2126810,2126810,2442202,2126810,2470874,2126810,2126810,2126810,2520026,2126810,2126810,2126810,2126810,2589658,2126810,2126810,2126810,3011546,2126810,2126810,2126737,0,0,0,0,0,0,0,2592768,0,0,0,0,663,0,0,666,667,0,0,0,0,0,0,0,540,571,540,571,540,540,571,540,595,2614234,2647002,2126810,2126810,2696154,2757594,2126810,2126810,2126810,2126810,2933722,2126810,2126810,2126810,2126810,2126810,2126810,3224538,2126737,2179072,2417626,2126810,2126737,2179072,2179072,2126737,2126737,2854912,2969600,2179072,3006464,2179072,3018752,2179072,2179072,2179072,3149824,2126737,2429841,2438033,2126737,2487185,2126737,2126737,2945937,2126737,2126737,2995089,2126737,3003281,2126737,2126737,3023761,2126737,3068817,3085201,3097489,2126737,2126737,2888593,2126737,2126737,2925457,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,3036049,2126737,3019665,2126737,2126737,2126737,3150737,2126810,2429914,2438106,2126810,2487258,2126810,2126810,2126810,2126810,2126810,2700250,2126810,2716634,2126810,2724826,2126810,2733018,2773978,2126810,2126810,2126810,2126810,3150810,2126737,2179072,3051520,2126737,3052433,2126810,3052506,0,2490368,2498560,0,0,0,0,0,0,679,0,0,0,0,0,0,0,0,0,0,0,2126810,2593754,2126810,2126810,2126810,2126810,2126810,2126810,2126810,2126737,2449408,0,2535424,3031040,0,0,0,0,0,2439,0,0,0,0,0,0,0,0,0,0,369,0,0,370,0,0,2126737,2450321,2126737,2536337,2126737,2610065,2126737,2859921,2126737,2126737,2126737,3031953,2126810,2450394,2126810,2536410,2126810,2610138,2126810,2859994,2126810,2126810,2126810,3032026,2126737,2527232,0,0,0,0,0,2179072,2126810,2126810,2126737,2179072,2179072,2179072,2179072,2179072,2126737,2126737,2126737,2126737,2126810,2126810,2126810,2126810,0,0,0,0,0,0,0,0,0,0,0,237568,0,0,0,0,2527232,2179072,2179072,2179072,2179072,2179072,2126737,2528145,2126737,2126737,2126737,2126737,2126737,2126810,2528218,2126810,2126810,2946010,2126810,2126810,2995162,2126810,3003354,2126810,2126810,3023834,2126810,3068890,3085274,3097562,2126810,2126810,2126810,2606042,2126810,2630618,2126810,2126810,2651098,2126810,2126810,2126810,2708442,2126810,2737114,2126810,2126810,2126810,2655194,2679770,2761690,2765786,2786266,2855898,2970586,2126810,3007450,2126810,3019738,2126810,2126810,0,2486272,0,0,0,0,0,2678784,2854912,3006464,0,3108864,3198976,0,2405265,2126737,2126737,2126737,2126737,3027857,2405338,2126810,2126810,2126810,2126810,3027930,2539520,0,2949120,0,0,0,0,695,0,0,0,0,362,362,362,0,0,704,0,0,0,0,709,0,0,0,0,0,0,0,0,0,0,0,2049,0,0,0,0,2179072,2658304,2973696,2179072,2126737,2659217,2974609,2126737,2126810,2659290,2974682,2126810,2711552,0,256e4,2179072,2179072,3125248,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2125824,2125824,2125824,2125824,2560913,2126737,2560986,2126810,0,2179072,2126737,2126810,0,2179072,2126737,2126810,0,2179072,2126737,2126810,2126810,3130330,2126810,2126810,3154906,3167194,3175386,2126737,2506752,2507738,2507665,2179072,2179072,2126737,2126737,2126737,2642833,2126737,2126737,2126737,2126737,2126737,2126737,2720657,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2126737,2585489,2126737,2126737,2126737,2126737,2126737,2618257,2126737,2985984,2985984,2986897,2986970,0,0,0,0,0,0,0,0,0,0,0,0,397,0,0,0,0,221184,221184,0,0,0,0,0,0,0,0,0,221184,221184,0,0,221184,221184,221184,0,0,0,0,0,0,221184,0,0,0,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,221184,0,0,0,0,0,0,0,0,0,332,0,0,0,0,0,0,0,0,0,0,221184,221184,221184,221184,221184,221184,221184,221184,1,12290,3,0,0,0,0,0,253952,0,0,0,253952,0,0,0,0,0,0,0,0,0,0,0,0,687,688,0,0,0,0,0,98304,0,0,0,53248,0,0,0,0,0,2662400,0,2813952,297,0,300,0,0,0,300,0,301,0,0,0,301,0,0,0,301,69632,139679,0,0,0,0,0,65536,0,0,0,0,3133440,0,98304,0,0,0,0,0,0,0,0,0,0,0,2179072,2179072,2179072,2179072,2179072,300,0,301,0,0,0,2473984,2478080,0,0,0,0,0,0,0,0,0,176128,176128,176128,176128,176128,176128,176128,3121152,2179072,2179072,3141632,2179072,2179072,2179072,3170304,2179072,2179072,3190784,3194880,2179072,914,0,0,0,0,0,2451,0,0,0,0,0,0,0,0,0,0,301,301,0,0,0,0,0,914,0,2387968,2125824,2125824,2420736,2125824,2125824,2125824,2125824,2125824,2453504,2125824,2473984,2482176,2125824,2125824,2125824,2125824,2125824,2125824,2531328,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2605056,2125824,3194880,2125824,987,0,0,0,987,0,2387968,2125824,2125824,2420736,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2887680,2125824,2125824,2924544,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3035136,225740,225740,225740,225740,225740,225740,225740,225740,225740,225740,225740,225740,225740,225740,225740,225740,0,0,0,0,0,0,0,0,0,348,349,350,0,0,0,0,2125824,237568,2125824,2125824,2125824,2125824,2125824,0,0,0,0,0,0,0,0,0,358,0,0,0,0,0,358,249856,249856,249856,249856,249856,249856,249856,249856,249856,249856,249856,249856,249856,249856,249856,249856,0,0,0,0,0,0,0,0,0,362,0,0,0,0,0,0,0,2183168,0,0,0,0,0,296,297,0,2134016,300,301,0,0,217088,2125824,241664,2125824,2125824,2125824,2125824,2125824,0,0,0,0,0,0,0,0,0,362,0,0,0,0,131072,131072,254413,254413,254413,254413,254413,254413,254413,254413,254413,254413,254413,254413,254413,254413,254413,254413,0,0,0,0,0,0,0,0,0,362,0,0,0,0,155648,0,0,2183168,0,0,270336,0,0,296,297,0,2134016,300,301,200704,0,0,0,0,0,2462,0,0,0,0,0,0,0,0,0,0,1261,0,0,0,0,0,2125824,0,2125824,2125824,2125824,2125824,2125824,0,0,180224,0,0,0,0,0,0,0,1726,0,0,0,0,0,0,0,0,304,304,304,0,0,0,0,0,0,2748416,2879488,0,20480,0,0,0,0,0,0,0,0,2179072,2179072,2179072,2179072,2768896,2777088,2797568,2822144,2179072,2179072,2179072,2883584,2912256,2179072,2179072,2179072,2179072,2179072,2617344,2179072,2179072,2179072,2179072,2179072,2179072,2662400,2179072,2179072,2179072,2179072,2179072,3010560,2179072,2179072,2125824,2125824,2502656,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2584576,2125824,2125824,2125824,2125824,2125824,2617344,2125824,2125824,2125824,2125824,2125824,2125824,0,266240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2142208,0,0,0,266240,0,0,0,0,0,0,0,0,1,12290,2113823,0,0,0,0,0,0,293,0,0,0,293,0,0,245760,0,0,2179072,2125824,2125824,2125824,2179072,2179072,2179072,2179072,2179072,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3039232,2125824,3063808,2125824,2125824,2125824,2125824,3100672,2125824,2125824,3133440,2125824,245760,2125824,2125824,2125824,2125824,2125824,0,0,0,0,0,0,0,0,0,362,0,0,122880,122880,0,0,274432,274432,274432,274432,0,0,0,0,0,274432,0,274432,1,12290,3,0,0,0,0,725,0,0,0,0,0,0,0,0,0,0,0,1192,0,1195,0,0,78112,290,0,0,0,0,0,296,297,0,0,300,301,0,0,0,0,0,328,329,330,0,0,0,0,0,0,0,0,0,2200252,2200252,2200252,0,0,0,0,0,0,0,2033,0,0,0,0,0,2035,0,0,0,0,0,0,0,2055,0,2056,0,0,0,0,0,0,0,2067,0,0,0,0,0,0,0,0,1187,0,0,0,0,0,0,1104,2483,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,690,0,0,2993,0,0,0,0,0,0,0,0,0,0,0,0,0,383,335,0,0,0,0,1679,0,0,0,0,0,0,0,0,0,0,0,0,694,0,0,0,0,0,0,741,0,0,0,0,0,0,0,0,0,0,0,0,730,0,0,0,0,0,0,78456,290,0,0,0,0,0,296,297,0,0,300,301,0,0,0,0,0,344,0,0,0,0,0,0,0,0,0,0,1158,0,0,0,0,0,562,562,562,562,562,562,562,586,586,586,540,586,586,586,586,586,562,562,540,562,586,562,586,1,12290,3,78112,0,0,2771,0,0,0,0,0,0,0,0,0,0,0,0,0,514,521,521,1,12290,3,78113,290,0,0,0,0,0,0,0,0,0,0,0,301,0,0,0,0,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,1,12290,3,0,282624,282624,282624,0,0,282624,0,0,0,0,0,0,0,0,0,0,0,3178496,2670592,0,2744320,0,0,0,0,0,282624,282624,282624,282624,282624,282624,282624,282624,282624,0,282624,282624,282624,282624,282624,0,0,0,0,0,0,0,0,0,362,0,290,0,0,0,0,3176,0,0,2740224,0,0,0,0,0,2793472,0,0,0,0,0,0,0,2094,0,0,0,0,0,0,0,0,683,684,685,0,0,0,689,0,0,0,0,286720,286720,0,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,286720,0,0,0,0,0,0,0,0,0,362,0,302,0,0,0,0,0,3043328,0,3149824,2936832,0,2760704,3301,0,0,0,0,2953216,0,0,2826240,2875392,0,0,0,3381,0,0,2834432,0,3227648,2568192,0,0,0,0,2564096,0,2748416,2879488,0,3381,0,0,0,0,0,0,0,0,2179072,2179072,2179072,2531328,2179072,2179072,2179072,2179072,2179072,2179072,2179072,2605056,2179072,2629632,2179072,2179072,0,0,0,306,0,0,0,0,0,305,0,305,306,0,305,305,0,0,0,305,305,306,306,0,0,0,0,0,0,305,405,306,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,750,0,0,0,306,410,0,0,69632,73728,0,0,0,0,0,65536,0,0,0,0,742,0,0,0,0,742,0,748,0,0,0,0,0,0,1192,0,0,0,0,0,0,0,0,0,0,462,462,462,488,488,462,488,488,488,488,488,488,488,513,488,488,488,488,488,488,488,488,488,488,488,488,488,533,488,488,488,488,488,541,563,541,563,541,541,563,541,587,563,563,563,563,563,563,563,587,587,587,541,613,613,613,613,613,587,563,563,541,563,587,563,587,1,12290,3,78112,0,0,645,0,0,648,649,0,0,0,0,0,0,0,0,0,362,0,253952,0,0,0,0,0,645,0,0,0,0,0,0,0,0,0,0,762,0,0,0,0,0,353,0,351,0,472,472,472,472,472,472,472,477,472,472,472,472,472,472,472,472,472,477,472,0,768,0,0,772,0,0,0,0,0,0,781,0,0,0,0,0,0,727,0,0,0,731,0,0,0,0,0,0,0,69632,73728,0,0,0,343,342,65536,341,0,788,0,0,0,0,792,0,0,0,0,0,0,0,796,0,0,0,0,0,0,0,0,0,0,0,0,782,0,0,0,0,736,0,796,0,0,0,0,648,0,0,0,0,0,0,820,0,0,648,0,0,0,0,0,837,792,0,0,0,0,0,841,842,792,792,0,0,0,0,792,736,792,0,540,540,851,855,540,540,540,540,1345,540,540,540,540,540,540,540,540,540,540,540,2181,540,540,540,540,561,561,561,921,925,561,561,561,561,561,561,951,561,956,561,963,561,966,561,561,980,561,561,0,585,585,585,994,998,585,585,585,585,585,585,1963,1964,1966,585,585,585,585,585,585,585,561,2713,585,2715,2716,540,540,540,540,585,585,585,1024,585,1029,585,1036,585,1039,585,585,1053,585,585,966,0,0,0,855,585,998,925,851,1065,894,540,540,921,1070,966,561,0,585,585,585,585,585,78112,0,0,0,0,0,0,0,0,0,114688,0,241664,258048,0,0,0,1093,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,766,0,0,1214,0,0,0,0,0,0,0,0,0,0,0,0,0,672,673,0,540,540,1342,540,540,540,540,540,540,540,540,540,540,540,540,540,0,0,0,585,585,585,1524,585,585,585,585,585,585,585,585,585,585,585,585,585,1517,585,585,585,1433,0,540,585,585,561,540,540,540,540,540,561,561,561,561,561,561,561,3070,561,561,561,561,561,561,585,585,585,585,585,585,0,0,0,3662,0,0,0,1641,0,0,0,0,0,0,0,0,0,0,0,0,1103,1104,1105,1106,1654,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,785,0,1693,0,0,0,0,0,0,0,0,0,0,0,0,0,0,305,306,0,1732,0,0,1733,0,0,0,0,540,540,540,540,540,540,540,3030,540,540,540,540,540,540,540,1745,540,540,540,540,540,540,540,540,540,1758,540,540,540,540,540,540,2540,540,540,540,540,540,540,540,540,540,540,1329,540,540,540,540,540,540,540,540,1795,540,540,1798,540,540,540,540,540,540,540,540,540,540,900,540,540,540,540,540,540,1810,540,540,540,540,540,1815,540,540,540,540,540,540,540,1360,914,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1416,561,1825,561,561,561,561,1831,561,561,561,561,561,1837,561,561,561,561,561,983,561,0,585,585,585,585,585,1002,585,1010,561,1892,561,561,561,561,561,561,561,561,561,561,1904,561,561,561,561,585,585,585,585,0,0,0,2726,0,0,2729,2730,561,561,1909,561,561,561,561,561,561,561,26027,1919,585,585,585,585,561,0,0,0,0,0,540,3649,540,540,540,540,540,540,561,561,561,561,561,561,561,3231,3232,561,1925,585,585,585,585,585,1931,585,585,585,585,585,585,585,585,585,561,0,0,0,0,0,3596,1944,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1540,561,561,2025,585,585,585,0,2029,0,0,0,0,0,2031,0,0,0,0,0,2487,0,0,0,0,0,0,0,0,0,0,0,122880,0,0,0,0,0,0,0,2041,0,0,0,0,0,0,0,0,0,0,0,0,1132,0,0,0,2075,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1135,0,2145,0,0,0,2143,0,0,2150,0,0,0,0,0,0,0,0,159744,0,0,0,0,0,0,0,0,1234,0,0,0,0,0,0,0,0,1584,0,0,0,0,0,0,0,0,1700,0,0,0,0,1705,0,0,540,540,2171,540,540,2174,540,540,540,540,540,540,2182,540,540,540,540,540,540,2568,540,540,540,540,2572,540,540,540,540,540,540,1347,540,540,540,540,540,540,540,540,540,540,2556,540,540,540,540,540,540,540,2201,540,540,540,540,540,540,540,540,540,540,540,540,540,0,0,2242,540,540,540,2214,540,540,540,540,540,540,540,540,540,540,540,540,540,1805,540,540,0,0,0,561,561,561,561,561,561,561,561,561,561,561,2254,561,0,585,585,585,585,585,78112,1079,0,0,0,0,0,0,0,0,2123,0,2125,2126,0,0,0,0,561,2257,561,561,561,561,561,561,2265,561,561,561,561,561,561,561,0,0,585,585,585,585,585,585,585,561,540,585,585,561,540,2952,561,2954,561,2299,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1438,561,2033,0,2035,0,0,2426,0,0,0,0,0,0,0,0,0,2434,0,0,0,2475,0,0,0,0,0,0,0,0,0,0,0,0,1193,0,0,0,0,2484,0,0,0,0,0,0,0,0,0,2493,0,0,0,0,0,0,756,0,0,0,0,0,0,763,0,0,0,0,0,561,561,561,561,561,561,561,561,2592,561,561,561,561,561,1408,561,561,1412,561,561,561,561,561,561,561,0,585,585,585,585,585,585,1008,585,2656,585,585,585,585,585,585,585,585,585,585,585,2664,585,585,585,585,585,585,2350,585,585,585,585,585,585,585,585,585,585,2379,585,585,585,585,585,585,585,585,2699,585,585,585,585,585,585,585,585,585,585,585,585,585,1940,585,585,2708,585,585,585,585,585,585,561,540,585,585,561,540,540,540,540,540,540,561,561,561,3229,561,561,561,561,561,561,585,585,585,3352,585,585,585,3355,585,585,2731,0,0,0,0,0,0,2736,0,0,0,0,0,0,0,0,0,192971,192971,192971,192971,192971,192971,192971,192971,0,0,0,2759,0,0,0,0,0,0,0,0,0,0,0,0,1234,540,540,540,0,0,0,2788,0,0,0,0,0,0,0,0,0,0,0,0,1238,0,0,0,540,540,540,2826,540,540,540,540,540,540,540,540,540,540,2833,540,540,540,540,1748,540,540,540,540,540,540,540,540,540,1760,540,540,540,540,1765,540,540,540,540,540,540,540,540,1772,540,540,540,540,561,3406,561,561,3408,561,561,561,561,561,561,561,0,585,585,585,585,585,585,1009,585,561,561,561,2860,561,561,2864,561,561,561,561,561,561,561,561,561,944,561,561,561,561,561,561,561,2873,561,561,561,561,561,561,561,561,561,561,561,2881,561,561,0,0,0,2649,0,1920,585,585,585,585,585,585,585,585,585,2703,585,585,585,585,585,585,585,585,585,2908,585,585,2912,585,585,585,585,585,585,585,585,585,585,2393,2394,585,585,585,585,585,2921,585,585,585,585,585,585,585,585,585,585,585,2929,585,585,0,0,0,3292,0,0,0,0,0,0,0,0,0,3297,2955,585,0,0,0,0,0,0,0,0,0,0,0,0,0,0,306,305,0,0,0,2970,0,0,0,0,0,0,0,0,0,0,0,0,1588,1589,0,0,540,540,540,540,3036,540,540,540,540,540,540,540,540,540,540,540,540,2546,540,540,540,561,561,561,3076,561,561,561,561,561,561,561,561,561,561,561,561,1436,561,561,561,585,585,585,3117,585,585,585,585,585,585,585,585,585,585,585,585,585,2356,585,2358,0,0,0,0,3176,3442,0,3444,0,0,0,0,0,540,3451,540,540,540,540,1796,540,540,540,540,540,540,540,540,540,540,540,905,540,540,540,540,3453,540,540,540,540,540,540,540,540,540,540,540,561,3466,561,3468,0,0,3501,0,0,0,0,0,0,540,540,540,540,3510,540,540,540,540,540,3204,3205,540,540,540,540,3209,3210,540,540,540,540,540,1749,1750,540,540,540,540,1757,540,540,540,540,540,540,1346,540,540,540,540,540,540,1356,540,540,307,308,309,0,0,0,0,0,0,0,0,0,0,0,0,0,734,0,0,0,0,418,0,0,0,0,0,449,0,0,0,0,0,0,0,0,286720,0,0,0,0,0,0,0,0,2490,0,0,0,0,0,0,0,0,2504,0,0,0,0,0,0,0,0,2517,0,0,0,0,0,0,0,0,2975,0,0,0,0,0,0,0,0,2999,0,0,0,0,0,0,0,0,3164,0,0,0,0,0,0,0,0,3173,0,0,0,0,0,0,0,0,3183,0,0,0,0,0,0,0,0,155648,0,0,0,0,0,0,0,0,0,0,0,449,449,418,449,449,449,449,449,449,449,449,449,449,449,449,532,449,532,532,532,449,532,532,532,532,449,542,564,542,564,542,542,564,542,588,564,564,564,564,564,564,564,588,588,588,542,588,588,588,588,588,564,564,616,621,588,621,627,1,12290,3,78112,0,1677,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1163,540,540,540,1811,540,540,540,540,540,540,540,540,540,540,540,1360,914,561,561,561,561,561,561,561,561,561,561,561,561,1377,561,0,585,585,585,585,585,78112,1079,0,0,1082,1086,0,0,1090,585,585,585,1993,585,585,585,585,585,1999,585,585,585,585,585,585,561,0,0,0,0,3551,0,3553,0,0,0,0,0,561,561,561,561,561,2589,561,561,561,561,2593,561,561,0,2648,0,0,0,0,585,585,585,585,585,585,585,585,585,2338,585,585,585,585,585,585,585,2657,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1971,585,585,585,2709,585,585,585,585,561,540,585,585,561,540,540,540,540,540,540,561,561,3228,561,561,561,561,561,561,561,0,0,585,2900,585,585,585,585,585,540,3514,540,3516,540,540,3518,540,561,561,561,561,561,561,561,561,1396,1398,561,561,561,561,561,561,3527,561,3529,561,561,3531,561,585,585,585,585,585,585,585,585,3540,585,3542,585,585,3544,585,561,0,0,0,0,0,0,0,0,0,362,362,362,0,0,0,147456,0,0,0,310,311,312,313,314,315,316,317,318,319,0,0,0,0,0,373,0,0,0,0,365,0,382,0,348,0,0,310,0,0,0,0,0,0,0,0,0,0,0,0,0,0,328,0,0,0,313,0,0,0,0,0,0,0,0,0,0,0,0,0,764,0,0,420,428,419,428,0,310,428,441,450,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,463,484,489,489,500,489,489,489,489,489,489,489,489,515,515,528,528,529,529,529,529,529,529,529,529,529,529,515,529,529,529,529,529,543,565,543,565,543,543,565,543,589,565,565,565,565,565,565,565,589,589,589,612,589,589,589,589,589,614,615,615,612,615,614,615,614,1,12290,3,78112,0,702,0,0,0,0,0,702,0,0,0,540,540,540,540,540,3028,540,540,540,540,540,540,540,561,967,561,561,561,561,561,0,585,585,585,585,585,585,585,585,2337,585,585,585,585,2341,585,0,1108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,540,3200,0,1150,1108,0,0,0,0,0,0,0,0,0,0,0,0,0,1102,0,0,0,1228,0,0,0,0,0,0,0,0,0,0,0,0,0,1240,0,0,540,540,1276,1278,540,540,540,540,540,540,540,540,1292,540,1297,540,540,1301,540,540,540,540,1812,540,540,540,540,540,540,540,540,540,1823,1360,914,561,561,561,561,561,561,561,561,561,561,561,561,1378,561,0,585,585,585,585,585,78112,1079,0,0,1083,1087,0,0,1091,540,1304,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1302,540,1360,914,561,561,1364,561,1367,561,561,561,561,561,561,561,561,1381,561,1386,561,561,1390,561,561,1393,561,561,561,561,561,561,561,561,1431,561,561,1435,561,561,561,561,1484,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1942,540,1793,1794,540,540,540,540,540,540,540,540,540,540,540,540,540,0,2584,0,585,585,1946,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2005,585,585,585,1959,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2357,585,2102,0,0,0,0,1670,0,0,0,0,0,0,0,0,0,0,328,379,381,0,0,0,0,0,2133,0,0,0,0,0,0,0,0,0,0,0,0,0,1119,0,0,2033,0,2035,0,0,0,0,0,0,2428,0,0,0,0,0,0,0,2122,0,0,0,0,0,0,0,0,0,122880,0,122880,122880,122880,122880,122880,0,0,2474,0,0,0,0,0,0,0,0,0,0,0,0,0,1133,0,0,0,0,0,0,2760,0,0,0,0,0,0,0,0,0,0,0,380,0,0,0,384,0,0,2799,0,0,0,0,0,0,0,2803,540,540,540,540,540,540,540,1326,540,540,540,540,540,540,540,1339,585,2956,0,0,0,0,0,2962,0,0,0,0,0,0,0,2966,0,0,0,3008,0,0,0,0,0,0,0,0,3017,0,0,0,0,0,383,0,69632,73728,0,0,0,0,0,65536,0,3048,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1320,3089,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1858,3130,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1957,540,3225,540,540,540,540,561,561,561,561,561,561,561,561,561,561,561,3414,585,585,585,3281,585,585,585,585,561,540,585,561,540,540,561,561,585,585,0,0,0,3157,3513,540,540,540,540,540,540,540,561,3521,561,3522,561,561,561,3526,540,540,540,3664,561,561,561,3666,585,585,585,3668,0,0,540,540,540,3560,540,540,540,540,540,540,540,540,3568,561,321,321,371,0,0,0,0,0,0,0,0,0,0,0,0,0,1161,0,0,0,0,371,0,430,436,0,442,451,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,490,490,501,490,490,490,490,490,490,490,490,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,516,544,566,544,566,544,544,566,544,590,566,566,566,566,566,566,566,590,590,590,544,590,590,590,590,590,566,566,544,566,590,566,590,1,12290,3,78112,540,540,540,874,540,540,540,540,540,540,540,540,540,540,540,540,540,1822,540,1360,585,1017,585,585,585,585,585,585,585,585,585,585,585,585,585,561,540,585,585,561,540,540,540,540,561,561,1122,0,1124,1125,0,0,0,1127,1128,0,0,0,0,0,0,0,0,1159168,0,1159168,0,0,0,0,1159168,0,0,1166,1167,0,0,0,0,0,0,0,0,0,0,0,0,1634,0,0,0,1113,0,1253,0,0,0,0,0,1128,0,0,0,0,0,1236,0,0,0,0,773,774,0,0,778,779,0,675,0,0,0,0,0,0,1598,0,0,0,0,0,0,0,0,1605,0,0,1268,1127,0,0,0,0,0,0,0,0,0,540,540,1277,540,540,540,1323,540,540,1325,540,540,1328,540,540,540,540,540,540,540,540,2554,540,540,540,540,540,540,2560,1360,914,561,561,1365,561,561,561,561,561,561,561,561,561,561,561,1400,561,561,561,561,561,561,1404,561,561,561,561,561,561,561,1413,561,561,1415,561,561,0,2648,0,0,0,0,585,585,585,585,585,585,585,2655,561,1419,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1874,561,561,561,1443,561,561,561,561,561,26027,1360,987,585,585,1456,585,585,0,0,3291,0,0,0,0,0,0,0,0,0,0,0,1262,0,0,0,1266,585,585,585,1504,585,585,1506,585,585,585,1510,585,585,585,585,585,561,540,585,585,561,540,540,540,2020,561,561,0,0,0,1657,0,0,0,0,0,0,0,0,0,0,0,0,1675,0,0,0,585,1991,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2695,561,2024,585,585,585,2028,0,2029,0,0,0,0,0,2031,0,0,0,0,0,2502,0,0,0,0,0,0,0,0,0,0,1586,1587,0,0,0,0,0,0,0,2033,0,0,0,0,0,2035,0,0,0,0,0,2038,0,0,2077,0,0,0,0,0,0,0,0,0,0,0,0,0,1177,0,0,0,0,0,0,2091,0,0,0,0,0,0,0,0,0,0,0,540,540,540,2807,540,0,0,0,561,561,561,561,561,561,561,561,2252,561,561,561,561,561,1447,561,561,26027,1360,987,585,585,585,585,585,561,540,585,585,561,2017,540,540,540,2021,561,2256,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1875,2272,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1890,561,561,561,2314,561,2316,561,561,561,561,561,561,561,0,0,0,0,0,0,585,585,585,585,585,585,585,585,585,585,585,585,2340,585,585,585,2399,585,2401,585,585,585,585,585,585,585,561,540,585,585,561,540,540,561,561,540,540,2564,540,540,540,540,540,540,540,540,540,540,540,540,540,540,3212,540,0,0,0,561,561,561,561,2588,561,561,561,561,561,561,561,561,1916,561,26027,0,585,585,585,585,0,2757,0,0,0,0,0,0,0,0,0,0,0,0,0,0,735,0,2834,540,540,540,540,540,540,540,2840,540,540,540,540,540,540,540,540,540,2571,540,540,540,540,540,540,2882,561,561,561,561,561,561,561,2888,561,561,561,561,561,561,561,0,0,585,585,585,2902,585,585,585,2930,585,585,585,585,585,585,585,2936,585,585,585,585,585,585,585,561,540,2714,585,561,540,540,540,540,540,540,3226,540,540,540,561,561,561,561,561,561,561,561,561,561,561,561,561,3074,585,585,585,585,3282,585,585,585,561,540,585,561,540,540,561,561,585,585,0,0,3156,0,585,585,3369,540,540,561,561,585,585,0,0,0,0,0,0,0,0,2617344,0,0,0,0,0,2789376,0,0,0,0,0,3176,0,0,0,3445,0,0,0,0,540,540,540,540,3027,540,540,540,540,3031,540,540,540,540,540,540,3456,540,540,540,540,540,540,540,540,561,561,561,561,561,3524,561,561,561,561,3471,561,561,561,561,561,561,561,561,585,585,585,585,585,585,585,585,585,585,585,3486,585,585,585,585,585,585,585,585,561,0,0,0,0,0,3626,540,540,540,3515,540,540,540,540,540,561,561,561,561,561,561,561,561,561,561,3413,561,561,3528,561,561,561,561,561,585,585,585,585,585,585,585,585,585,585,3113,585,585,585,3541,585,585,585,585,585,561,0,0,0,0,0,0,0,0,0,362,362,208896,0,0,0,0,323,324,325,0,0,0,0,0,0,0,0,0,0,0,0,0,1194,1196,0,0,0,0,322,370,325,369,0,0,0,0,0,0,0,0,0,364,0,0,0,0,0,0,322,0,0,369,369,399,0,325,0,0,0,0,0,0,0,0,0,233472,0,0,0,0,0,0,0,0,0,324,0,0,0,322,452,465,465,465,465,465,465,465,478,465,465,465,465,465,465,465,465,465,465,465,491,491,465,491,491,506,508,491,491,506,491,517,517,517,517,517,517,517,517,517,517,517,517,517,534,517,517,517,517,517,545,567,545,567,545,545,567,545,591,567,567,567,567,567,567,567,591,591,591,545,591,591,591,591,591,567,567,545,567,591,567,591,1,12290,3,78112,659,0,0,0,0,0,0,0,0,0,0,670,671,0,0,0,0,0,439,0,0,0,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,473,557,580,557,580,557,557,580,557,604,0,0,707,708,0,0,0,0,0,714,0,0,0,718,0,720,0,769,770,0,0,0,0,0,0,0,0,0,0,0,0,0,1209,0,0,787,0,789,0,0,0,0,0,0,0,0,0,0,0,0,0,1224,0,0,0,801,0,806,0,809,0,0,0,0,806,809,0,0,0,809,0,707,0,0,826,0,0,0,0,0,826,826,829,809,806,0,0,0,0,0,0,0,789,0,801,0,818,0,0,0,0,0,2745,0,0,0,0,0,0,0,0,0,0,811,540,540,854,540,540,0,0,0,789,0,0,0,0,0,838,0,0,0,0,0,0,0,2142,540,540,540,540,540,540,540,540,540,540,2819,540,540,540,540,540,0,0,0,787,0,0,0,838,818,838,0,540,540,852,540,858,540,540,871,540,881,540,886,540,540,893,896,901,540,909,540,540,540,540,540,3215,540,540,540,540,540,540,540,540,540,540,895,540,540,540,540,540,561,561,561,922,561,928,561,561,941,561,561,952,561,957,561,561,0,2648,0,0,0,0,585,585,585,585,585,2653,585,585,0,0,2959,0,0,0,0,0,0,0,0,0,2965,0,965,968,973,561,981,561,561,0,585,585,585,995,585,1001,585,585,0,2958,0,0,0,0,0,0,0,0,0,0,0,0,131072,131072,0,0,1014,585,585,1025,585,1030,585,585,1038,1041,1046,585,1054,585,585,968,0,0,0,540,585,585,561,852,540,1066,901,540,922,561,1071,973,0,0,0,1110,0,0,0,0,0,0,0,1117,0,0,0,0,0,0,775,0,0,0,0,0,0,0,0,0,1205,0,0,0,0,0,0,0,1137,1138,0,0,0,0,1142,0,0,0,362,362,0,0,0,0,0,664,0,0,0,0,0,0,0,0,0,0,1206,0,0,0,0,0,0,1165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,784,0,0,0,1182,741,0,0,0,1134,0,0,0,0,0,0,0,0,0,245760,0,0,0,0,0,0,1303,540,540,540,540,540,540,540,540,540,540,540,540,540,1318,540,540,540,540,2173,540,540,540,540,540,540,540,540,540,540,540,540,2558,540,540,540,1360,914,561,561,561,561,561,561,561,561,561,1372,561,561,561,561,561,1850,561,561,561,561,561,561,561,561,561,561,1902,1903,561,561,561,561,561,561,1387,561,561,561,1392,561,561,561,561,561,561,561,561,561,1432,561,561,561,561,561,1439,561,561,561,1421,561,561,561,561,561,561,561,561,561,561,1437,561,0,585,585,585,1049,585,78112,1079,0,0,0,0,0,0,0,836,0,0,0,0,0,0,811,0,585,585,585,585,1463,585,585,585,585,585,585,1478,585,585,585,1483,0,0,1608,1609,1610,0,1612,1613,0,0,0,0,1618,0,0,0,0,0,679,751,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2144,0,0,1640,0,0,1643,0,1645,0,0,0,0,0,1651,1652,0,0,0,0,785,0,0,0,0,0,0,540,846,540,540,540,540,540,540,3216,540,540,540,540,540,3221,540,3223,540,0,1668,0,0,1670,0,0,0,0,1672,1673,0,0,0,0,0,0,0,69632,73728,0,0,0,347,345,65536,0,1692,0,0,0,0,0,1698,1699,0,1701,1702,1703,0,0,0,0,0,0,810,811,0,0,0,0,811,0,0,0,1719,0,0,0,1723,1724,0,0,0,0,0,0,0,0,0,0,346,0,0,0,0,0,0,0,1715,0,0,0,1735,1585,1585,1737,540,1739,540,1740,540,1742,540,540,540,1746,540,540,540,540,540,540,540,540,540,1759,540,540,540,540,540,3318,540,540,540,540,540,540,540,540,540,540,540,2557,540,540,540,540,540,540,1763,540,540,540,540,1767,540,1769,540,540,540,540,540,540,540,540,2570,540,540,540,540,540,540,540,540,540,3041,540,540,540,540,540,540,540,540,1777,1778,1780,540,540,540,540,540,540,1787,1788,540,540,1791,1792,540,540,540,540,540,540,540,1800,540,540,540,1804,540,540,540,540,540,540,2829,540,540,540,540,540,540,540,540,540,540,1770,540,540,540,540,540,0,1828,561,1830,561,561,1832,561,1834,561,561,561,1838,561,561,561,561,585,585,585,585,0,0,2725,0,0,0,0,0,0,0,69632,73728,0,135168,135168,0,0,65536,135168,1859,561,1861,561,561,561,561,561,561,561,561,1869,1870,1872,561,561,0,2648,0,0,0,0,585,585,585,585,2652,585,585,585,585,585,585,2390,585,585,585,585,585,585,585,585,585,585,3124,585,585,585,585,585,561,561,561,1894,561,561,561,1898,561,561,561,561,561,561,561,1906,585,1926,585,1928,585,585,585,1932,585,585,585,585,585,585,585,585,561,540,585,561,540,540,561,561,585,585,0,0,0,0,585,1945,585,585,585,585,1949,585,585,585,585,1953,585,1955,585,585,561,3146,3147,3148,540,540,561,561,585,585,0,0,0,0,0,0,2488,0,0,0,0,0,0,0,0,0,2096,0,0,0,0,0,0,1974,1975,1976,585,585,1979,1980,585,585,585,585,585,585,585,1988,585,561,0,1288,585,1468,1377,540,540,540,1549,540,561,561,561,1553,585,585,1992,585,585,585,585,585,585,585,2e3,585,585,585,585,585,561,561,540,561,585,561,585,1,12290,3,78112,585,585,585,585,2011,561,540,2014,585,561,1792,540,2019,540,1886,561,0,585,585,1040,585,585,78112,1079,0,0,0,0,0,0,0,0,1134592,0,0,1134592,0,0,0,0,2023,561,1980,585,2027,585,0,2029,0,0,0,0,0,2031,0,0,0,0,0,2761,0,0,0,0,0,0,0,0,0,0,661,0,0,0,0,0,0,2089,0,0,0,0,2093,0,0,0,0,0,0,0,0,0,377,0,0,0,0,0,0,0,0,0,0,2119,0,2121,0,0,0,0,0,0,0,2129,0,0,0,0,786,0,805,0,0,0,0,540,849,540,540,540,540,540,2216,540,540,540,540,540,540,2221,540,540,540,540,540,540,3633,561,561,561,561,561,561,3639,585,585,0,0,0,2134,0,0,0,0,2139,0,0,0,0,0,0,0,0,2990080,2179072,2179072,2502656,2179072,2179072,2179072,2179072,540,2187,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1337,540,2211,2212,540,540,540,540,540,540,2219,540,540,540,540,540,540,540,540,540,2582,540,540,540,0,0,0,561,561,2258,561,2260,561,561,561,561,561,561,2268,561,2270,561,561,561,561,1426,561,561,561,561,561,561,561,561,561,561,561,3343,561,561,561,561,3344,3345,561,561,2343,585,2345,585,585,585,585,585,585,2353,585,2355,585,585,585,585,561,0,0,0,3648,0,540,540,540,540,3652,540,585,585,585,585,2389,585,585,585,585,585,585,585,585,585,585,585,585,2705,585,585,585,585,585,585,585,2402,585,585,2405,2406,585,585,561,2177,585,2345,2260,540,2414,540,540,561,2418,561,561,585,2422,585,585,2029,0,2031,0,0,0,0,795,663,844,0,0,0,0,540,848,540,540,540,540,540,1283,540,540,540,540,540,540,1298,540,540,540,540,540,540,2580,540,540,540,540,540,540,0,2584,0,0,0,2450,0,0,0,0,0,0,0,0,0,0,0,0,0,1239,0,0,0,2459,0,0,0,0,0,2464,0,2466,2467,0,0,0,0,0,0,0,69632,73728,0,0,0,371,0,65536,0,0,2498,0,0,0,0,0,0,0,2505,0,0,0,0,0,0,0,2479,0,0,0,2481,0,0,0,0,2561,540,540,540,2566,540,540,540,540,540,540,540,2573,540,540,540,540,540,540,2838,540,540,540,540,540,540,540,540,540,540,1296,540,540,540,540,540,0,0,0,561,561,561,561,561,561,561,2591,561,561,561,561,561,561,2640,561,561,561,2643,561,561,561,561,561,561,2886,561,561,561,561,561,561,561,561,561,1867,561,561,561,561,561,561,2621,561,561,561,561,2625,561,561,561,2630,561,561,561,561,561,561,585,585,585,585,585,585,0,3661,0,0,561,2637,561,561,561,561,561,561,561,2642,561,561,561,561,561,561,585,585,585,585,585,585,585,585,585,3427,585,2669,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,3267,2797,2798,0,0,0,0,0,0,0,0,0,540,540,540,540,540,1741,540,0,0,2982,2983,0,2984,0,2986,0,0,0,0,2988,0,0,0,0,0,680,681,0,0,0,0,0,0,0,0,0,2047,0,0,0,0,0,0,0,0,3007,0,0,2988,0,0,3013,3014,0,3016,0,0,3019,0,0,0,0,800,0,0,0,0,0,0,0,0,0,0,0,0,800,0,0,0,0,3022,540,540,540,540,540,540,3029,540,540,540,540,540,3033,3062,540,561,561,561,561,561,561,3069,561,561,561,561,561,3073,561,0,585,585,1042,585,585,288,1079,0,0,1082,1086,0,0,1090,3103,561,585,585,585,585,585,585,3110,585,585,585,585,585,3114,585,561,0,1543,585,1545,1546,540,540,1548,540,540,561,561,1552,561,0,585,585,1044,585,585,78112,1079,0,0,0,0,0,0,0,794,0,0,0,0,0,0,0,798,3144,585,561,540,585,561,540,3150,561,3152,585,3154,0,0,0,0,0,0,825,0,819,0,664,0,0,0,0,0,0,0,69632,73728,221184,0,0,0,0,65536,0,0,0,3160,0,0,3163,0,0,0,0,0,0,0,0,0,0,396,0,0,0,0,0,0,0,0,0,3170,0,0,0,0,0,0,0,0,0,0,0,540,540,2806,540,540,540,3202,540,540,540,540,540,540,540,3207,540,540,540,540,540,540,540,540,3040,540,540,540,540,540,540,540,540,540,3322,540,540,540,540,540,540,561,3234,561,561,561,561,561,561,561,561,561,561,561,561,561,561,1889,561,3245,561,561,561,561,561,561,561,561,561,561,561,561,561,561,585,585,585,585,585,585,585,3257,585,585,585,585,585,585,585,3262,585,585,585,585,585,561,2013,585,2015,2016,540,2018,540,540,561,2022,561,561,561,3349,561,561,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2667,0,3378,3379,0,3176,0,3383,0,0,0,0,0,0,0,0,0,384,0,0,0,0,0,384,0,0,0,3441,3176,0,0,0,0,0,0,0,0,540,540,540,540,540,2167,540,540,0,0,0,0,3503,0,0,0,0,540,540,540,540,540,540,3512,0,0,3557,3558,3559,540,540,540,3562,540,3564,540,540,540,540,3569,3570,3571,561,561,561,3574,561,3576,561,561,561,561,3581,3582,3583,585,561,1203,540,585,585,561,540,540,540,540,540,561,561,561,561,585,585,585,585,0,0,0,0,0,0,0,0,0,0,585,585,3586,585,3588,585,585,585,585,3593,0,0,0,0,0,0,0,2747,2748,2749,0,0,0,0,0,0,0,2763,0,0,0,0,0,0,0,0,0,254413,254413,254413,254413,254413,254413,254413,254413,1,12290,0,0,540,3628,540,540,540,3632,561,561,3634,561,561,561,3638,585,585,3640,585,585,585,3644,561,0,0,0,0,0,540,540,540,540,540,540,540,3563,540,3565,540,540,540,561,0,0,0,326,327,0,0,0,0,0,0,0,0,0,0,0,674,0,0,0,0,0,366,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1120,0,0,0,0,366,0,0,0,374,376,0,0,0,0,0,0,0,344,0,402,0,0,0,0,0,402,0,0,409,0,0,0,409,69632,73728,0,366,366,0,421,65536,366,0,0,366,421,498,502,498,498,507,498,498,498,507,498,421,421,327,421,0,0,421,0,421,0,0,0,0,0,0,0,372,0,0,0,0,0,0,0,0,0,0,0,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,421,546,568,546,568,546,546,568,546,592,568,568,568,568,568,568,568,592,592,592,546,592,592,592,592,592,568,568,546,568,592,568,592,1,12290,3,78112,0,0,677,0,0,0,0,0,0,0,0,0,0,0,0,0,1248,0,0,540,540,540,875,540,540,540,540,540,540,540,540,540,540,540,540,540,2183,540,540,561,561,915,561,561,561,561,561,561,945,561,561,561,561,561,561,585,3421,585,585,3423,585,585,585,585,585,585,1018,585,585,585,585,585,585,585,585,585,585,585,585,585,561,0,0,0,0,0,0,540,0,0,0,540,988,585,561,540,540,540,540,540,561,561,561,561,561,3068,561,561,561,561,561,561,561,561,932,561,561,946,561,561,561,561,561,561,934,561,561,561,561,561,561,561,561,561,3240,561,561,561,561,561,561,0,0,1109,0,0,0,0,0,0,0,0,0,0,0,0,0,1604,0,0,0,0,1229,0,1109,0,0,0,0,0,0,0,0,0,0,0,686,0,0,0,0,540,540,540,1281,540,540,540,540,540,1293,540,540,540,540,540,540,540,540,3054,3056,540,540,540,3059,540,3061,1360,914,561,561,561,561,561,561,561,1370,561,561,561,561,561,1382,585,585,1461,585,585,585,585,585,1473,585,585,585,585,585,585,585,585,2914,585,585,585,585,585,585,585,585,3122,585,585,585,585,585,585,585,585,3136,3138,585,585,585,3141,585,3143,0,1720,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1134,0,1990,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1972,585,585,585,2373,585,585,585,585,585,585,585,585,585,585,585,585,585,2370,585,585,585,585,2698,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2383,585,0,0,0,3161,0,0,0,0,0,0,0,0,0,0,0,0,1688,0,0,0,561,561,3235,561,561,561,561,561,561,561,561,561,561,561,561,561,0,2325,0,3663,540,540,540,3665,561,561,561,3667,585,585,585,0,0,540,540,540,2526,540,540,540,540,540,540,540,540,540,540,540,540,3058,540,540,540,422,422,0,422,431,0,422,0,422,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,466,492,492,466,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,492,547,569,547,569,547,547,569,547,593,569,569,569,569,569,569,569,593,593,593,547,593,593,593,593,593,569,569,547,569,593,569,593,1,12290,3,78112,0,0,0,0,2159,0,0,0,540,540,540,540,540,540,540,540,540,540,3032,540,540,540,540,540,2202,540,540,540,540,540,540,540,540,540,540,540,540,540,2208,540,540,2413,540,540,540,2417,561,561,561,2421,585,585,585,0,0,0,0,3293,0,0,0,0,0,3296,0,0,0,2458,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1250,2967,0,0,0,2971,0,0,0,0,0,2977,0,0,0,0,0,0,0,69632,73728,0,0,0,418,0,65536,0,0,2992,0,0,2995,0,0,0,0,0,3e3,0,0,0,0,0,0,0,69632,73728,0,367,367,0,0,65536,367,0,0,0,3023,540,540,540,540,540,540,540,540,540,540,540,540,540,2222,540,540,540,540,3049,540,540,540,540,540,540,540,540,3057,540,540,3060,540,540,540,540,2189,540,540,540,540,540,540,540,540,540,540,540,540,2583,0,0,0,540,540,3063,561,561,561,561,561,561,561,561,561,561,561,561,561,0,2326,0,561,561,3090,561,561,561,561,561,561,561,561,3098,561,561,3101,561,0,585,585,1045,585,585,78112,1079,0,0,0,0,0,0,0,1102,1101,0,0,0,0,0,0,0,0,0,0,0,0,540,1275,540,561,561,3104,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2666,585,585,585,3131,585,585,585,585,585,585,585,585,3139,585,585,3142,585,585,585,585,585,1930,585,585,585,585,585,585,585,585,1941,585,585,585,585,585,1948,585,585,585,585,585,585,585,585,585,585,585,3263,585,585,585,585,0,0,0,0,3179,0,0,0,0,0,0,0,0,0,0,0,732,0,0,0,0,0,0,3192,0,0,0,0,0,0,0,0,0,0,0,540,540,540,540,2808,3201,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1359,540,3213,540,540,540,540,540,540,540,3218,540,3220,540,540,540,540,540,540,561,3227,561,561,561,3230,561,561,561,561,561,982,561,0,585,585,585,585,999,585,585,585,561,561,3246,561,3248,561,561,561,561,561,561,561,561,561,561,585,585,585,585,585,3537,585,585,585,585,3256,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,3278,585,585,3268,585,585,585,585,585,585,585,585,3274,585,3276,585,585,561,3370,540,3371,561,3372,585,0,0,0,0,0,0,0,785,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1179,540,540,3328,540,540,540,540,540,540,540,561,561,561,561,561,561,561,561,561,3233,561,561,561,561,3340,561,561,561,561,561,561,561,561,561,3346,561,0,994,1075,1039,585,585,78112,1079,0,0,1081,1085,0,0,1089,3358,585,585,585,585,585,585,585,585,585,3364,585,585,585,585,585,585,585,1981,1982,585,585,585,585,585,585,585,561,540,585,585,561,2951,540,2953,561,561,561,3654,3655,561,561,585,585,3658,3659,585,585,0,0,0,0,0,0,1126,0,0,0,1130,1131,0,0,0,0,0,0,1141,0,1143,0,0,362,362,0,0,0,691,0,0,0,0,696,0,0,0,362,362,362,0,0,0,0,0,0,1154,0,0,0,0,0,1160,0,1162,0,758,0,0,0,0,0,0,758,0,0,0,0,0,758,758,0,0,0,0,803,0,0,0,0,0,0,0,0,0,0,0,0,0,0,832,0,0,0,0,0,0,0,0,0,758,0,0,0,0,0,0,0,0,0,0,0,856,585,999,926,540,540,540,540,910,561,561,561,561,561,1880,1881,1882,561,561,1885,1886,561,561,561,561,561,1896,561,561,561,561,561,561,561,561,561,561,2603,561,2605,561,561,561,982,0,585,585,585,585,1055,78112,1079,0,0,0,0,0,0,0,375,0,378,0,0,0,378,0,0,0,0,1709,0,0,0,0,0,0,0,0,0,0,0,0,0,1619,0,0,585,585,585,2010,585,561,540,585,585,561,540,540,540,540,561,561,561,3066,561,561,561,561,561,561,561,561,561,561,2600,561,561,561,561,561,561,561,561,0,0,987,585,585,585,585,585,0,2039,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1178,0,540,540,540,2172,540,540,540,540,540,540,540,540,540,540,540,540,540,2238,2584,0,0,0,0,561,561,561,561,561,561,561,561,561,561,561,561,2255,0,0,0,0,2461,0,0,0,0,0,0,0,0,0,0,0,747,0,0,0,0,3288,585,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1184,1184,561,561,561,561,3350,561,585,585,585,585,585,585,585,585,585,585,585,2939,585,585,585,585,3368,585,561,540,540,561,561,585,585,0,0,0,0,0,0,0,394,0,0,0,0,0,394,0,0,467,467,485,493,493,485,493,493,493,493,493,493,493,493,518,526,526,526,526,526,526,526,526,526,526,526,526,526,535,526,526,526,526,526,548,570,548,570,548,548,570,548,594,570,570,570,570,570,570,570,594,594,594,548,594,594,594,594,594,570,570,548,570,594,570,594,1,12290,3,78112,767,0,0,771,0,0,0,0,0,0,0,0,0,0,0,0,1704,0,0,0,821,0,0,0,798,0,0,821,0,0,0,0,0,821,821,0,0,0,0,805,0,0,786,0,0,0,0,805,0,0,0,0,0,0,0,805,0,0,0,0,0,798,0,0,0,0,0,0,839,794,0,0,839,0,0,0,0,808,0,0,692,0,0,672,0,692,0,813,675,676,0,0,0,0,0,682,0,0,0,0,0,0,0,0,340,0,0,0,0,0,0,0,540,867,540,540,540,540,540,540,540,540,540,540,540,540,911,540,540,540,540,2215,540,540,540,540,540,540,540,540,540,540,540,1756,540,540,540,540,983,0,585,585,585,1077,1056,78112,1079,0,0,0,0,0,0,0,412,412,0,0,0,0,0,412,0,1180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1621,0,0,1241,0,0,0,0,0,0,0,0,1246,0,0,0,0,0,0,1170,0,0,0,0,0,0,0,0,0,816,0,0,0,0,0,0,540,1305,540,540,540,540,540,540,540,1313,540,540,540,540,540,540,540,540,3332,540,561,561,561,561,561,561,935,561,561,561,561,561,561,561,561,561,3094,561,3096,561,561,561,561,561,561,1340,540,540,1344,540,540,540,540,540,1350,540,540,540,1357,540,540,540,540,540,3458,540,3460,3461,540,3463,540,561,561,561,561,561,2262,561,561,561,561,561,561,561,561,561,561,1399,561,561,561,561,561,1360,914,561,561,561,561,561,561,561,561,561,561,561,1375,561,561,561,561,1848,561,561,561,561,561,561,561,561,561,561,561,2868,561,561,561,561,561,1441,561,561,561,1448,561,561,26027,1360,987,585,585,585,585,585,585,585,1998,585,585,585,585,585,2003,585,585,1485,585,585,585,585,585,585,585,1493,585,585,585,585,585,585,585,585,3261,585,585,585,585,585,585,585,585,3272,585,585,585,585,585,585,585,585,3283,540,585,561,540,540,561,561,585,1522,585,585,1526,585,585,585,585,585,1532,585,585,585,1539,585,585,585,585,585,1996,1997,585,585,585,585,585,585,585,585,585,1531,585,585,585,585,585,585,0,0,0,1595,0,0,0,0,0,0,0,0,0,0,0,0,1716,0,0,0,0,0,1656,0,0,0,0,0,0,0,0,0,1665,0,0,0,0,0,710,0,0,0,0,0,0,0,0,0,0,662,0,0,0,0,0,540,540,540,540,540,1708,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1653,0,0,0,1722,0,0,0,0,0,0,0,0,0,0,0,0,1729,0,0,0,0,0,0,1706,0,0,0,0,0,540,540,540,540,540,540,540,540,540,540,3398,540,3400,540,561,561,1893,561,561,561,561,561,561,1901,561,561,561,561,561,561,1410,561,561,561,561,561,561,561,561,561,1428,561,561,561,561,561,561,561,561,561,1917,26027,0,1922,585,1924,585,561,561,561,1910,1912,561,561,561,561,561,26027,0,585,585,585,585,585,585,2335,585,585,585,585,585,585,585,585,561,0,3622,0,3624,0,0,540,585,585,585,585,1978,585,585,585,585,585,585,585,585,1987,585,585,585,585,585,585,2934,585,585,585,585,585,585,585,585,585,585,2407,561,540,585,585,561,585,585,585,585,1995,585,585,585,585,585,585,585,585,585,2004,2006,0,0,0,2078,0,0,0,2081,0,0,0,0,0,2087,0,0,0,0,0,2774,0,0,0,2778,0,2780,0,0,0,0,0,0,2746,0,0,0,0,0,0,0,0,0,362,362,362,0,0,0,0,0,2103,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1265,0,0,0,0,561,561,561,561,561,2249,561,561,561,561,561,561,561,0,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1519,585,585,2346,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2919,585,2448,0,0,0,0,0,0,0,0,2453,0,0,2456,0,0,0,0,0,726,0,0,0,0,0,0,0,0,0,736,0,0,0,2460,0,0,0,0,0,0,0,0,0,0,0,2471,0,0,0,2485,2486,0,0,2489,0,0,2492,0,0,0,0,0,0,0,69632,73728,0,417,417,0,0,65536,417,0,0,2499,0,0,0,0,0,0,0,0,0,0,0,2510,0,0,0,0,815,0,812,795,0,0,817,0,667,0,791,0,0,0,0,1096,0,0,1098,0,0,0,0,0,0,0,0,827,0,0,0,0,0,0,0,0,540,2524,540,540,540,540,540,540,540,540,540,540,540,540,540,1789,540,540,540,540,540,2551,540,540,540,540,540,540,540,540,540,540,540,540,540,2559,540,540,2562,540,540,540,540,540,540,2569,540,540,540,540,540,540,540,540,540,540,3323,540,540,540,540,540,540,2576,540,540,540,2579,540,540,540,540,540,540,540,0,0,0,0,0,755,0,0,0,0,0,0,0,0,765,0,0,0,0,561,2586,561,561,561,561,561,561,561,561,561,561,561,3254,561,561,561,585,585,585,585,585,2672,585,585,585,585,585,585,2677,585,585,585,585,561,0,3646,0,0,0,540,540,540,540,540,540,2529,540,540,540,540,540,540,540,540,540,540,2842,540,540,540,540,540,585,585,585,2683,585,585,585,585,585,585,2690,585,585,585,585,585,585,585,2351,585,585,585,585,585,585,585,585,1508,585,585,585,585,585,585,585,585,2697,585,585,585,585,585,585,585,585,585,2704,585,585,585,2707,0,0,0,0,2735,0,0,0,0,0,0,0,2739,0,0,0,0,0,799,0,0,0,0,0,540,540,540,540,540,2528,540,540,540,540,540,540,540,540,540,540,2234,540,540,540,540,0,540,540,540,2811,540,540,540,540,540,540,540,540,540,540,540,540,540,2821,540,540,540,540,540,2836,540,540,540,2839,540,2841,540,540,540,540,540,540,540,540,3520,561,561,561,561,561,561,561,1450,26027,1360,987,585,585,585,585,585,2845,540,540,540,540,540,540,0,0,561,561,2853,561,561,561,561,561,1913,561,561,561,561,26027,0,585,585,585,585,2333,585,585,585,585,585,585,585,585,585,585,1050,585,585,585,585,561,561,2858,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2284,561,561,561,2874,2875,561,561,561,561,2878,561,561,561,561,561,561,561,0,585,585,585,585,585,585,1005,585,561,561,561,2884,561,561,561,2887,561,2889,561,561,561,561,561,561,1449,561,26027,1360,987,1453,585,585,585,585,2893,561,561,561,561,561,561,0,0,585,585,2901,585,585,585,585,585,585,585,3121,585,585,585,585,585,585,585,585,561,540,585,561,540,3285,561,3287,585,2906,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,3367,585,585,2922,2923,585,585,585,585,2926,585,585,585,585,585,585,585,585,3592,561,0,0,0,0,3595,0,585,585,585,2932,585,585,585,2935,585,2937,585,585,585,585,585,585,585,1933,585,585,585,585,1939,585,585,585,2941,585,585,585,585,585,585,561,540,585,585,561,540,540,561,561,585,585,0,0,0,0,0,0,0,0,2963,0,0,0,0,0,585,585,2957,0,0,2960,2961,0,0,0,0,0,0,0,0,0,662,0,662,0,0,0,0,0,0,0,0,3009,0,0,3012,0,0,0,0,0,0,0,0,0,2200253,151552,2200253,0,0,0,151552,540,540,540,540,3037,540,540,540,540,540,540,540,540,540,540,540,540,3325,540,540,540,540,540,540,540,3051,540,540,540,540,540,540,540,540,540,540,540,540,3465,561,561,561,561,561,561,3077,561,561,561,561,561,561,561,561,561,561,561,561,1887,1888,561,561,561,561,561,561,3092,561,561,561,561,561,561,561,561,561,561,561,3480,585,585,585,585,561,561,585,585,585,585,3108,585,585,585,585,3112,585,585,585,585,585,585,585,3135,585,3137,585,585,585,585,585,585,561,0,0,0,0,0,3552,0,0,0,585,585,585,3118,585,585,585,585,585,585,585,585,585,585,585,585,1512,585,585,585,585,585,585,585,3133,585,585,585,585,585,585,585,585,585,585,585,585,2917,585,585,2920,0,0,3168,3169,0,0,0,0,0,0,0,0,0,0,0,0,2071,0,0,0,540,540,540,540,3329,540,540,540,540,540,561,561,561,561,561,561,561,561,561,3412,561,561,3336,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2285,3347,561,561,561,561,561,585,585,585,585,585,585,3354,585,585,585,585,585,585,2404,585,585,585,585,561,2178,585,2346,2261,3389,0,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2534,0,0,0,0,3176,0,0,0,0,0,3447,3448,0,540,540,540,540,2527,540,540,540,540,2531,540,540,540,540,540,540,540,1312,540,540,540,540,540,540,540,540,540,1784,540,540,540,540,540,540,561,561,561,561,3473,561,3475,3476,561,3478,561,585,585,585,585,585,1079,0,0,0,0,0,0,0,0,0,0,254413,0,0,0,0,0,585,585,585,3488,585,3490,3491,585,3493,585,3495,0,0,0,0,0,0,0,69632,73728,313,314,314,419,420,65536,427,585,585,3617,585,3618,585,585,585,561,0,0,0,0,0,0,540,585,585,561,540,540,540,904,540,561,561,561,976,561,561,585,585,3673,3674,3675,3676,0,540,561,585,0,540,561,585,585,585,585,585,1079,0,0,1563,0,0,0,1569,0,0,0,0,0,2789,0,0,0,0,0,0,0,0,0,0,1591,0,0,0,0,0,571,571,571,571,571,571,571,595,595,595,540,595,595,595,595,595,571,571,540,571,595,571,595,1,12290,3,78112,737,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1707,0,0,2040,0,0,0,0,0,0,0,0,0,0,0,0,0,1635,0,0,2170,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1360,0,0,0,561,561,561,561,561,561,561,561,561,2253,561,561,561,561,926,561,561,561,561,561,561,561,561,561,561,561,2307,561,561,561,2310,400,0,0,0,0,378,0,69632,73728,0,0,0,0,423,65536,0,0,0,0,1111,0,0,0,0,0,0,0,0,0,0,0,1687,0,1689,0,0,423,423,0,423,0,437,423,0,423,468,468,468,475,468,468,468,468,468,468,468,468,475,468,468,468,468,468,468,468,468,482,468,494,494,468,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,494,537,549,572,549,572,549,549,572,549,596,572,572,572,572,572,572,572,596,596,596,549,596,596,596,596,596,572,572,549,572,596,572,596,1,12290,3,78112,0,660,661,0,0,0,0,0,0,0,0,0,0,0,0,0,1666,0,0,830,0,0,0,661,0,0,0,0,0,0,0,0,0,0,0,0,0,0,729,0,742,661,0,0,0,0,0,540,847,540,540,540,540,540,540,3330,540,540,540,561,561,561,561,561,3335,861,540,540,540,540,540,540,540,540,540,897,540,540,540,540,540,540,540,1799,540,540,540,540,540,540,1807,540,561,561,916,561,561,561,931,561,561,561,561,561,561,561,561,561,2266,561,561,561,561,561,561,0,0,0,540,989,585,561,540,540,897,540,540,561,561,969,561,561,561,561,561,0,585,585,989,585,585,585,1004,585,1094,0,0,0,0,0,0,0,0,0,1101,1102,0,0,0,0,0,0,1203,0,0,0,0,0,0,0,0,0,0,196608,0,0,0,0,0,540,540,540,1308,540,540,540,540,540,540,540,540,540,540,540,540,540,3222,540,540,1360,914,561,1363,561,561,561,561,561,561,561,561,561,561,1376,1383,561,561,561,1444,561,561,561,561,26027,1360,987,585,1454,585,585,585,585,585,585,2659,585,585,2662,2663,585,585,585,585,585,585,585,2712,540,585,585,561,540,540,540,540,585,585,1488,585,585,585,585,585,585,585,585,585,585,585,585,585,585,3128,585,1521,585,585,585,585,585,585,585,585,585,585,585,1535,585,585,585,585,585,585,2673,585,585,585,2676,585,585,2678,585,2679,561,585,585,1521,585,585,1079,0,0,0,0,0,0,0,0,0,759,0,0,0,0,0,0,1826,561,561,561,561,561,561,561,561,561,561,561,561,561,1841,1842,585,585,2009,585,585,561,540,585,585,561,540,540,540,540,561,561,561,561,1849,561,561,561,561,561,561,561,561,561,561,561,2880,561,561,561,561,561,2063,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2074,540,540,2226,540,540,540,540,540,540,540,540,540,540,540,540,0,0,561,561,561,2854,561,561,561,561,561,561,2301,561,561,561,561,561,561,2306,561,561,561,561,561,561,3079,561,561,561,561,561,3085,561,561,3088,2311,561,561,561,561,561,561,561,561,561,561,561,561,0,0,0,0,0,0,585,585,585,585,585,585,2654,585,585,585,585,585,2374,585,585,585,585,585,585,585,585,585,585,585,585,3140,585,585,585,585,2386,585,585,585,585,585,585,2391,585,585,585,585,585,2396,585,585,585,585,585,2012,540,585,585,561,540,540,540,540,561,561,561,561,2624,561,561,561,561,561,561,2632,561,561,561,561,561,2288,561,561,561,561,561,561,561,561,561,561,2631,561,561,561,561,561,2435,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2114,0,0,0,0,2476,0,0,0,0,0,0,0,0,0,0,0,748,0,0,0,0,0,2732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1590,1591,0,0,0,2772,0,0,0,0,2777,0,0,0,0,0,0,0,540,562,540,562,540,540,562,540,586,540,540,2810,540,540,540,540,540,540,2818,540,540,540,540,540,540,540,889,540,540,540,540,907,540,540,540,540,540,540,540,2849,540,540,0,0,561,561,561,561,561,561,561,561,561,1836,561,561,561,561,561,2857,561,561,561,561,561,561,2865,561,561,561,561,561,561,561,561,3081,561,561,561,561,561,561,561,561,561,561,561,2897,561,561,0,0,585,585,585,585,585,585,585,1467,1474,585,585,585,585,585,585,585,585,3621,0,0,0,0,0,0,540,2905,585,585,585,585,585,585,2913,585,585,585,585,585,585,585,585,585,1983,585,585,1986,585,585,585,585,585,585,585,2945,585,585,561,540,585,585,561,540,540,561,561,585,585,0,0,0,0,0,3376,0,585,3280,585,585,585,585,585,585,561,540,585,561,540,540,561,561,585,585,0,3155,0,0,585,585,585,3587,585,3589,585,585,585,561,0,0,0,0,0,0,0,2791,0,0,0,2793,0,0,0,0,0,0,0,0,3600,540,540,540,540,540,540,540,540,540,540,540,1314,540,540,540,540,3607,561,561,561,561,561,561,561,561,561,561,561,3614,585,585,585,585,585,585,2686,585,585,585,585,585,585,585,585,585,1045,585,585,585,585,585,972,561,3653,561,561,561,561,585,3657,585,585,585,585,0,0,0,0,0,0,1204,0,0,0,0,0,0,0,0,0,362,0,290,0,0,0,345,469,469,469,453,453,469,453,453,453,453,453,453,453,453,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,519,550,573,550,573,550,550,573,550,597,573,573,573,573,573,573,573,597,597,597,550,597,597,597,597,597,573,573,550,573,597,573,597,1,12290,3,78112,862,540,540,876,540,540,540,540,540,540,540,540,540,540,540,540,1315,540,540,540,585,1019,585,585,585,585,585,585,585,585,585,585,585,585,585,561,0,0,0,3498,0,0,1123,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1607,0,0,0,0,1254,0,0,0,0,0,0,0,0,0,0,0,0,2111,0,0,0,540,1341,540,540,540,540,540,1348,540,540,540,540,540,540,540,540,540,540,3333,561,561,561,561,561,585,585,585,585,1505,585,585,585,585,585,585,585,585,585,585,585,585,3365,585,585,585,585,585,1523,585,585,585,585,585,1530,585,585,585,585,585,585,585,1468,585,585,585,585,585,585,585,585,585,2378,585,585,585,585,585,585,561,585,585,585,1557,585,1079,0,1561,0,0,0,1567,0,0,0,0,0,803,0,0,0,0,0,0,0,803,0,0,0,0,540,540,540,540,540,1573,0,0,0,1579,0,0,0,0,0,0,0,0,0,0,0,749,0,0,0,0,0,0,0,1695,0,0,0,0,0,0,0,0,0,0,0,0,2127,0,0,0,540,1762,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1358,540,1843,561,561,561,561,561,561,561,561,561,1854,561,561,561,561,561,561,3239,561,561,561,561,561,561,561,561,561,3578,561,561,585,585,585,585,0,2064,2065,0,0,0,0,0,0,0,0,0,0,0,0,0,1717,0,0,0,0,0,0,2135,0,0,0,0,0,0,0,0,0,0,0,1159,0,0,0,0,2186,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1808,540,540,2213,540,540,540,540,2218,540,540,540,540,540,540,540,540,540,1754,540,540,540,540,540,540,2240,0,0,561,561,561,561,561,561,561,561,561,561,561,561,561,1401,561,561,2298,561,561,561,561,2303,561,561,561,561,561,561,561,561,561,561,3083,561,561,561,561,561,585,585,585,2388,585,585,585,585,585,585,585,585,585,585,585,585,1938,585,585,585,3034,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2210,0,0,0,3380,3176,0,0,0,0,0,0,0,0,0,0,0,1175,0,0,0,0,540,540,3404,540,561,561,561,561,561,561,561,561,561,561,561,561,2282,561,561,561,561,561,561,561,3419,561,585,585,585,585,585,585,585,585,585,585,1049,585,585,585,585,561,540,3454,540,540,540,540,540,540,540,540,540,540,561,561,561,561,3523,561,561,561,3469,561,561,561,561,561,561,561,561,561,561,585,585,585,585,3484,385,387,337,0,0,0,0,0,0,336,0,0,337,0,0,0,0,0,1097,0,0,0,0,0,0,0,0,0,0,2057,0,0,0,0,0,0,0,0,384,0,0,0,69632,73728,0,0,0,0,0,65536,0,0,0,0,1139,1140,0,0,0,0,0,362,362,0,0,0,0,0,703,0,0,0,0,0,0,0,0,0,0,2048,0,0,0,0,0,0,0,336,0,0,438,0,444,0,470,470,470,470,470,470,470,551,574,551,574,551,551,574,551,598,480,470,470,470,499,476,499,499,499,499,499,499,499,499,470,470,476,470,470,470,470,470,470,470,470,470,470,480,470,481,480,470,470,470,470,574,574,574,574,574,574,574,598,598,598,551,598,598,598,598,598,574,574,551,574,598,574,598,1,12290,3,78112,0,0,0,678,0,0,0,0,0,0,0,0,0,0,0,0,2153,0,0,0,0,0,693,0,0,0,0,0,0,362,362,362,0,0,0,0,0,0,1217,0,0,0,0,0,0,0,0,0,1220,0,0,1223,0,0,0,0,0,0,663,0,791,0,0,0,0,0,0,0,795,0,0,0,0,0,2972,0,0,0,0,0,0,0,0,0,0,2097,0,2099,0,0,0,0,0,804,0,0,0,0,0,812,0,0,0,0,706,0,0,0,0,0,0,0,0,715,0,717,0,0,0,831,0,0,0,663,834,0,791,0,0,0,0,0,840,0,0,0,0,0,2996,0,0,0,0,0,0,0,0,0,0,2429,2430,0,0,0,0,863,540,540,877,540,540,540,888,540,540,540,540,906,540,540,540,540,540,1311,540,540,540,540,540,540,540,540,540,540,540,2843,540,540,540,540,561,561,917,561,561,561,933,561,561,947,561,561,561,561,960,561,0,995,585,1076,1046,585,78112,1079,0,0,0,0,0,0,0,0,2686976,2736128,0,0,2531328,2707456,0,3190784,561,561,561,978,561,561,561,0,585,585,990,585,585,585,1006,585,585,585,585,585,2349,585,585,585,585,2354,585,585,585,585,585,585,585,2377,585,585,585,585,585,585,585,585,561,540,561,585,0,0,0,0,585,1020,585,585,585,585,1033,585,585,585,585,1051,585,585,585,561,540,585,561,3149,540,3151,561,3153,585,0,0,0,0,0,0,1660,0,0,0,0,0,0,0,0,0,1173,0,0,0,0,0,0,0,0,0,540,990,585,561,540,540,540,540,540,561,561,561,561,3067,561,561,561,561,3071,561,561,561,561,0,0,0,1215,0,0,0,0,0,0,0,0,0,0,0,0,2431,0,2433,0,1238,0,0,0,0,1270,0,0,0,0,0,0,0,540,540,540,540,3561,540,540,540,540,540,540,540,540,561,561,561,561,561,561,561,585,585,585,540,585,585,585,585,585,585,585,585,585,1491,585,585,585,585,585,585,585,585,585,585,585,1495,585,585,585,585,561,585,585,1556,585,585,1079,0,0,0,0,0,0,0,0,0,1100,0,0,0,0,0,0,1622,0,0,1625,0,1627,0,0,0,0,0,0,0,0,0,0,839,540,540,540,540,859,540,1744,540,540,540,540,540,540,540,540,1755,540,540,540,540,540,540,540,2176,540,540,2180,540,540,540,2184,540,561,561,561,1847,561,561,561,561,561,561,561,561,561,561,561,561,2294,561,561,561,0,0,2117,0,0,0,0,0,0,0,0,0,0,0,0,0,1730,0,0,0,0,0,0,2148,0,0,0,0,0,0,0,0,0,0,0,1207,0,0,0,0,0,0,0,561,561,561,561,2248,561,561,561,561,561,561,561,561,3095,3097,561,561,561,3100,561,3102,561,561,2313,561,561,561,561,561,561,561,561,561,561,0,0,0,0,0,0,585,585,2651,585,585,585,585,585,585,585,2660,585,585,585,585,585,2665,585,585,2398,585,585,585,585,585,585,585,585,585,585,561,540,2410,585,561,0,540,585,585,561,540,540,540,540,540,561,561,561,561,585,585,585,585,0,3669,540,3670,0,2436,0,0,0,0,0,0,2441,0,0,0,2444,2445,0,0,0,0,0,3010,0,0,0,0,0,0,0,0,0,0,303,304,0,0,0,0,2497,0,0,0,0,0,0,0,0,0,2506,0,0,0,0,0,0,0,69632,73728,163840,0,0,0,0,65536,0,2512,0,0,0,0,2515,0,0,0,0,0,0,0,0,0,2523,540,2536,2537,540,540,540,540,540,2542,540,2544,540,540,540,540,2548,561,2595,561,561,2598,2599,561,561,561,561,561,2604,561,2606,561,561,561,561,1863,561,561,561,561,561,561,561,561,561,561,561,2890,561,561,561,561,561,561,561,2610,561,561,561,561,561,561,561,561,2616,561,561,561,561,561,2276,561,561,2279,561,561,561,561,561,561,561,1915,561,561,26027,1920,585,585,585,585,2636,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2608,2668,585,2670,585,585,585,585,2674,585,585,585,585,585,585,585,585,585,2675,585,585,585,585,585,585,2680,585,585,585,585,585,585,585,585,2688,585,585,585,585,585,585,585,1950,585,585,585,585,1954,585,585,585,2696,585,585,585,585,2700,585,585,585,585,585,585,585,585,585,585,1494,585,585,585,585,585,561,2720,561,561,585,2722,585,585,0,0,0,0,0,0,0,0,0,2964,0,0,0,0,2770,0,0,0,2773,0,0,2776,0,0,0,0,0,0,0,0,331,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1691,0,2786,0,0,0,0,0,0,0,0,0,0,0,2795,0,0,0,0,0,3171,0,0,0,0,0,0,0,0,0,0,1245,0,0,0,0,0,540,2825,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1773,540,540,2835,540,540,540,540,540,540,540,540,540,540,540,540,540,2844,540,540,2847,540,540,2850,540,0,0,2851,561,561,561,561,561,561,1851,561,561,561,561,1855,561,561,561,561,561,2883,561,561,561,561,561,561,561,561,561,561,561,561,561,2892,561,561,2895,561,561,2898,561,0,0,2899,585,585,585,585,585,585,585,1965,585,585,585,1970,585,585,585,585,585,2931,585,585,585,585,585,585,585,585,585,585,585,585,585,2940,585,585,2943,585,585,2946,585,561,2948,585,2949,2950,540,540,561,561,561,561,1878,561,561,561,561,1884,561,561,561,561,561,561,936,561,561,561,561,561,561,561,561,561,984,0,585,585,585,585,585,585,1007,585,0,2968,2969,0,0,0,0,2974,0,0,0,0,0,0,0,0,331,0,331,331,0,0,0,0,3020,0,0,540,540,3025,540,540,540,540,540,540,540,540,540,540,540,3043,540,540,540,540,540,540,540,3050,540,540,3052,540,540,540,540,540,540,540,540,540,540,1352,540,540,540,540,540,561,561,561,3091,561,561,3093,561,561,561,561,561,561,561,561,561,2602,561,561,561,561,561,561,561,561,585,585,3106,585,585,585,585,585,585,585,585,585,585,585,1496,585,585,585,1500,585,585,585,3132,585,585,3134,585,585,585,585,585,585,585,585,585,1040,585,585,585,585,585,967,3158,0,0,0,3162,0,0,0,0,0,0,0,0,0,0,0,1222,0,0,1225,0,3190,0,0,3193,0,0,0,0,0,0,0,0,0,0,540,540,540,540,2166,540,540,540,540,540,3214,540,540,540,540,540,540,540,3219,540,540,540,540,540,540,540,2541,540,2543,540,540,540,540,540,540,540,540,2581,540,540,540,540,0,2584,0,561,561,561,3236,3237,561,561,561,561,561,3241,561,561,561,561,561,561,3250,561,561,561,561,561,561,561,561,585,585,585,585,3536,585,585,585,585,561,561,561,3247,561,561,561,561,561,561,561,561,561,561,561,585,3481,585,3483,585,585,585,585,3269,585,585,585,585,585,585,585,585,3275,585,585,585,585,585,585,2701,585,585,585,585,585,585,585,2706,585,0,0,3308,0,0,0,0,0,0,0,0,0,0,0,0,540,540,540,856,540,585,3359,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1057,561,0,0,0,0,3176,0,0,0,0,0,0,0,3386,0,0,0,0,0,1169,0,1171,0,0,0,0,1176,0,0,0,0,0,1185,0,0,0,0,0,0,0,0,0,0,669,0,0,0,0,0,585,3429,585,585,585,585,585,585,561,540,561,585,0,3437,0,0,0,0,0,3300,0,3176,3302,0,0,3305,0,0,0,0,0,0,1113,0,0,0,0,0,0,0,0,0,362,362,362,0,703,0,0,3440,0,0,0,3176,0,0,0,0,0,0,0,0,540,540,3452,540,540,540,540,3457,540,540,540,540,3462,540,540,561,561,3467,561,0,997,1037,585,1048,585,78112,1079,0,0,0,0,0,0,0,776,0,0,0,0,0,783,0,0,561,561,561,3472,561,561,561,561,3477,561,561,585,585,3482,585,585,585,585,585,585,3259,3260,585,585,585,585,3264,3265,585,585,585,585,585,585,3120,585,585,585,585,585,3126,585,585,3129,585,585,3487,585,585,585,585,3492,585,585,561,0,0,0,0,0,0,0,69632,73728,167936,0,0,0,0,65536,0,3499,0,0,0,0,0,3505,0,0,540,540,540,540,540,540,540,540,540,3397,540,540,540,540,540,540,540,540,3517,540,540,3519,561,561,561,561,561,561,561,561,3252,561,561,561,561,561,561,585,561,561,561,3530,561,561,3532,585,585,585,585,585,585,585,585,585,1042,585,585,585,585,585,969,585,585,3543,585,585,3545,561,0,0,0,0,0,0,0,0,0,1144,0,362,362,0,1147,0,540,540,3629,3630,540,540,561,561,561,3635,3636,561,561,585,585,585,585,0,2029,0,0,0,0,0,2031,0,0,3641,3642,585,585,561,0,0,0,0,0,540,540,540,540,540,540,3395,540,540,540,540,540,540,3401,561,561,585,585,0,540,561,585,0,540,561,585,3681,3682,3683,3684,339,340,341,342,343,0,0,0,0,0,0,0,0,0,0,0,1617,0,0,0,0,0,0,0,388,0,0,0,0,0,0,0,0,0,0,0,0,2469,0,2470,0,342,342,343,342,0,341,342,445,454,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,471,486,495,495,503,495,505,495,495,505,505,495,505,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,520,552,575,552,575,552,552,575,552,599,575,575,575,575,575,575,575,599,599,599,552,599,599,599,599,599,575,575,552,575,599,575,599,1,12290,3,78112,0,0,0,646,0,0,0,0,651,652,653,654,655,656,657,0,0,0,0,1144,0,0,1259,0,0,0,0,0,0,0,0,0,2957312,0,0,0,0,0,0,0,692,0,0,0,0,0,0,699,362,362,362,0,0,0,0,0,0,1232,0,0,0,0,0,0,0,0,0,735,0,800,0,0,0,0,721,0,723,0,0,0,0,0,0,0,0,0,733,0,0,0,0,0,1202,0,0,0,0,0,0,0,0,0,0,333,334,0,0,0,0,0,646,752,753,754,0,0,0,0,0,760,761,0,0,0,0,0,0,1271,0,0,0,0,0,0,540,540,540,3026,540,540,540,540,540,540,540,540,540,540,2220,540,540,540,540,540,0,761,0,0,790,0,0,0,0,0,0,0,0,0,797,0,0,0,0,1152,0,0,0,0,1157,0,0,0,0,0,0,0,2106,0,0,0,0,0,0,0,0,1219,0,0,0,0,0,0,0,723,0,692,814,0,0,0,0,761,0,0,0,0,0,0,0,558,581,558,581,558,558,581,558,605,0,754,823,824,0,0,0,0,0,0,754,0,0,828,699,0,0,0,0,1168,0,0,0,0,0,0,0,0,0,0,0,1633,0,0,0,0,0,0,833,0,0,0,835,0,0,0,692,699,0,0,692,833,0,0,0,0,0,0,0,0,0,692,540,540,853,857,860,540,868,540,540,882,884,887,540,540,540,898,902,540,540,540,540,540,540,1766,540,540,540,540,540,540,540,540,540,540,1786,540,540,540,540,540,561,561,561,923,927,930,561,938,561,561,561,953,955,958,561,561,561,561,1879,561,561,561,561,561,561,561,561,561,561,561,2641,561,561,561,561,561,561,561,561,2648,0,585,585,585,585,585,585,585,561,540,585,585,561,2717,540,540,540,585,585,585,1026,1028,1031,585,585,585,1043,1047,585,585,585,585,970,0,0,0,1060,585,1062,1063,853,540,898,902,1068,923,561,970,974,561,561,561,561,0,585,585,585,996,1e3,1003,585,1011,1073,0,996,585,1043,1047,1078,78112,1079,0,0,0,0,0,0,0,560,583,560,583,560,560,583,560,607,0,0,1199,0,0,0,0,0,0,0,0,0,1208,0,0,0,0,0,1231,0,0,0,0,1236,0,0,0,0,0,0,0,69632,73728,0,0,0,0,422,65536,0,540,1322,540,540,540,540,540,540,540,540,540,1331,540,540,1338,540,540,540,540,2228,540,540,540,540,540,540,540,540,540,540,0,0,561,2852,561,561,561,561,561,561,561,561,1422,561,561,1429,561,561,561,561,561,561,561,561,561,2879,561,561,561,561,561,561,561,1442,561,561,561,561,561,561,26027,1360,987,585,585,585,585,585,585,585,2925,585,585,585,585,585,585,585,585,561,540,561,585,3436,0,3438,0,585,1503,585,585,585,585,585,585,585,585,585,585,1513,585,585,1520,1667,0,1669,0,0,0,1671,0,748,0,0,0,0,0,0,0,650,0,0,0,0,0,0,0,0,0,282624,282624,282624,282624,282624,282624,282624,282624,282624,282624,0,0,1602,0,0,0,0,0,0,540,1738,540,540,540,540,540,540,540,2584,0,561,561,561,561,561,561,561,561,561,561,561,1839,561,561,561,1743,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2238,540,1776,540,540,1781,540,540,540,540,540,540,540,540,540,540,540,1353,540,540,540,540,0,561,1829,561,561,561,561,561,561,1835,561,561,561,561,561,561,1864,561,561,561,1868,561,561,1873,561,561,1907,561,561,561,561,561,561,561,561,561,26027,0,585,1923,585,585,585,585,585,585,3270,585,585,585,585,585,585,585,585,585,1968,585,585,585,585,585,585,585,585,585,585,1929,585,585,585,585,585,585,585,585,585,585,585,1511,585,585,585,585,585,1958,585,585,585,1962,585,585,1967,585,585,585,585,585,585,585,1469,585,585,585,585,585,585,585,585,585,2392,585,585,585,2395,585,585,0,1086,0,0,0,2034,0,1090,0,0,0,2036,0,1094,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1226,585,585,585,585,2362,585,585,585,585,585,585,585,585,585,585,585,1534,585,585,585,585,2585,0,1826,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2271,585,585,585,2710,585,585,585,561,540,585,585,561,540,540,540,540,540,540,1814,540,540,540,540,1820,540,540,540,1360,0,0,0,0,2744,0,0,0,0,0,0,0,0,0,0,0,1649,0,0,0,0,585,585,585,585,2924,585,585,585,585,585,585,585,585,585,585,585,1937,585,585,585,585,561,561,3338,561,561,561,561,561,561,561,561,561,561,561,561,561,1857,561,561,0,0,0,0,3176,0,0,0,0,0,0,3385,0,0,0,0,0,0,1628,1629,1630,0,0,0,0,0,0,0,0,1159168,362,0,0,0,0,0,0,3402,540,540,540,561,561,561,3407,561,561,561,561,3411,561,561,561,561,1391,561,561,561,561,561,561,561,561,561,561,561,1414,561,561,561,561,561,561,3417,561,561,561,585,585,585,3422,585,585,585,585,3426,585,585,585,585,585,2375,2376,585,585,585,585,585,585,585,585,585,1476,585,585,585,585,585,585,585,585,585,585,3432,585,585,585,561,540,561,585,0,0,0,0,0,0,1644,0,0,0,0,0,0,0,0,0,661,0,661,0,0,0,0,0,0,0,0,3176,0,0,0,0,3446,0,0,0,540,540,540,3392,540,540,540,540,3396,540,540,540,540,540,540,540,3039,540,540,540,540,540,3045,540,540,540,540,3455,540,540,540,3459,540,540,540,540,540,561,561,561,561,561,2626,561,561,561,561,561,561,2633,561,561,561,561,3470,561,561,561,3474,561,561,561,561,561,585,585,585,585,585,585,585,3111,585,585,585,585,585,585,3485,585,585,585,3489,585,585,585,585,585,561,0,0,0,0,0,540,540,540,540,540,540,3603,540,3604,540,540,540,561,561,585,585,0,540,561,585,3677,3678,3679,3680,0,540,561,585,585,585,585,585,1079,0,1562,0,0,0,1568,0,0,0,0,0,1256,0,0,0,0,0,0,0,0,0,0,300,300,0,0,0,0,386,0,0,0,390,386,0,0,0,0,0,0,0,0,0,0,1174,0,0,0,0,0,0,0,0,402,0,344,0,69632,73728,0,0,0,0,0,65536,0,0,0,0,1201,0,0,0,0,0,0,0,0,0,0,0,357,0,0,0,0,521,521,521,521,0,0,0,0,0,0,0,0,521,521,521,521,521,521,521,553,576,553,576,553,553,576,553,600,576,576,576,576,576,576,576,600,600,600,553,600,600,600,600,600,576,576,617,622,600,622,628,1,12290,3,78112,561,561,561,979,561,561,561,0,585,585,585,585,585,585,585,585,585,2927,585,585,585,585,585,585,0,0,0,540,1061,585,561,540,540,540,540,540,561,561,561,561,561,3238,561,561,561,561,561,561,561,561,561,561,1433,561,561,561,561,561,1107,0,0,0,0,1112,0,0,0,0,0,0,0,0,0,0,1190,0,0,0,0,0,561,561,561,1389,561,561,561,561,561,561,561,561,561,561,561,561,2308,2309,561,561,561,1403,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2296,2297,1440,561,561,561,561,561,561,561,26027,1360,987,585,585,585,585,585,585,585,2947,540,585,585,561,540,540,561,561,1574,0,0,0,1580,0,0,0,0,0,0,0,0,0,0,0,1664,0,0,0,0,1606,0,0,0,0,0,0,0,0,0,0,0,0,0,1620,0,0,0,0,1216,0,0,0,0,0,0,0,0,0,0,0,2110,0,0,0,0,561,561,561,1877,561,561,561,561,561,561,561,561,561,561,561,561,2322,0,0,0,2052,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2155,0,2116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1676,0,2241,0,0,561,561,561,561,561,561,561,561,561,561,561,561,561,2295,561,561,561,561,2274,561,561,561,561,2278,561,2280,561,561,561,561,561,561,1897,561,561,561,561,561,561,561,561,561,1397,561,561,561,561,561,561,2359,585,585,585,585,2363,585,2365,585,585,585,585,585,585,585,585,585,3123,585,3125,585,585,585,585,0,0,0,2500,0,0,0,0,0,0,0,0,0,0,0,0,2494,2495,0,0,561,2622,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2607,561,0,3021,0,540,540,540,540,540,540,540,540,540,540,540,540,540,2533,540,0,0,0,0,3176,3382,0,0,3384,0,0,0,0,0,0,0,728,0,0,0,0,0,0,0,0,1115,0,0,0,0,0,0,0,0,0,540,3391,540,540,3393,540,540,540,540,540,540,540,540,540,540,1785,540,540,540,1790,540,0,0,0,0,3176,0,3443,0,0,0,0,0,3449,540,540,540,540,540,1782,540,540,540,540,540,540,540,540,540,540,540,2832,540,540,540,540,864,540,540,540,540,540,540,540,540,540,540,540,540,540,540,912,1095,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2447,0,0,1624,0,0,0,0,0,0,0,0,0,0,0,0,0,2060,0,0,1827,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2620,345,345,347,345,0,0,345,0,345,0,0,0,0,346,0,0,0,0,0,3310,0,0,3312,0,0,0,0,0,0,540,585,585,561,540,540,540,540,540,561,561,561,561,561,561,3410,561,561,561,561,561,0,0,0,345,345,347,345,345,345,345,345,345,512,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,345,554,577,554,577,554,554,577,554,601,577,577,577,577,577,577,577,601,601,601,554,601,601,601,601,601,577,577,554,577,601,577,601,1,12290,3,78112,0,722,0,724,0,0,0,0,0,0,0,0,0,0,0,0,2508,0,0,0,0,739,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1690,0,0,0,811,0,0,810,0,0,0,0,0,755,0,0,819,0,0,0,0,1269,0,0,0,0,0,0,0,1181,540,540,540,540,540,1797,540,540,540,540,540,540,540,540,540,540,540,3464,561,561,561,561,540,540,872,540,540,540,540,890,892,540,540,903,540,540,540,540,540,540,2175,540,2177,540,540,540,540,540,540,2185,561,561,918,924,561,561,561,561,942,561,561,561,561,561,962,964,561,561,975,561,561,561,561,0,585,585,991,997,585,585,585,585,585,585,585,3271,585,585,585,585,585,585,3277,585,1015,585,585,585,585,585,1035,1037,585,585,1048,585,585,585,585,561,0,0,0,0,0,540,540,3650,3651,540,540,0,0,0,540,991,585,561,854,892,540,903,540,924,964,561,975,0,0,0,1151,0,1153,0,1155,0,0,0,0,0,0,0,0,713,0,0,0,0,0,0,0,0,1181,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1706,0,0,1198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1731,0,1212,1213,0,0,0,0,0,1218,0,0,0,0,0,0,0,0,729,0,0,0,0,0,0,0,540,540,1307,1309,540,540,540,540,540,540,540,540,540,540,540,540,1316,540,540,1319,540,540,1343,540,540,540,540,540,540,540,540,1354,1355,540,540,540,540,540,1813,540,540,540,540,540,540,540,540,540,1360,1360,914,561,561,561,1366,561,561,561,561,561,561,561,561,561,561,26027,1921,585,585,585,585,561,561,1420,561,561,561,561,561,561,561,1434,561,561,561,561,561,561,3342,561,561,561,561,561,561,561,561,561,3080,561,561,561,561,561,561,561,561,2319,561,561,561,561,0,0,0,561,561,561,1445,1446,561,561,561,26027,1360,987,585,585,585,1457,585,585,585,585,585,2403,585,585,585,585,585,561,2409,585,2411,2412,585,1487,1489,585,585,585,585,585,585,585,585,585,585,585,585,585,585,3366,585,585,585,585,1525,585,585,585,585,585,585,585,585,1536,1537,585,585,585,585,585,585,3434,585,561,540,561,585,0,0,0,3439,585,1542,0,540,585,585,561,540,1547,540,540,1550,561,1551,561,561,561,561,1895,561,561,561,1900,561,561,561,561,561,561,561,0,585,585,988,585,585,585,585,585,1554,585,1555,585,585,1558,1079,0,0,0,0,0,0,0,0,0,2069,0,0,0,0,2073,0,0,1678,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2037,0,0,0,1694,0,0,0,0,0,0,0,0,0,0,0,0,0,2072,0,0,0,1637,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2051,0,0,561,561,561,561,561,561,1833,561,561,561,561,561,561,561,561,26027,1360,987,585,585,585,585,585,561,1908,561,561,561,561,1914,561,561,561,26027,0,585,585,585,585,585,2334,585,585,585,585,585,585,585,585,585,585,2938,585,585,585,585,585,585,585,1927,585,585,585,585,585,585,585,585,585,585,585,585,585,1055,585,561,585,585,585,1994,585,585,585,585,585,585,585,585,2002,585,585,585,585,585,585,2711,561,540,585,585,561,540,540,540,540,540,540,2217,540,540,540,540,540,540,540,540,540,540,1802,540,540,540,540,540,585,2008,585,585,585,561,540,585,585,561,540,540,540,540,561,561,561,561,2261,561,561,561,561,561,561,561,561,561,561,561,2891,561,561,561,561,0,2076,0,0,0,0,0,0,0,0,2084,0,0,0,0,0,0,0,69632,73728,266240,0,0,0,0,65536,0,2088,0,0,2090,0,0,0,0,0,0,0,2098,0,0,0,0,0,0,1725,0,0,0,0,0,0,0,0,0,643,0,0,0,0,0,0,0,0,2146,0,0,0,2146,0,0,2151,2152,0,0,0,0,0,0,0,274432,274432,274432,0,274432,274432,274432,274432,274432,2156,0,0,0,0,0,0,0,2162,540,540,540,540,540,2168,540,540,540,540,2538,540,540,540,540,540,540,540,540,540,540,540,540,1821,540,540,1360,540,2200,540,2203,540,540,540,540,540,540,540,540,540,540,2209,540,540,540,540,2578,540,540,540,540,540,540,540,540,0,2584,0,0,0,0,799,0,0,0,0,0,0,0,0,0,0,0,0,799,0,0,0,0,0,0,0,0,2244,561,561,561,561,561,561,2251,561,561,561,561,561,561,3351,585,585,585,585,585,585,585,3356,585,561,561,2300,561,561,561,561,561,561,561,561,561,561,561,561,561,2323,0,0,0,2329,585,585,585,585,585,585,2336,585,585,585,585,585,585,585,1470,585,585,585,585,1480,585,585,585,585,585,2360,585,585,585,585,585,585,2366,585,2368,585,2371,585,585,585,585,585,585,3546,0,0,3549,3550,0,0,0,0,0,0,303,0,0,0,0,0,0,0,0,0,0,2912256,0,3207168,2465792,0,0,2385,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1989,2472,0,0,0,0,0,0,0,0,0,2480,0,0,0,0,0,0,0,286720,286720,0,286720,286720,1,12290,3,0,0,0,0,0,2514,0,0,0,0,0,0,0,0,0,2522,0,0,0,0,1575,0,0,0,0,0,1581,0,0,0,0,0,0,0,69632,73728,172032,0,0,0,0,65536,0,561,561,2596,561,561,561,561,561,2601,561,561,561,561,561,561,561,0,585,585,992,585,585,585,585,585,585,2681,585,585,585,585,585,585,585,585,585,585,585,585,585,585,1956,585,2719,561,561,561,2721,585,585,585,2723,2724,0,0,0,0,0,0,0,2801,0,0,0,540,2805,540,540,540,2742,0,2743,0,0,0,0,0,0,0,0,0,0,0,0,0,2100,0,0,0,0,2758,0,0,0,0,0,0,0,0,0,0,0,0,0,2128,0,0,540,2809,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2223,2224,540,2846,540,540,540,540,540,0,0,561,561,561,561,2855,561,2856,561,2894,561,561,561,561,561,0,0,585,585,585,585,2903,585,2904,585,2942,585,585,585,585,585,561,540,585,585,561,540,540,561,561,585,585,0,0,0,3374,0,0,3377,0,0,0,540,3024,540,540,540,540,540,540,540,540,540,540,540,1771,540,540,540,540,561,561,585,3105,585,585,585,585,585,585,585,585,585,585,585,585,2369,585,585,585,585,585,3145,540,585,561,540,540,561,561,585,585,0,0,0,0,0,0,2066,0,0,0,0,0,0,0,0,0,362,297,0,0,0,0,0,0,0,3390,540,540,540,540,3394,540,540,540,540,540,540,540,540,540,2179,540,540,540,540,540,540,540,3403,540,540,3405,561,561,561,561,3409,561,561,561,561,561,561,2277,561,561,561,561,561,561,561,561,561,3082,561,3084,561,561,561,561,561,561,561,3418,561,561,3420,585,585,585,585,3424,585,585,585,585,585,585,585,3591,585,561,0,0,0,0,0,0,0,3176,0,3303,0,0,0,0,3307,0,585,585,585,585,585,3433,585,585,561,540,561,585,0,0,0,0,0,0,2137,0,0,0,0,0,0,0,0,0,1129,0,0,0,0,0,0,0,3500,0,3502,0,0,0,0,0,540,540,540,540,540,3511,540,540,540,540,2812,540,2815,540,540,540,540,2820,540,540,540,2823,540,540,540,540,3631,540,561,561,561,561,561,3637,561,585,585,585,585,585,1079,0,0,0,1564,0,0,0,1570,0,585,585,3643,585,561,3645,0,3647,0,0,540,540,540,540,540,540,540,1286,540,540,540,540,540,540,540,540,540,540,3208,540,540,540,540,540,365,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2496,398,0,0,0,0,0,365,373,401,0,0,0,0,0,365,0,0,393,0,0,0,0,348,0,0,365,0,393,0,406,408,0,0,365,373,0,69632,73728,0,0,0,0,424,65536,0,0,0,0,1596,0,0,0,0,0,0,0,0,0,0,0,362,362,0,0,0,424,424,0,424,0,408,424,447,455,0,0,0,0,0,0,0,777,0,0,0,0,0,0,0,644,0,406,0,496,496,0,496,496,496,496,496,496,496,496,522,522,522,522,455,455,455,530,455,531,455,455,522,536,522,522,522,522,538,555,578,555,578,555,555,578,555,602,578,578,578,608,608,608,578,602,602,602,555,602,602,602,602,602,578,578,618,623,602,623,629,1,12290,3,78112,643,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2769,0,0,0,694,0,0,0,0,0,362,362,362,0,0,0,0,0,0,2440,0,0,0,0,0,0,0,0,0,1260,0,0,0,0,0,0,0,0,805,0,0,0,0,0,0,0,0,0,0,0,0,0,2142,2143,0,540,540,540,878,540,540,540,540,540,540,540,540,540,540,540,540,1332,540,540,540,561,561,919,561,561,561,561,561,561,948,950,561,561,561,561,561,561,3575,561,3577,561,561,561,585,585,585,585,0,0,1563,0,0,0,0,0,1569,0,585,1021,1023,585,585,585,585,585,585,585,585,585,585,585,585,561,3496,0,3497,0,0,0,0,0,540,992,585,561,540,540,540,540,540,561,561,561,561,561,3341,561,561,561,561,561,561,561,561,561,561,3579,561,585,585,585,585,0,0,0,1098,1230,0,0,0,0,0,0,1237,0,0,0,0,0,0,2452,0,0,0,0,0,0,0,0,0,2764,0,0,0,0,0,0,0,0,0,1242,0,0,0,0,0,0,0,0,0,0,1242,1251,540,540,1280,540,540,540,1284,540,540,1295,540,540,1299,540,540,540,540,540,2229,540,2231,540,540,540,540,540,540,540,0,0,561,561,561,561,561,561,561,561,561,561,561,561,1840,561,561,1360,914,561,561,561,561,561,561,1369,561,561,561,1373,561,561,1384,561,561,1388,561,561,561,561,561,561,561,561,561,561,561,561,561,2324,0,0,561,561,1405,561,561,561,1409,561,561,561,561,561,561,561,561,561,3612,3613,561,585,585,585,585,585,1460,585,585,585,1464,585,585,1475,585,585,1479,585,585,585,585,585,585,1032,585,585,585,585,585,585,585,585,561,0,0,0,0,3625,0,540,0,1623,0,0,0,0,0,0,0,0,0,0,0,0,1636,0,0,0,0,1626,0,0,0,0,0,0,0,0,0,0,0,2058,2059,0,2061,2062,1638,0,0,0,1642,0,0,0,1646,0,0,0,1650,0,0,0,0,0,1257,0,0,0,0,0,0,0,0,0,0,1145,362,362,0,0,1148,561,1844,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2635,561,561,561,561,1862,561,561,561,561,561,561,561,561,561,561,561,561,2869,561,561,2872,2007,585,585,585,585,561,1752,585,1938,1844,540,540,540,540,561,561,561,561,2275,561,561,561,561,561,561,2281,561,2283,561,2286,0,0,2056,0,0,0,0,0,0,0,0,0,0,0,0,0,2154,0,0,0,0,0,2118,0,0,0,0,0,0,0,0,0,0,0,0,2520,0,0,0,0,2132,0,0,0,0,0,0,0,0,0,2141,0,0,0,0,0,0,2463,0,0,0,0,0,0,0,0,0,2491,0,0,0,0,0,0,0,0,0,2158,0,0,2161,0,540,540,2164,540,540,540,540,540,540,540,3053,540,3055,540,540,540,540,540,540,540,540,2232,540,540,2235,2236,540,540,0,540,540,540,2227,540,540,540,540,540,540,540,540,540,540,540,0,2242,561,561,561,561,561,561,561,0,0,0,561,561,2246,561,561,561,561,561,561,561,561,561,561,26027,1360,987,585,585,1455,585,1458,561,2312,561,561,561,561,561,561,561,561,561,561,561,0,0,0,0,0,0,585,2650,585,585,585,585,585,585,561,3547,3548,0,0,0,0,0,0,3554,0,585,585,2331,585,585,585,585,585,585,585,585,585,585,585,585,2381,2382,585,585,585,585,2387,585,585,585,585,585,585,585,585,585,585,585,585,2397,540,540,2415,2416,561,561,2419,2420,585,585,2423,2424,0,1563,0,1569,0,1575,0,1581,0,0,0,0,0,0,0,0,0,0,0,0,2752,0,0,0,0,0,0,0,2438,0,0,0,0,0,0,0,0,0,0,0,1728,0,0,0,0,0,2513,0,0,0,0,0,0,0,0,0,2519,0,0,0,0,0,0,2478,0,0,0,0,0,0,0,0,0,1189,0,0,0,0,0,0,540,540,540,2565,540,540,540,540,540,540,540,540,540,540,540,540,1333,540,540,540,585,585,2682,585,585,585,585,585,585,585,585,585,585,2693,585,585,585,585,585,585,3590,585,585,561,0,3594,0,0,0,0,0,0,2516,2466,0,0,0,0,0,2521,0,0,2824,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2239,561,561,561,561,2885,561,561,561,561,561,561,561,561,561,561,561,1395,561,561,561,561,561,561,561,561,1430,561,561,561,561,561,561,561,561,2866,561,561,561,561,561,561,561,585,585,585,585,2933,585,585,585,585,585,585,585,585,585,585,585,1985,585,585,585,585,0,3177,0,0,0,3180,0,0,0,0,0,0,0,0,0,0,1601,1602,0,0,0,0,0,0,0,0,3194,0,0,0,0,0,0,3197,0,3199,540,540,540,540,880,540,885,540,891,540,894,540,540,908,540,540,540,540,540,3038,540,540,540,540,540,540,540,540,3046,540,585,3289,3290,0,0,0,0,3294,0,0,0,0,0,0,0,0,1099,0,0,0,0,0,0,0,540,540,3316,540,540,540,3319,540,540,540,540,540,540,540,540,540,540,1819,540,540,540,540,1360,561,3337,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2646,561,3415,561,561,561,561,561,585,585,585,585,585,585,585,585,585,585,585,585,585,3115,3428,585,3430,585,585,585,585,585,561,540,561,585,0,0,0,0,0,0,2503,0,0,0,0,0,0,0,0,0,362,336,290,0,0,0,0,3555,0,540,540,540,540,540,540,540,540,540,540,3566,540,540,561,3064,561,561,561,561,561,561,561,561,561,561,561,561,2617,561,561,561,561,561,3608,561,3609,561,561,561,561,561,561,561,585,585,3615,585,585,585,585,585,2658,585,585,585,585,585,585,585,585,585,585,1952,585,585,585,585,585,3616,585,585,585,585,585,585,585,561,0,0,0,0,0,0,540,585,585,561,540,540,540,1067,911,561,561,561,1072,407,353,0,0,0,0,0,69632,73728,0,0,0,0,0,65536,0,0,0,0,1658,0,0,0,0,0,0,0,0,0,0,0,362,362,1146,0,0,472,483,472,0,0,472,0,0,0,0,0,0,0,0,523,523,527,527,527,527,472,472,472,472,472,477,472,472,527,523,527,527,527,527,539,556,579,556,579,556,556,579,556,603,579,579,579,579,579,579,579,603,603,603,556,603,603,603,603,603,579,579,619,624,603,624,630,1,12290,3,78112,0,644,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2101,0,738,0,0,0,644,738,0,744,745,644,0,0,0,0,0,0,0,0,793,0,0,0,0,0,0,0,0,0,0,802,0,807,0,0,0,0,0,0,807,0,0,0,0,0,644,0,0,0,802,0,807,0,793,0,822,0,0,0,665,0,0,0,0,822,0,0,0,0,0,0,0,1134592,0,362,0,0,0,1134592,0,0,0,793,793,0,644,0,0,793,807,845,0,540,850,540,540,540,540,540,2539,540,540,540,540,540,540,540,540,540,540,540,3324,540,540,540,540,540,869,873,879,883,540,540,540,540,540,899,540,540,540,540,540,540,540,3206,540,540,540,540,540,540,540,540,540,2205,540,540,540,540,540,540,561,561,920,561,561,561,561,939,943,949,561,954,561,561,561,561,585,585,585,585,0,0,0,0,0,2728,0,0,1016,1022,585,1027,585,585,585,585,585,1044,585,585,585,585,585,1058,0,0,0,540,993,585,561,540,540,899,540,540,561,561,971,561,561,561,561,561,0,585,585,993,585,585,585,585,1012,1149,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2784,0,0,0,1200,0,0,0,0,0,0,0,0,0,0,0,1211,1227,0,0,1099,0,0,0,1233,0,1235,0,0,0,0,0,0,0,3176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1243,0,0,0,0,0,0,0,0,0,0,1249,0,0,0,0,1670,0,0,0,0,0,0,1674,0,0,0,0,0,0,743,0,0,0,0,0,0,0,0,0,0,0,0,0,2753,2754,0,1252,1200,0,1233,1255,0,1258,0,0,0,0,0,1130,0,0,0,0,0,1597,0,0,0,1600,0,0,1603,0,0,0,0,0,843,0,0,0,0,0,540,540,540,540,540,540,540,3320,540,540,540,540,540,540,540,540,540,1801,540,540,540,1806,540,540,0,1267,0,0,0,0,0,1267,0,0,1149,1267,0,1274,540,540,540,540,1282,540,540,540,1291,540,540,540,540,540,540,540,540,2204,540,540,540,540,540,540,540,540,540,2830,540,540,540,540,540,540,540,1279,540,540,540,540,1285,540,540,540,540,540,540,540,540,540,540,2194,540,540,540,540,540,540,1306,540,540,540,540,540,540,540,540,540,540,1317,540,540,540,540,540,2567,540,540,540,540,540,540,540,540,540,540,540,2545,540,540,540,540,1321,540,540,540,540,540,540,540,1327,540,540,540,1334,1336,540,540,540,540,1310,540,540,540,540,540,540,540,540,540,540,540,540,1335,540,540,540,1360,914,1362,561,561,561,561,1368,561,561,561,561,1374,561,561,561,561,1407,561,561,561,561,561,561,561,561,561,561,561,2293,561,561,561,561,561,561,1406,561,561,561,561,1411,561,561,561,561,561,561,561,561,1852,561,561,561,561,561,561,561,561,1866,561,561,561,561,561,561,561,1418,561,561,561,1425,1427,561,561,561,561,561,561,561,561,561,561,1865,561,561,561,561,561,561,561,561,1883,561,561,561,561,561,561,561,1459,585,585,585,585,1465,585,585,585,585,585,585,585,585,585,585,1533,585,585,585,585,585,1486,585,585,585,585,585,585,585,585,585,585,1497,585,585,585,585,585,585,1034,585,585,585,585,1052,585,585,585,561,1502,585,585,585,585,585,585,585,585,1509,585,585,585,1516,1518,585,585,585,585,585,2685,585,585,585,585,2689,585,585,585,2694,585,561,0,1290,1544,1470,1379,540,540,540,540,540,561,561,561,561,561,3249,561,3251,561,561,561,561,561,561,561,585,3534,585,3535,585,585,585,3539,585,0,1575,0,0,0,1581,0,0,0,0,0,0,0,0,0,0,1632,0,0,0,0,0,1592,1593,0,0,0,0,0,1599,0,0,0,0,0,0,0,0,1172,0,0,0,0,0,0,0,0,1639,0,0,0,0,0,0,0,1647,1648,0,0,0,0,0,0,0,2387968,0,0,0,0,0,0,0,0,0,2987,0,0,0,0,0,2990,0,1655,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2482,0,0,0,1721,0,0,0,0,0,0,0,1718,0,0,0,0,0,0,300,300,300,300,0,300,300,300,300,300,540,540,540,1747,540,540,540,540,1753,540,540,540,540,540,540,540,540,1817,540,540,540,540,540,540,1360,540,540,540,1764,540,540,540,540,1768,540,540,540,540,540,540,540,540,2178,540,540,540,540,540,540,540,540,1287,1294,540,540,540,540,540,540,540,540,540,1779,540,540,1783,540,540,540,540,540,540,540,540,540,540,2206,2207,540,540,540,540,1809,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1360,914,561,561,561,561,561,561,561,561,561,561,561,561,1379,561,0,1074,585,585,1050,585,78112,1079,0,0,0,0,0,0,0,1106,0,0,0,0,0,0,1210,0,561,1845,561,561,561,561,561,561,561,561,561,561,1856,561,561,561,561,1423,561,561,561,561,561,561,561,561,561,561,561,3253,561,561,561,561,585,561,1860,561,561,561,561,561,561,561,561,561,561,1871,561,561,561,561,1424,561,561,561,561,561,561,561,561,561,561,561,26027,1920,585,585,585,585,1876,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,3244,561,561,585,2026,585,585,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,286720,0,0,0,0,2079,2080,0,0,2082,2083,0,0,0,0,0,0,0,3176,0,0,0,0,0,3306,0,0,0,0,0,0,2105,0,0,0,0,2108,2109,0,0,0,0,0,0,301,301,301,301,0,301,301,301,301,301,2115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2796,0,0,0,2147,0,0,0,0,0,0,0,0,0,0,0,0,2781,0,0,0,0,0,2157,0,0,0,0,0,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,0,540,2225,540,540,540,540,2230,540,540,540,540,540,540,540,540,0,0,0,0,1696,0,0,0,0,0,0,0,0,0,0,0,2070,0,0,0,0,0,2242,0,561,561,561,561,561,561,561,561,561,561,561,561,561,2618,561,561,561,561,561,2259,561,561,2263,561,561,561,2267,561,561,561,561,561,561,3610,561,3611,561,561,561,585,585,585,585,0,0,0,2030,0,1082,0,0,0,2032,585,2344,585,585,2348,585,585,585,2352,585,585,585,585,585,585,585,1528,585,585,585,585,585,585,1538,585,585,585,585,2361,585,585,2364,585,585,585,585,585,585,585,585,585,1935,1936,585,585,585,585,1943,585,585,2400,585,585,585,585,585,585,585,585,561,540,585,585,561,540,2718,540,540,0,0,0,2437,0,0,0,0,0,0,0,0,0,0,0,0,2794,0,0,0,0,2473,0,0,0,2477,0,0,0,0,0,0,0,0,0,0,1685,0,0,0,0,0,0,0,0,0,2501,0,0,0,0,0,0,0,0,0,0,2511,0,540,540,2525,540,540,540,540,540,540,540,540,540,2532,540,540,540,540,1324,540,540,540,540,540,540,540,540,540,540,540,1330,540,540,540,540,540,540,2550,540,540,2552,540,2553,540,540,540,540,540,540,540,540,540,2193,540,540,2196,540,540,540,540,2563,540,540,540,540,540,540,540,540,540,540,540,540,2574,540,540,540,540,2827,2828,540,540,540,540,2831,540,540,540,540,540,540,540,1751,540,540,540,540,540,540,540,540,540,1351,540,540,540,540,540,540,0,0,0,561,561,2587,561,561,561,561,561,561,561,561,561,561,2264,561,561,561,561,2269,561,561,561,2594,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,2871,561,561,2609,561,561,561,2612,561,561,2614,561,2615,561,561,561,561,561,929,561,937,561,561,561,561,561,561,561,561,2629,561,561,561,561,561,561,561,561,561,561,2623,561,561,2627,561,561,561,561,561,561,561,561,561,2290,2291,561,561,561,561,561,561,561,0,2327,585,585,585,585,585,585,585,1507,585,585,585,585,585,585,585,585,561,540,585,561,3284,540,3286,561,561,561,561,2638,561,561,561,561,561,561,561,561,561,561,561,561,3099,561,561,561,0,0,2733,2734,0,0,0,0,0,0,0,0,0,0,0,0,3002,0,0,0,2785,0,2787,0,0,0,0,0,0,0,0,0,0,0,0,0,2432,0,0,0,0,0,0,2800,0,0,0,0,0,0,540,540,540,540,540,540,540,3217,540,540,540,540,540,540,540,540,540,540,3042,540,3044,540,540,540,540,540,540,2848,540,540,540,0,0,561,561,561,561,561,561,561,2318,561,561,561,561,561,0,0,0,561,561,2859,561,2862,561,561,561,561,2867,561,561,561,2870,561,561,561,561,2302,561,561,561,561,561,561,561,561,561,561,561,940,561,561,561,561,561,561,561,561,1394,561,561,561,561,561,561,561,1402,561,561,561,2896,561,561,561,0,0,585,585,585,585,585,585,585,1529,585,585,585,585,585,585,585,585,2661,585,585,585,585,585,585,585,585,585,2907,585,2910,585,585,585,585,2915,585,585,585,2918,585,585,585,585,585,1527,585,585,585,585,585,585,585,585,585,585,2367,585,585,585,585,585,585,585,585,2944,585,585,585,561,540,585,585,561,540,540,561,561,585,585,3373,0,0,0,3375,0,0,2980,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2979,2991,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3005,0,3006,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2989,0,561,561,561,561,3078,561,561,561,561,561,561,561,561,3086,561,561,561,561,2315,561,561,561,561,561,561,561,561,0,0,2327,0,0,0,585,585,585,585,585,585,585,585,585,3273,585,585,585,585,585,585,561,561,585,585,585,3107,585,585,585,585,585,585,585,585,585,585,1969,585,585,585,585,585,585,585,585,585,3119,585,585,585,585,585,585,585,585,3127,585,585,585,585,585,1901,540,585,585,561,540,540,540,540,561,561,3065,561,561,561,561,561,561,561,561,561,561,561,3479,585,585,585,585,585,0,3159,0,0,0,0,0,0,0,3165,0,0,0,0,0,0,0,3176,0,0,3304,0,0,0,0,0,0,3191,0,0,0,0,0,0,3195,3196,0,0,0,0,540,540,3601,540,3602,540,540,540,540,540,540,540,540,1752,540,540,540,540,540,540,540,540,1349,540,540,540,540,540,540,540,540,1288,540,540,540,540,540,540,540,540,1289,540,540,540,540,540,540,540,540,1290,540,540,540,540,1300,540,540,3279,585,585,585,585,585,585,585,561,540,585,561,540,540,561,561,561,561,2611,561,561,561,561,561,561,561,561,561,561,561,2304,561,561,561,561,561,561,561,561,561,1853,561,561,561,561,561,561,540,540,540,540,3317,540,540,540,3321,540,540,540,540,540,540,540,540,2192,540,540,540,540,540,540,2198,561,561,561,3339,561,561,561,561,561,561,561,561,561,561,561,561,2628,561,561,561,561,561,561,561,561,2305,561,561,561,561,561,561,561,561,561,3348,561,561,561,585,585,585,585,585,3353,585,585,585,3357,561,561,3572,561,561,561,561,561,561,561,561,3580,585,585,585,3584,3597,0,3598,3599,540,540,540,540,540,540,540,540,540,3605,3606,540,540,540,540,2837,540,540,540,540,540,540,540,540,540,540,540,1803,540,540,540,540,585,585,585,585,585,3619,3620,585,561,0,0,3623,0,0,0,540,585,585,561,540,540,895,540,540,561,561,967,561,561,3671,585,3672,0,540,561,585,0,540,561,585,0,540,561,585,585,585,585,585,1079,1559,0,0,0,1565,0,0,0,1571,2033,0,0,0,0,1577,2035,0,0,0,0,0,0,0,1682,0,1684,0,0,0,0,0,0,0,1712,0,0,1715,0,0,0,0,0,355,356,0,0,0,0,0,0,0,362,0,290,0,0,0,0,0,0,2762,0,0,0,0,0,0,0,2768,0,0,0,0,389,0,0,0,0,0,0,0,0,0,0,0,0,3198,0,540,540,473,473,487,0,0,487,356,356,356,509,356,356,356,356,473,473,580,580,580,580,580,580,580,604,604,604,557,604,604,604,604,604,580,580,557,580,604,580,604,1,12290,3,78112,540,870,540,540,540,540,540,540,540,540,540,904,540,540,540,540,540,540,2191,540,540,540,540,2195,540,2197,540,540,561,561,976,561,561,561,561,0,585,585,585,585,585,585,585,1013,1197,0,0,0,0,0,0,0,1197,0,0,0,0,0,0,0,0,0,0,0,0,540,540,540,540,540,540,540,540,1360,914,561,561,561,561,561,561,561,561,1371,561,561,561,1380,561,561,561,561,2639,561,561,561,561,561,561,561,561,561,561,561,2644,561,561,561,561,585,585,585,1462,585,585,585,1471,585,585,585,585,585,585,585,585,1472,585,1477,585,585,1481,585,585,1541,561,0,1291,585,1471,1380,540,540,540,540,540,561,561,561,561,585,585,585,585,0,0,0,0,2727,0,0,0,0,0,1576,0,0,0,1582,0,0,0,0,0,0,0,0,0,2737,0,0,0,0,0,2741,0,1607,0,0,0,0,0,0,0,1615,1616,0,0,0,0,0,0,303,204800,204800,0,205103,204800,1,12290,3,0,1761,540,540,540,540,540,540,540,540,540,540,540,540,540,540,1774,1891,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,3087,561,561,561,561,1911,561,561,561,561,561,561,26027,0,585,585,585,585,585,585,1466,585,585,585,585,585,585,585,585,585,585,2928,585,585,585,585,585,585,585,585,585,1947,585,585,585,585,585,585,585,585,585,585,585,2001,585,585,585,585,585,585,585,1960,585,585,585,585,585,585,585,585,585,585,585,1973,0,0,2243,561,561,561,561,561,561,561,561,561,561,561,561,561,2634,561,561,2328,585,585,585,585,585,585,585,585,585,585,585,585,585,585,585,2384,0,0,0,0,2425,0,0,0,0,0,0,0,0,0,0,0,2085,2086,0,0,0,0,2449,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3175,0,0,0,0,561,561,561,561,561,561,2590,561,561,561,561,561,561,2289,561,561,561,561,561,561,561,561,561,2292,561,561,561,561,561,561,561,561,561,2861,561,2863,561,561,561,561,561,561,561,561,561,561,2877,561,561,561,561,561,561,561,561,1899,561,561,561,561,561,1905,561,585,585,585,2909,585,2911,585,585,585,585,585,585,585,585,585,585,1984,585,585,585,585,585,585,585,3360,585,585,585,585,585,585,585,585,585,585,585,585,585,1056,585,561,0,3556,540,540,540,540,540,540,540,540,540,540,540,3567,540,561,561,561,561,2876,561,561,561,561,561,561,561,561,561,561,561,26027,0,585,585,585,585,561,561,561,561,3656,561,585,585,585,585,3660,585,0,0,0,0,0,0,2775,0,0,0,0,0,0,0,0,0,2124,0,0,0,0,0,0,0,0,357,0,0,0,0,0,0,362,0,290,0,0,0,0,0,0,2790,0,0,0,0,0,0,0,0,0,0,1147354,0,0,0,0,0,0,0,357,0,0,0,0,0,0,0,0,0,0,0,0,0,2509,0,0,357,0,367,0,0,367,0,0,0,0,0,0,0,0,0,0,0,0,0,2457,0,0,581,581,581,581,581,581,581,605,605,605,558,605,605,605,605,605,581,581,558,581,605,581,605,1,12290,3,78112,865,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2575,1385,561,561,561,561,561,561,561,561,561,561,561,561,561,561,561,3243,561,1775,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,3047,585,585,585,585,1961,585,585,585,585,585,585,585,585,585,585,585,2380,585,585,585,585,2756,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3315,0,2981,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3188,0,3298,0,3299,0,0,0,0,3176,0,0,0,0,0,0,0,0,0,3388,0,0,0,0,358,359,360,361,0,0,362,0,290,0,0,0,0,0,0,2973,0,0,0,0,0,0,0,0,0,362,362,362,702,0,0,0,0,359,0,358,0,0,0,69632,73728,0,0,0,0,425,65536,0,0,0,0,1710,1711,0,0,0,1714,0,0,0,0,0,1718,425,425,0,425,0,359,425,0,456,0,0,0,0,0,0,0,1102,0,0,0,0,1263,1264,0,0,0,0,0,497,497,0,504,504,504,504,510,511,504,504,524,524,524,524,456,456,456,456,456,456,456,456,524,524,524,524,524,524,524,559,582,559,582,559,559,582,559,606,582,582,582,582,582,582,582,606,606,606,559,606,606,606,606,606,582,582,620,625,606,625,631,1,12290,3,78112,0,0,0,540,585,585,561,540,540,900,540,540,561,561,972,561,561,561,561,561,0,585,585,585,585,585,585,585,585,1934,585,585,585,585,585,585,585,0,0,2104,0,0,0,0,0,0,0,0,0,0,0,0,0,2740,0,0,0,0,0,561,2245,561,561,561,561,561,561,561,561,561,561,561,3533,585,585,585,585,585,585,585,585,585,3494,561,0,0,0,0,0,0,585,2330,585,585,585,585,585,585,585,585,585,585,585,585,585,1482,585,585,540,2549,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2237,0,540,540,2577,540,540,540,540,540,540,540,540,540,540,0,0,0,0,0,1611,0,0,1614,0,0,0,0,0,0,0,443,0,0,0,0,0,0,0,0,0,2891776,0,0,0,0,0,2392064,583,583,583,583,583,583,583,607,607,607,560,607,607,607,607,607,583,583,560,583,607,583,607,1,12290,3,78112,705,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155648,866,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,3224,1136,0,0,0,0,0,0,0,0,0,0,362,362,0,0,0,0,0,1659,0,0,0,0,0,0,0,0,0,0,780,0,0,0,0,786,561,585,585,585,585,585,1079,1560,0,0,0,1566,0,0,0,1572,0,0,0,1578,0,0,0,0,0,0,0,0,0,0,0,0,3313,0,0,540,2199,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2547,540,2535,540,540,540,540,540,540,540,540,540,540,540,540,540,540,540,2822,540,561,561,561,2597,561,561,561,561,561,561,561,561,561,561,561,561,2317,561,561,2320,2321,561,561,0,0,0,0,0,0,647,0,0,0,0,0,0,743,540,540,540,540,540,540,540,3331,540,540,561,561,561,561,561,561,561,561,561,561,3072,561,561,561,0,0,0,540,585,585,561,1064,540,540,905,540,1069,561,561,977,561,561,561,561,0,585,585,585,585,585,585,585,585,1951,585,585,585,585,585,585,585,0,0,1594,0,0,0,0,0,0,0,0,0,0,0,0,0,2767,0,0,561,561,1846,561,561,561,561,561,561,561,561,561,561,561,561,561,2645,561,561,585,585,585,1977,585,585,585,585,585,585,585,585,585,585,585,585,2692,585,585,585,540,540,540,2188,540,2190,540,540,540,540,540,540,540,540,540,540,561,561,561,3334,561,561,0,0,0,561,561,561,2247,561,561,561,561,561,561,561,561,561,2613,561,561,561,561,561,561,561,2619,561,561,2273,561,561,561,561,561,561,561,561,561,561,561,561,561,561,3242,561,561,0,585,585,585,2332,585,585,585,585,585,585,585,585,585,585,585,2408,540,585,585,561,561,2647,0,0,0,0,0,0,585,585,585,585,585,585,585,585,2687,585,585,2691,585,585,585,585,585,585,585,585,2684,585,585,585,585,585,585,585,585,585,585,585,2916,585,585,585,585,561,561,585,585,585,585,585,3109,585,585,585,585,585,585,585,585,2702,585,585,585,585,585,585,585,0,1134592,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225706,0,0,1134592,0,0,0,1134592,1134592,0,0,1134592,0,0,1134592,0,1134592,0,0,0,1134592,1135005,1135005,0,0,0,0,0,1135005,0,1134592,1134592,0,0,0,0,1135202,1135202,1135202,1135202,1134592,1135202,1135202,1135202,1135202,1135202,0,1134592,1134592,1134592,1134592,1135202,1134592,1135202,1,12290,3,0,0,0,0,2134016,0,0,0,0,0,0,0,0,1138688,0,0,0,0,0,1670,0,0,0,0,0,0,0,0,0,0,0,2125824,2126738,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,0,2125824,2125824,2125824,2125824,2424832,2433024,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,0,987,2125824,2125824,2125824,2125824,2424832,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,1147354,457,457,1147354,457,457,457,457,457,457,457,457,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,1147405,0,0,0,0,0,0,0,0,0,2792,0,0,0,0,0,0,457,0,0,0,1147354,1147354,1147354,1147405,1147405,1147354,1147405,1147405,1,12290,3,0,0,0,0,2042,0,0,2045,2046,0,0,0,2050,0,0,0,0,0,680,0,0,0,0,0,0,0,0,0,0,1221,0,0,0,0,0,0,1142784,0,2179072,2125824,2125824,2125824,2179072,2179072,2179072,2179072,2179072,2125824,2125824,2125824,2125824,2125824,2125824,2125824,3137536,2125824,2940928,2940928,2940928,0,0,0,0,0,0,305,440,448,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,1159168,0,0,1159168,0,1159168,1159168,0,1159168,0,1159168,1159168,1159168,1159168,1159168,1159168,1159168,0,0,0,0,0,0,0,0,0,2802,0,540,540,540,540,540,1159168,1159168,0,1159168,1159168,0,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,0,1159168,1159168,0,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1159168,1,12290,3,0,0,0,0,2053,0,2054,0,0,0,0,0,0,0,0,0,799,0,799,0,0,0,0,0,0,0,2134016,0,0,0,0,0,0,0,0,0,1163264,0,0,0,0,0,155648,155648,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,913,2125824,2125824,2125824,2125824,2424832,2433024,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2125824,0,0,1452,2125824,2125824,2125824,2125824,2424832,106496,0,106496,106496,0,106496,106496,106496,106496,106496,106496,106496,106496,106496,106496,106496,106496,106496,106496,106496,106496,0,0,106496,0,106496,106496,106496,106496,106496,106496,106496,106496,0,0,0,0,0,0,0,0,0,0,2183168,0,0,0,0,0,0,0,0,2134016,0,0,0,0,0,0,0,0,0,0,0,0,0,2782,2783,0,0,0,0,3117056,0,0,0,0,0,0,0,0,0,0,0,0,163840,0,0,0,0,3043328,0,3149824,2936832,0,2760704,0,0,0,0,0,2953216,0,0,2826240,2875392,0,0,0,0,0,0,2834432,0,3227648,2568192,0,0,0,0,2564096,0,2748416,2879488,0,0,0,0,0,0,0,0,0,0,2179072,2179072,2179072,3137536,2125824,2125824,2498560,2125824,2125824,2125824,2555904,2564096,2125824,2125824,2125824,2125824,2125824,2125824,2125824,2654208,2678784,2760704,2764800,2785280,2854912,2969600,2125824,3006464,2125824,3018752,2125824,2125824],r.EXPECTED=[260,268,276,283,296,304,881,312,318,331,366,339,350,361,369,342,288,886,1555,1545,377,384,1551,392,400,415,423,431,439,447,455,463,486,553,490,500,500,499,498,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,353,1871,509,517,525,1149,688,533,1759,407,548,949,561,323,569,1480,1303,866,577,1034,592,596,1439,1444,604,1857,628,636,644,1919,1049,652,673,660,668,681,696,995,710,718,731,1324,739,761,1116,776,784,792,1170,1200,1204,807,843,851,859,894,902,910,723,918,926,934,942,753,957,1568,965,980,611,988,1738,1003,1011,616,1185,1827,871,1539,1029,1042,1418,584,1424,972,1057,1065,1073,1598,1087,1095,1103,1111,1134,1142,768,478,1163,1289,620,1155,1178,876,1620,1643,1193,702,1812,799,1789,1212,1753,1218,1226,1234,1242,500,1250,1258,828,1266,1274,1282,1297,1850,1311,1319,1332,1079,540,1345,1017,1337,1359,1021,1367,1375,1390,1398,1403,1411,1432,1452,1460,1468,1476,1488,1496,1382,1516,1524,1532,1563,1576,746,1584,1592,1502,1606,1614,814,1628,1636,469,821,1661,1665,1673,1678,1686,1694,1702,1710,1718,501,1726,1734,1746,1767,1775,1783,1351,1126,1797,1805,1121,835,1820,474,1835,1843,1865,1508,1879,1649,1653,1887,1892,1900,1908,1916,500,500,1927,1975,1928,1939,1939,1939,1934,1938,1939,1930,1943,1950,1946,1954,1958,1961,1964,1968,1972,1979,2007,2007,2007,3094,2007,1983,3521,2007,2812,2007,2007,2007,2007,2779,2007,2007,2132,2007,4152,3820,3824,1987,2098,1994,2e3,2006,2007,2007,3996,2007,2007,2012,4079,3820,3824,3824,3824,3824,2019,2097,2097,2026,2170,2032,2007,2007,2007,2007,2919,2007,2428,3887,2007,3734,2038,2089,2007,2007,2007,3390,3824,3824,2045,2097,2097,2097,2097,2097,2099,1996,2067,2059,2063,2003,2007,2007,2007,2007,2007,2259,3005,2007,3049,2007,2007,2007,3818,3820,3820,3820,3820,2133,3824,3824,3824,3824,3824,2055,3820,2139,3824,3824,3824,3827,2097,2097,2022,2072,2007,2007,4080,2007,2162,2077,2007,2007,2779,3400,3820,3820,2053,3824,3825,2097,2097,2084,2072,2088,4151,2385,2007,2007,2007,2007,3112,2752,3820,2052,3824,2095,2097,2104,2778,2050,3823,2095,2115,2129,3821,3826,1989,3390,3822,3827,1990,2137,2141,2149,3819,2141,2159,2167,2048,2174,2028,2181,2184,2188,2192,2202,2202,2193,2197,2201,2203,2207,2211,2215,2219,2222,2226,2230,2234,2238,2732,2242,2007,2007,2737,2247,2007,2007,2007,3028,4134,2007,2007,2007,3213,2007,2007,2007,2007,2702,3310,2007,3694,2243,2007,4531,2253,2007,2007,2007,2007,2007,4488,2007,2007,2007,4489,2007,2007,2007,2007,2007,2007,2007,2007,4297,2280,2282,2286,2289,2293,2297,2301,2662,2386,2007,2007,2007,2007,2387,2307,2314,2318,4376,4208,2325,2681,3075,3584,2645,2353,2359,2620,2007,2007,2381,2363,2007,2007,3675,2007,3534,4411,3291,4070,3348,2391,2007,2395,2399,2007,2007,2007,2007,3092,3298,2007,2007,2402,2007,2007,2007,3382,2007,2007,2418,3423,2432,2007,2007,2007,2007,2797,2433,2797,2457,2007,2007,2007,2007,2463,2007,2007,3716,3131,2917,2007,2007,3777,4457,4344,2470,2007,2007,2007,2477,2007,2007,2007,2484,2007,2107,3702,2007,3700,2493,2007,2111,2007,2007,3723,3037,2007,2007,2007,2090,3072,2007,2007,2007,2007,2261,3346,2007,2007,2500,2007,2505,4255,4115,4254,2007,4238,2510,4117,3651,3491,2511,4118,4239,4255,3650,4117,2516,4116,4117,3593,3670,3596,2528,2531,2535,2538,2542,2007,3509,2620,4365,4173,2562,2566,2570,2007,2674,2672,3782,2574,2007,3457,2579,2007,2501,2007,4424,3255,2555,2588,4214,4424,4450,2584,2592,2599,3102,4176,2007,2007,3778,2008,2342,4482,2348,4126,4353,2007,2007,2007,2721,2607,2007,2007,2007,3379,2007,2007,2007,3480,2619,2007,4362,2007,4150,4231,2625,4223,2632,2636,2007,4444,2654,2007,2007,2007,2007,3897,2007,2007,4225,2675,2642,2007,2007,2007,2007,4443,2653,4024,2007,4424,4341,2118,4304,2679,2007,2007,3794,2734,2268,4056,2403,2007,2007,3896,2007,2655,2910,4541,3011,2685,2775,2007,2007,2007,3576,2686,2007,2007,4010,3290,2007,2007,3151,3295,3238,2007,2697,2007,3451,2403,4245,2586,4285,2701,3577,2715,2007,2007,2007,3620,2706,2007,2007,2007,2007,2713,2775,2007,2007,4082,3399,2007,2007,4082,3399,2741,2769,2855,2774,2007,3410,2751,2007,2007,4104,2007,2007,2007,2007,2506,4140,4109,4114,3788,2803,4147,2007,2007,4385,3699,2007,3534,4411,2007,2041,4469,4448,2007,2007,2007,2709,3410,2751,2702,2784,3450,4048,2121,2770,3436,2007,3434,3438,2007,2791,2007,2795,2801,2328,2810,2787,2452,2816,2453,2007,2443,2450,2424,2465,2007,2007,2007,2007,3098,2007,2007,2007,2007,3372,2007,2007,2007,2007,3389,3820,3820,3820,2163,3824,3824,3824,3824,4039,2821,2787,2832,2786,3985,2838,2843,4030,3312,2839,2844,4031,4431,2848,2834,2852,2859,2860,2177,2864,3301,4460,4463,2871,4547,2875,2879,2883,2886,2890,2894,2897,2899,2900,2007,2007,2904,2007,3808,2910,4541,3081,2914,2007,2007,2924,2928,2937,2944,2952,2961,2968,3274,2970,2007,2473,2408,2007,2007,2007,2007,2414,3024,2007,2495,2976,2980,4495,4081,2986,2999,2007,2007,2007,2007,2007,3335,2007,2489,2007,3285,2007,3286,2007,3109,2656,3009,3015,3021,3139,2007,4251,2344,3032,2007,2007,2007,2007,3722,3036,2007,2612,2007,2007,3782,2574,2007,3508,4541,3046,3053,2702,3058,2007,2007,3062,3067,2007,2007,2007,2007,3063,2007,2007,2007,3691,2007,2007,2007,2007,2338,3741,2007,2007,3119,2007,2007,2007,3125,2007,2007,2007,2550,4047,2007,2007,2920,3125,2007,2007,3428,4501,2355,3026,2007,2615,2654,4143,3807,3464,2520,2524,3111,2918,2007,3114,3109,3780,3113,3150,3110,3781,3147,4236,3779,2920,3137,2919,2920,3489,4183,3144,3155,2155,2007,2007,2007,4522,3741,2007,3667,2007,3121,3163,3167,3171,3175,3179,3183,3187,3191,2007,2007,2817,3354,2007,2765,3195,3974,3201,3218,4237,3222,3226,3236,4136,3242,3713,3038,3248,3246,2007,2007,2007,2575,2690,2007,2007,2007,2007,4428,2007,2007,2007,2249,4402,4409,2007,2007,3231,3253,2007,2765,3195,3974,3259,3475,4398,3265,3269,3278,2007,2007,3282,2007,2647,2638,3815,3004,2336,2007,2007,2007,3352,2007,2765,3195,2780,3316,2068,3260,3320,3417,3327,3333,2007,2719,3457,2007,2725,2730,2741,4471,3360,3364,3407,2007,2007,2007,3368,2007,2736,3608,3079,3085,3140,2702,4437,3054,3399,2007,2007,2007,4081,3398,2007,2745,2007,2007,3576,2749,2007,2007,2719,2756,2763,3971,3448,2007,2007,3455,2007,2007,3455,2007,2255,2007,3975,3472,3484,2007,3497,2971,3449,2972,2007,3503,3273,4555,4530,4554,3513,4094,4553,3271,4553,4095,4554,3272,4093,4528,3271,3515,4528,4529,2007,4379,2620,3519,2007,3525,4151,3529,3538,3542,3546,3550,3554,3558,3562,3566,2828,3729,2918,2410,4192,3571,3230,4556,3575,3581,3356,3619,3590,2007,2007,4378,3676,2007,3534,4488,2007,2948,3600,2007,2867,3355,2007,2007,2007,2007,3339,4185,3612,2007,2007,2580,3618,2007,2007,2549,2551,2386,2007,2007,3132,3630,2007,2007,2608,3641,2007,3647,4412,2007,3655,3866,3249,3663,2007,2007,2007,2660,2007,2007,2666,2007,4405,2007,2007,2007,2007,2337,3687,2007,2594,3230,4081,3698,2007,2805,3682,2007,2007,2007,3686,2007,2007,2824,2007,2007,2007,2007,2826,4487,2995,2957,2349,3606,2007,2007,3706,2007,4081,3710,2007,2595,2007,3720,4485,2946,3727,3068,3733,2007,3738,2620,2007,2940,2777,3753,3945,3949,3954,3868,2007,3747,2620,2007,2007,3747,2620,3751,2378,2034,3757,3764,3636,2007,4288,2007,2007,4288,3428,3769,2466,2015,3765,3773,2007,3786,2007,3127,2007,2954,2007,2007,3775,2007,2007,3775,2007,2007,2956,2007,2548,2459,2007,3792,3751,3798,3760,3637,2602,2007,3149,4508,2110,2488,2007,3701,2494,2007,2007,4046,2007,3780,2603,2007,3802,3806,3812,3837,4356,3836,3831,2331,3835,3677,3841,2332,3836,3678,4221,3854,3848,4359,3847,3845,3852,3877,3863,3874,3881,3884,2007,2007,2007,2007,2480,2437,2007,2007,2964,2776,2007,3893,3901,3905,3909,3913,3917,3921,3925,3929,3933,3937,2007,2007,2982,4068,4074,4253,2007,2007,3212,4493,2007,2007,2007,2248,3959,3964,3968,4202,3979,3983,3989,3950,2007,4e3,4007,4014,2007,2007,2963,2421,3753,4019,4023,2040,3626,4028,4035,2007,3229,3106,3743,3026,2726,2007,2007,2007,4080,2007,4152,3820,3820,2054,3824,3824,2096,2097,2097,2097,2097,2100,2143,4043,2007,2007,3205,3209,2007,2007,2007,2990,2994,2007,2007,2248,3207,2007,2007,2007,3197,4052,2310,4253,4060,2669,2007,4114,2007,2007,2007,2628,3210,2007,2007,2007,2506,4064,2007,2007,3232,3254,3975,2007,4119,3159,2962,4078,3753,4086,2404,2007,4090,2620,4114,2007,2007,2007,4099,2620,2007,2007,3376,2007,2007,2007,2007,2933,4100,4108,4113,2007,2439,4123,3603,4423,2007,3870,3133,2007,2007,2007,4130,2007,3386,2068,4158,3394,3506,2007,2007,2007,4526,2007,2007,2007,4526,2007,3992,2370,4535,4156,2920,2007,2007,4162,2007,2007,2007,4162,2558,2007,4166,4170,2007,4180,2007,2007,4189,2007,2007,4196,4200,4206,4212,3859,4218,2007,2693,2007,2007,4229,2007,3586,2152,2145,4235,3487,2007,4243,3642,2775,3643,4249,4440,2806,3659,4259,4264,3657,3857,3940,2080,3658,3858,3941,4274,3939,3857,4278,3856,3857,4282,3017,4292,4293,4270,2321,4301,4003,4311,4315,4319,4323,4327,4330,4334,4338,2007,2007,2007,2007,2621,3230,3492,3042,4267,3478,2931,3955,4350,4514,4396,3306,3462,3468,3444,2007,4516,2007,2007,2446,2007,2007,2007,2759,2375,3002,4369,4307,2007,4015,2007,2546,2544,4373,4383,2007,2007,2007,4389,3478,2931,2068,3670,3532,4437,2007,4393,2007,2007,3427,3432,2303,3443,3422,2007,2007,4416,4081,2007,2091,3671,3422,3203,4420,2007,2007,2007,2007,2007,3342,2007,3388,3404,3414,3421,2007,2254,3381,3994,2931,4346,4454,4260,3567,3304,2007,3439,3100,2007,2007,2007,2007,3089,2007,4467,2007,2007,2007,2007,2007,3214,2124,2007,2007,4475,2365,3889,3499,2007,3616,2007,2007,2007,2337,3624,2007,2906,2007,3329,3633,2007,2499,3960,4434,2007,2007,2007,2007,4479,2007,2007,3493,2265,2007,2272,3323,2276,4499,2125,2007,4505,2367,4512,2007,4520,2512,2007,2007,3211,4539,2007,3211,4539,2073,4037,4454,2007,2007,2007,4545,2007,2649,2007,2007,4551,3115,4157,3422,2007,2369,2007,2370,2007,2371,3261,2007,2007,2007,2007,2007,2007,2007,3458,2007,2007,2080,4576,4599,4601,4601,4596,4590,4601,4601,5213,4588,4600,4601,4601,4601,4601,4601,4601,4605,4601,4601,4624,4632,4592,4611,4609,4615,4626,4639,4641,4646,4628,4651,4653,4653,4647,4635,4657,4642,4661,4665,4669,4673,4676,4680,4682,4686,4690,4560,6008,4569,4572,6007,4694,4697,4751,6953,4752,5681,6931,4707,6326,4735,4735,4712,4752,4752,5273,4792,6322,4707,4735,5096,4719,4736,5094,5098,4748,4748,4750,4752,4752,4752,4752,4564,5125,5113,4729,5190,6233,4752,5981,4707,4707,4734,4735,4711,4791,6324,5279,4792,6322,4707,4735,6320,4748,4749,4752,4752,4582,6339,6230,4730,5190,4752,4752,4752,6892,4707,4707,6327,4735,4714,6320,6322,6322,6322,6324,4707,4707,4707,4710,4735,4793,4788,6324,4709,4765,5096,5096,4748,4752,4752,4752,4758,4721,4752,4752,4752,4777,4792,4788,4709,4752,4561,4752,5750,4735,4735,4794,6324,4752,5743,4752,4752,4752,4757,4752,4707,4709,4735,4735,4735,4735,4711,4791,6322,4792,5276,4722,4752,4563,5399,6420,4752,6238,5201,5242,4735,4735,4785,4752,4563,5663,4752,4563,6254,5386,5386,5386,4752,4752,4752,5746,4752,6321,6322,6322,6322,6323,6320,6322,6322,6323,4707,4707,4707,4735,4752,4752,4584,5193,4735,4735,4713,4752,4563,6913,6240,6240,6240,6929,4735,4735,4714,5739,6322,6322,6322,6325,6322,6324,4707,4710,4740,5096,5097,4707,4709,4735,4752,4698,4752,6653,4709,5467,5467,5467,4752,5513,5517,5483,4804,4818,4798,4802,4844,4844,4844,4808,4815,4812,4828,4832,4842,4844,4844,4844,4844,4845,4838,4926,4844,4852,4850,4913,4853,4857,4861,4865,4835,4869,4872,4879,4876,4881,4883,4887,4889,4891,4893,4900,4900,4897,4907,4910,4923,4846,4916,4919,4930,4933,4935,4939,4903,4943,4752,4752,4752,4948,4715,4752,4752,4752,4977,6877,4954,4752,4752,4752,4978,6115,4759,4759,4752,4752,4753,6060,5603,6128,4975,4752,4714,4752,6620,4752,6554,6723,6126,4984,5424,5283,4988,4992,4993,4993,4993,4997,5e3,5002,5006,5009,5013,5017,5017,5019,5023,5024,5028,5030,5034,5038,5037,5042,5046,4752,4752,4760,5740,4752,5065,4752,5423,4752,4725,4724,4723,4565,5750,4752,5657,4752,5671,5072,4752,4743,4752,5390,5082,4752,6010,4752,4751,5572,6253,5505,4752,5971,6389,5056,4752,4752,4752,5074,5535,6350,4752,4752,6930,5401,4752,5494,4752,4752,4752,5125,4752,6136,6009,4752,5110,6936,6567,5134,5141,5150,5143,5152,4752,4752,4754,4752,4752,4752,4755,4752,4752,4752,4752,6233,6232,4752,4752,6347,4752,4752,6356,5137,5161,5250,4752,4752,4752,5060,6584,5222,5223,5186,4752,6234,5190,6523,5174,5165,5171,5181,4752,4752,4752,5190,4752,5143,5180,4752,4752,4756,6223,4752,6358,5781,5171,4752,6600,5055,5251,4752,5745,4752,4752,6357,5166,4752,5700,4752,6585,5199,5167,5205,5153,4752,5211,5207,4752,4752,4757,5714,4752,5698,4752,5191,5136,5142,5151,5221,6420,4752,4752,4757,5946,5568,5167,6098,6009,4752,5973,4752,5175,5166,6097,5153,4752,4752,4583,6238,5201,5241,4752,4752,6357,5780,6547,5167,5243,4752,4752,6357,5781,4960,4752,6600,5250,5242,4752,4752,4752,5291,5782,5243,4752,4752,4752,5293,6836,6078,4752,4752,4752,5346,5256,4752,4752,4752,5355,4752,6927,4752,4752,4752,5377,5972,4752,4752,6928,5301,5305,5306,5306,5307,5306,5306,5311,5314,5316,5318,5320,5320,5320,5320,5321,5325,5325,5325,5327,5325,5325,5331,5331,4752,4752,4761,6855,4752,4752,4960,4752,4752,4752,5217,4752,6405,5353,5571,4752,6913,6240,5376,5259,4752,5068,5397,4752,5067,5385,5396,4752,6696,6700,5406,4752,4752,4752,5471,5263,4752,4752,4752,5531,6256,5416,4752,5572,4752,5665,4752,5365,4752,5664,4752,4752,4961,4961,4961,5670,4752,6018,4752,4752,6375,6009,4752,6535,4752,4752,4752,5581,5083,5429,6534,4752,4752,6428,6383,5341,6009,4752,4752,4752,5187,5417,4752,5573,4753,5358,6639,6644,6017,4752,6260,6601,4752,6413,4752,4752,4968,5118,5439,5444,5449,4752,4752,6578,5109,4752,4752,4753,6958,5445,5153,4752,4752,4752,5387,6259,6593,5458,4752,4752,5050,5054,5721,5336,5342,4752,4752,6591,4752,4752,6698,4752,4752,4752,5434,5465,6603,4752,4752,5080,4752,6569,5473,5477,5445,6429,5475,5869,5481,4752,4752,6717,6721,4752,5720,5335,5491,6602,4752,4752,4752,5747,5525,5477,5500,4752,4752,6740,6908,6569,5524,5476,5499,6429,4752,4752,6712,4752,4752,5084,5430,6860,4752,4752,4752,5748,5187,4752,4752,5223,4752,5745,6422,4752,4752,4752,6219,4752,5571,4752,5665,6571,5548,5869,5516,5812,5477,5871,4752,4752,4752,5750,5720,5335,5504,4752,4752,6868,5157,4752,6861,4752,4752,5111,6426,5386,5748,5510,4752,4752,5870,6429,4752,4752,4752,5746,4752,4752,4752,4760,5529,4752,4752,5560,5567,4752,4752,4757,5546,5554,6429,4752,6713,4752,4752,5191,5176,5559,5113,4752,4752,5192,4752,4752,4752,6727,4752,6319,4752,4752,5228,4752,5568,4752,4752,4752,5811,5225,6277,5386,4752,4752,6874,6878,4752,4752,6206,4752,5720,5814,5569,4752,5687,5691,5225,6255,6934,5689,5570,5570,4752,5944,5690,4752,5689,5570,4752,5688,4752,6238,5563,4752,4753,5522,5548,5687,5577,4752,5687,5577,6238,5401,6651,4752,4753,6054,6070,5386,6364,5586,6009,6256,5600,4752,6419,5378,5602,5607,5620,5611,5619,5614,5615,5615,5615,5615,5624,5631,5628,5635,5637,5637,5637,5642,5638,5646,5646,5646,5646,4752,4752,6449,4752,4752,5247,5251,6259,4778,5412,6009,4752,5705,4752,6945,4752,4752,4752,6239,4752,4752,5678,4752,4752,5650,4752,5656,5652,4752,4756,4752,4752,6103,4752,5661,5669,5675,4752,4757,5847,5927,4752,5685,4752,6232,4752,5377,6310,4752,4752,5695,4752,4752,5289,5389,4752,4752,5957,6439,4752,4752,4752,5845,5211,5251,4752,6437,6441,4752,4752,4752,5860,4581,5709,4752,4752,5227,4752,5718,4752,4752,5356,6055,5761,5726,5732,5738,4752,5759,5763,5728,5734,4752,4752,4752,5980,5762,5727,5733,4752,4758,4752,4752,6124,5052,5056,4779,6862,4752,4752,5380,5228,4752,5767,6936,4752,6937,6934,5378,4752,5228,5704,4752,4752,6947,4752,4752,5356,5549,5774,5786,6683,5251,5787,6684,4752,4752,4752,5990,6258,4778,5412,6009,4752,6557,5986,4752,4775,4752,5744,6946,4752,4752,4752,6094,6233,4752,4752,5791,4752,5805,6900,6682,6686,6686,4752,4752,4752,6117,5774,6902,6684,4752,4950,5088,5102,5411,6870,4752,4752,5380,6635,5768,6937,5802,4744,5810,6902,6685,4752,4959,4752,4752,4702,4752,4752,5809,6901,5818,4752,4752,5421,4954,4752,5798,4780,6870,5972,4752,4752,4752,6241,4752,4752,4752,5188,6e3,5824,5251,4752,4752,5842,5822,5828,4752,4752,5453,5153,5281,4752,4752,4752,6238,6233,6238,4752,4752,5971,5570,4752,4752,6241,5972,4752,6241,4752,4752,6238,4752,4752,4752,5230,6239,4752,6241,5973,5838,5237,4752,6254,6635,5226,5851,6443,5858,5866,5875,5879,5884,5886,5880,5890,5893,5896,5899,5901,5903,5907,5907,5913,5907,5907,5909,5920,5921,5917,5917,5919,5917,5917,5918,5917,5931,5265,4752,4752,5460,5360,4757,4752,6931,4752,4752,4752,5461,5361,6613,5542,4752,4752,4752,6896,5776,6882,4752,4752,5742,5936,5195,4752,6225,5942,6564,5950,5953,5961,4752,4961,4752,4752,4752,6e3,6367,5966,6419,4752,4752,5487,4752,6294,4752,6293,5985,4752,5990,5994,4752,4752,4752,6298,6367,5927,4752,4752,4752,6243,4759,6930,4752,4752,5741,4752,4752,6938,6005,6421,6050,6014,4752,4752,5505,4752,4752,4752,6437,4752,6209,5755,5755,6022,6026,6110,4752,4962,4961,4752,4752,6111,4752,4752,4752,6317,6031,6026,6110,4752,4966,4752,5225,5398,4752,5400,4752,4752,4752,6254,4752,6366,5926,4752,4752,5561,5225,5266,4752,4752,5224,6352,4752,6628,4752,4972,5386,5066,6048,5970,4752,4752,5573,5398,4752,6208,4752,4752,5596,4752,6059,5779,6064,4752,4977,4821,6882,6069,6065,4752,4752,5699,4752,4752,6001,5925,5251,4752,4752,4752,6247,4752,5739,4752,6353,4752,6629,4752,5973,4752,6569,6074,6089,6569,6084,6088,5251,6082,6086,6090,4752,4979,4579,4752,4752,4752,6422,4752,6423,6722,4752,4752,4752,6321,6322,5389,6627,4752,5971,4980,4580,4752,4752,4752,6320,4757,4752,5740,4752,5075,5968,4752,4977,5523,6665,6354,6627,4752,5972,4752,4752,6036,4753,6937,4752,4752,4752,6418,6252,4752,4752,4752,6423,6860,6869,4752,4752,5720,5813,5555,4752,4752,4752,5809,6354,6627,4752,4753,6937,4978,4581,4752,4752,4752,6429,4752,4979,4581,4752,4752,5722,5337,5263,4752,6861,6870,4752,5287,5297,4758,4752,5742,6353,6860,6869,4758,5740,5390,5998,6234,4752,4752,4752,6102,4752,5386,6234,5505,6935,4755,6239,4752,5971,4752,4752,4752,5386,4754,5720,4581,4752,4752,5741,6936,4752,6863,5739,4752,5076,4752,4752,5720,5335,5341,4752,6869,4752,6313,4752,6311,4752,6608,4752,4752,5745,4752,6259,4752,4618,6121,6232,6230,6230,5741,6935,4752,4752,6201,5189,4752,6134,6132,6140,6144,6151,6145,6145,6150,6146,6155,6159,6163,6167,6169,6174,6176,6169,6169,6170,6186,6187,6180,6180,6185,6180,6180,6181,6191,4752,4752,4752,6545,6229,6841,5573,5061,6250,4752,4752,4752,6569,5524,4752,6247,6251,4752,5107,4752,4752,4753,6719,6266,6265,6267,4752,5110,4752,5111,4752,5113,5111,4752,5956,4752,5192,4752,6621,5747,6333,4752,4752,5797,5191,6271,6276,5252,4961,4752,6281,6287,6251,4752,4752,4752,6570,6286,6291,4752,4752,5751,4752,5833,5832,5831,4752,5110,6077,4752,4752,6362,4752,4752,4770,4752,4752,4752,6717,5589,4752,6202,5190,4752,5110,6929,4752,4752,6307,4752,4752,6934,4752,4752,4752,6934,4759,6304,5573,4961,5831,5831,5831,4752,5112,4752,4752,5742,5580,4769,6009,4752,4752,6387,4752,5126,4752,6331,4961,4753,5534,5538,5542,4752,6282,5536,5540,4752,5112,6427,5932,5582,4771,4752,4752,4752,6546,5782,5243,4752,5579,5536,5540,5862,5538,5542,4752,5114,5993,4752,4961,4752,5797,4768,5153,4752,4752,5804,6899,5787,6318,4752,4752,5957,4752,6213,6334,4752,4752,4752,6731,4752,6234,6343,5539,6009,4752,4752,5769,4752,4752,5938,6343,5539,4752,6425,4961,4752,5193,4752,4752,6231,4752,5377,5401,4752,6254,6318,4752,4752,6255,4752,6425,4752,4752,5409,6311,4961,4752,4752,5823,4752,4752,4752,6240,4752,4752,4752,5103,5454,6009,4752,4752,5844,5146,5452,6377,4752,4752,5846,5145,6860,6009,4752,5190,6375,6009,6422,6424,4752,6868,4752,4752,4752,5388,5380,6254,6362,4752,5124,5122,4752,4752,6322,6322,6322,6322,4707,4707,4707,4707,4708,4735,4735,6381,4752,6009,5377,6389,4752,4752,6885,6009,4752,4752,6868,5377,6253,6887,4752,4752,6887,4752,4752,6886,4752,6403,5971,6255,4752,4752,5853,4752,4752,4752,6936,6255,6886,5971,6255,5191,4752,4752,5752,4752,4756,6589,6886,6401,6885,6885,4752,6886,5377,6885,6394,6394,4703,4703,4703,4752,5185,4752,4752,4757,5110,4960,5744,6398,4752,5187,6451,4752,4752,6409,4752,6411,5750,6215,6417,5744,6435,6217,4752,5189,6447,6457,6461,6462,6466,6486,6469,6484,6472,6478,6475,6480,6498,6492,6490,6496,6496,6500,6506,6506,6507,6504,6506,6506,6506,6511,6514,4752,4752,5854,4752,4752,4752,6619,4824,5749,6417,6518,4752,4752,4752,6756,5187,4752,4752,4752,6834,6431,4752,4752,4752,6836,5834,6009,6522,6527,6869,4752,6430,4752,5188,4752,5223,4752,4752,4752,6253,4752,6540,6551,6561,5402,6575,4752,4752,5945,4752,4752,6755,6009,4752,5188,5194,4752,4752,4752,6252,6255,4752,6756,5962,4752,5222,5392,5390,4752,6849,6848,4752,5231,6032,6027,6850,4752,4752,4752,6854,6619,4824,5749,6582,5518,4752,4752,4752,6861,4753,6634,4752,4752,5945,5691,4752,4752,6589,4752,4753,4752,4757,5561,4752,6597,4752,6607,4752,5235,4752,4752,4752,5225,6612,5541,4752,6617,5229,6351,5401,6625,4752,5753,4752,6633,5359,6640,6645,6009,4944,5540,4752,4752,5955,4752,6649,6238,5686,5686,5144,4752,5744,4752,4752,4752,4753,4980,6619,4824,6272,6654,5754,4753,4752,6311,4752,4752,6312,4752,4752,5355,5359,5550,6658,6009,5357,6678,4944,5541,4752,5571,4752,6597,6597,6597,6597,4752,4752,4752,6928,4752,4752,5110,6426,4752,5746,6423,4752,5266,4752,4564,4752,6662,5550,6671,6670,6009,4752,4752,5977,4752,6664,6669,5153,4752,5270,6423,5505,4823,5748,5401,5189,4752,4752,4752,5739,6322,5752,4753,4752,4752,5741,5390,4752,6675,6690,6429,6694,4752,4752,5193,6234,4824,5750,4752,5369,4752,4955,4752,4752,5385,5753,4756,4752,6239,4752,6240,4752,5349,4758,4752,6705,6429,4752,5372,4758,5592,4752,6705,6429,5572,6238,6913,4752,4752,6009,4752,4752,5712,4752,4752,6010,6536,4714,6709,4752,4752,6016,4752,4756,4752,6240,4752,5379,6255,4752,5388,4752,6257,6419,5074,6720,4752,4752,6042,4752,5749,4752,4752,4752,6929,4752,4752,5971,6717,6429,4752,4752,6042,5417,6914,6241,4752,5747,6233,4752,4752,4752,6926,4752,6729,4752,4752,4752,6933,6727,4563,4752,5747,6741,5389,5192,5222,4752,5986,4561,5748,4752,6936,6934,4562,5749,6934,5853,4563,6935,4752,5387,5748,4752,4752,6735,6371,4563,6936,6934,4752,4752,6739,6680,6421,4744,6300,6231,5091,4752,5389,5748,4752,4752,6701,4581,6039,6745,6748,4620,6733,6752,6760,6768,6762,6764,6771,6775,6779,6782,6784,6788,6790,6794,6797,6801,6804,6809,6808,6813,6815,6819,6817,6823,6827,6830,4752,5391,5223,5222,6421,4752,4752,4759,5112,4760,4752,5113,4752,5428,6533,4752,4752,6388,4752,4752,6393,4752,4752,6428,4752,4752,6428,6260,6840,5381,4752,6845,4584,4752,6043,4752,5495,4752,4752,4753,6197,4769,6859,6044,4752,4752,6195,5582,4752,6739,6907,5191,4752,6867,6915,4752,5506,5505,4752,5973,4752,4563,4752,5386,4752,5533,5537,5541,5389,5388,4752,4752,6232,4752,4752,5747,6741,6355,6235,4752,6543,6238,5400,4752,5188,4752,4752,6891,5777,5700,4752,5562,6253,4752,4752,6912,4752,4752,6932,4752,4752,6935,4752,4753,5435,5440,5445,5388,5388,4752,4752,6242,6042,4752,5739,6934,4752,5571,4752,5398,4752,4751,5401,5401,5399,5793,4753,6898,5778,4563,4752,5388,5749,6601,5747,6906,5192,6236,4752,6897,5777,4563,4752,5130,4752,4752,6338,4752,4752,6231,4752,4752,6920,4752,4752,4752,6261,4752,5775,6919,4752,5386,6258,4781,5595,5193,6237,4752,5571,4752,5399,4760,4752,5740,6935,4752,4752,6107,4752,4752,6924,4752,4752,6281,5535,6896,6942,4752,4752,6311,4752,4752,4752,6530,4759,4752,5740,6935,6951,4752,4752,4752,6311,5770,4977,6959,4752,4752,6312,5113,4752,6957,4752,4752,6313,4752,4752,4752,6453,2,4,8,262144,0,0,0,2147483648,1073741824,0,0,1075838976,2097152,2097152,268435456,4194432,4194560,4196352,270532608,2097152,4194304,50331648,0,0,0,4194304,0,0,541065216,541065216,-2143289344,-2143289344,4194304,4194304,4196352,-2143289344,4194304,4194432,37748736,541065216,-2143289344,4194304,4194304,4194304,4194304,4194304,4194304,4198144,4196352,8540160,4194304,4194304,4194304,4196352,276901888,4194304,4194304,8425488,4194304,1,0,1024,137363456,66,37748736,742391808,239075328,-1405091840,775946240,775946240,775946240,171966464,742391808,742391808,742391808,775946240,-1371537408,775946240,775946240,-1405091840,-1371537408,775946240,775946240,775946240,775946240,4718592,-1371537408,775946240,-1371537408,775946240,-1371537408,171966464,775946240,171966464,171966464,171966464,171966464,239075328,171966464,775946240,239075328,64,4718592,2097216,4720640,541589504,4194368,541589504,4194400,4194368,541065280,4194368,4194368,-2143289280,4194368,-2143285440,-2143285408,-2143285408,776470528,-2143285408,-2109730976,-2143285408,-2143285408,-2143285408,-2109730976,-2143285408,775946336,775946304,775946304,776470528,775946304,-1908404384,775946304,-1908404384,0,2097152,4194304,128,0,256,2048,0,0,16777216,16777216,16777216,16777216,64,64,64,64,96,96,96,64,0,0,0,24,64,0,96,96,0,0,0,288,8388608,0,0,8388608,4096,4096,4096,32,96,96,96,96,262144,96,96,1048576,128,0,1048576,0,0,2048,2048,2048,2048,0,0,0,0,1,0,0,0,2,0,0,0,3,96,96,128,128,2048,524288,268435456,536870912,1073741824,0,0,8388608,4096,0,64,0,2048,524288,536870912,0,64,524288,64,96,64,524288,524288,96,96,64,524288,96,64,80,528,524304,1048592,2097168,268435472,16,16,2,536936448,16,262160,16,536936448,16,17,17,20,16,48,16,16,20,48,64,128,1024,134217728,0,0,24,560,48,2097680,3145744,1048592,1048592,2097168,16,1049104,16,16,20,560,2097168,2097168,16,16,16,16,20,16,2097552,3146256,16,16,16,28,0,2,2098064,17,21,16,16,163577856,17,528,528,16,528,2228784,-161430188,-161429680,-161430188,-161430188,-161430188,-161429680,-161430188,-161429676,-160905388,-161429676,-161430188,-161429676,-161429676,-161429676,-161429676,-161429675,-161349072,-161349072,-161429675,-161349072,-161349072,-161349072,-161349072,-161347728,-161347728,-161347728,-161347728,-161298576,-160299088,-161298576,-161298572,-161298572,-161298572,-161298572,-18860267,-160774284,-18729163,-160774288,-160299084,-161298572,-160774284,-161298572,-161298572,16,16,28,16,16,112,21,53,146804757,146812949,0,16,0,48,3146256,2097680,1048592,146862101,146863389,-161429676,146863389,146863421,146863389,146863389,146863389,146863421,-161429740,-161429676,-160905388,-161298572,0,65536,524288,1048576,33554432,0,159383552,0,0,0,1157627904,-1073741824,0,0,0,300,142606336,0,8192,0,0,0,384,0,243269632,0,0,0,1862270976,1,32768,131328,131072,16777216,0,0,1,2,4,128,2097152,0,1073741825,2147483648,2147483648,8,16777216,1073774592,278528,1226014816,100665360,100665360,100665360,100665360,100665360,100665360,-2046818288,1091799136,-2044196848,1091799136,1091799136,1091799136,1091799136,1091799136,1091803360,1091799136,1091799136,1158908e3,1158908001,1192462432,1192462448,1192462448,1192462448,1192462448,1200851056,1091799393,1200851056,1200851056,1192462448,1870630720,1870647104,1870630720,1870647104,1870630720,1870647104,1870647104,1870647104,1870647104,1870647104,1870647120,1870647124,1870647124,1870647124,1870630736,1870655316,1870655316,1870655316,1870655317,1870655348,1870647120,1870647120,1870647120,1879019376,1879035760,1870647124,1879035760,1879035764,32768,131072,524288,2097152,8388608,16777216,134217728,268435456,1073741824,2147483648,131328,0,0,0,832,0,164096,0,0,0,520,4333568,1048576,1224736768,0,0,1,4,0,0,235712,0,1090519040,0,0,0,999,259072,1191182336,0,0,9437184,0,0,1048576,0,128,128,128,128,2048,2048,231744,0,0,0,1007,495424,7864320,1862270976,0,0,0,1024,0,0,0,63,52e4,1862270976,1862270976,16252928,0,0,16252928,0,0,0,1536,2147483648,64,98304,1048576,150994944,0,64,256,3584,16384,98304,393216,98304,393216,524288,1048576,2097152,4194304,2147483648,0,0,2097152,4194304,251658240,536870912,1073741824,0,0,8192,1073741824,1073741824,8388608,2097152,16777216,134217728,268435456,2048,65536,262144,524288,1048576,2097152,1048576,2097152,4194304,117440512,64,256,1536,16384,65536,117440512,134217728,536870912,1073741824,0,0,100663296,0,0,0,4096,0,0,0,64,0,0,128,-2113929216,64,256,1536,65536,262144,524288,4194304,16777216,100663296,134217728,536870912,1073741824,1048576,2097152,4194304,16777216,4194432,3145728,524288,2097152,134217728,268435456,65536,1048576,0,0,0,2048,0,0,134217728,0,0,0,15,16,524288,2097152,1073741824,2147483648,2147483648,0,1048576,2097152,67108864,1073741824,0,0,0,0,2097152,1073741824,2147483648,0,0,0,768,0,2097152,2147483648,0,-872415232,0,-872415232,67108864,134217728,1073741824,0,2147483648,0,0,0,8192,4096,0,0,1536,524288,64,64,96,64,0,524288,0,1073741824,2621440,1073741824,9476,512,0,32,384,8192,0,0,1,8,512,512,9476,134218240,1050624,262144,512,50331649,1275208192,4194312,4194312,4194312,4194312,541065224,4194312,4194312,4194344,-869654016,4203820,-869654016,-869654016,-869654016,-869654016,1279402504,1279402504,1279402504,1279402504,2143549415,2143549415,2143549415,2143549415,2143549415,2143549423,2143549415,2143549423,2143549423,2143549423,2143549423,16,32,256,1024,8192,33554432,8192,33554432,67108864,134217728,0,0,536870912,9216,0,0,1792,2147483648,0,1050624,0,0,1,14,16,32,1024,2048,77824,524288,0,512,139264,1275068416,512,2760704,-872415232,0,0,1856,2147483648,4203520,0,0,0,32768,0,0,0,58624,520,0,0,0,131072,0,0,0,512,0,1048576,0,1275068416,0,0,0,65536,0,0,0,12561,0,1007,1007,0,0,2048,524288,0,536870912,0,512,0,2048,1048576,0,0,40,0,2621440,0,0,2147483648,999,259072,4194304,25165824,100663296,402653184,1,102,384,512,5120,5120,8192,16384,229376,4194304,4194304,25165824,33554432,67108864,402653184,402653184,536870912,1073741824,0,0,2048,3145728,16777216,536870912,110,110,0,0,1,30,32,0,40,0,524288,64,96,1,6,96,384,512,1024,4096,8192,16384,229376,67108864,402653184,536870912,0,2,16,104,0,104,104,8192,33554432,134217728,0,0,2048,100663296,0,229376,25165824,33554432,402653184,536870912,8192,33554432,0,0,0,17408,0,524288,2097152,0,0,2048,268435456,536870912,0,0,268435456,49152,2,4,32,64,256,512,1024,8,8,0,0,1,64,128,3584,16384,3145728,16777216,67108864,134217728,805306368,1073741824,0,0,4,64,256,1024,4096,8192,65536,524288,98304,131072,25165824,268435456,536870912,0,2,4,256,1024,0,2048,0,98304,131072,16777216,268435456,0,0,0,262144,0,0,65536,268435456,0,0,1,128,512,2048,524288,2048,524288,67108864,536870912,0,262144,0,0,2432,0,0,4096,8192,0,32,4100,67108864,0,32768,0,32768,0,0,134348800,134348800,1049088,1049088,8192,1049088,12845065,12845065,12845065,12845065,270532608,0,1049088,0,134348800,12845065,12845065,147193865,5505537,5591557,5587465,5587457,5587457,147202057,5587457,5587457,5591557,5587457,13894153,13894153,13894153,13894153,-1881791493,13894153,81003049,13894153,13894153,-1881791493,-1881791493,-1881791493,-1881791493,0,9,0,0,1,5505024,142606336,0,0,0,278528,0,82432,0,0,1,16777216,0,0,0,139264,0,0,0,229440,0,5,86528,9,4456448,8388608,0,0,8192,8392704,9,8388608,0,0,256,1024,65536,16777216,268435456,0,0,41,75497472,0,0,16384,262144,0,0,0,512,1048576,0,0,262144,4194304,8388608,0,0,16384,4194304,2147483648,0,0,81920,0,0,2,4,16,32,8192,131072,262144,1048576,4194304,8388608,4194304,8388608,16777216,33554432,-1946157056,0,-1946157056,0,0,0,524288,0,0,0,16,0,0,0,8,0,0,0,12,0,0,0,13,0,1,2,56,64,896,8192,131072,0,0,33554432,1024,0,4,0,8,16,32,64,128,1024,2048,16384,65536,262144,524288,2097152,384,512,8192,131072,1048576,0,16384,65536,0,65536,0,0,131072,0,32,0,32768,134217728,0,0,2,8,16,0,2,8,32,64,256,1024,98304,131072,1048576,33554432,134217728,2147483648,8,32,384,8192,131072,33554432,131072,33554432,2147483648,0,0,24576,0,0,0,50331648,0,8396800,4194304,134217728,2048,134217728,0,0,2,16384,32768,1048576,2097152,0,8396800,0,0,4,8,0,0,16384,0,2,4,128,3584,16384,16384,16384,16777216,16384,229376,25165824,33554432,268435456,536870912,524288,268567040,16384,-2113929088,2113544,68423701,68423701,68423701,68423701,68489237,68423701,68423701,68423701,85200917,68423701,68489237,72618005,68423701,68423701,-2079059883,68423701,-2079059883,68425749,68423703,69488664,85200919,69488664,69488664,69488664,69488664,70537244,70537245,70537245,70537245,70537245,70537245,70539293,-2022351809,-2076946339,70537245,-2076946339,-2076946339,-2022351681,-2022351681,-2022351681,-2022351681,-2022351809,-2022351681,-2022351809,-2022351681,32768,65536,4194304,16777216,2147483648,0,0,0,8388608,134217728,1073741824,131584,268435456,0,0,4,128,1048576,67108864,0,0,4,256,1024,98304,0,0,5242880,-2080374784,268288,0,0,4,16777216,0,0,23,0,0,0,867391,24,282624,0,0,6,0,0,0,2097152,0,0,0,28,3145728,0,0,32768,65536,0,284672,0,0,0,1048576,0,63,128,351232,7340032,-2030043136,0,0,131072,268435456,0,0,8,32,64,16,4096,262144,1048576,1073741824,0,0,0,-2046820352,0,20480,0,0,8,4194304,0,0,15,16,32,3072,20480,65536,262144,7340032,50331648,16,32,128,3072,20480,0,1,4,1048576,4096,1048576,512,0,0,0,150528,0,0,0,5242880,0,7,0,14,32,1024,2048,12288,1,14,32,128,1024,7340032,50331648,2147483648,0,0,2048,16384,65536,7340032,50331648,8,32,1024,65536,262144,2097152,1073741824,0,1,6,8,32,128,1024,65536,2097152,4194304,50331648,2147483648,0,1,2,4,2097152,4194304,67108864,134217728,536870912,0,32768,4194304,16777216,0,1,2,4,50331648,67108864,2147483648,0,0,128,50331648,0,0,8,33554432,4096,4194304,268435456,0,0,32768,131072,131072,0,32768,32768,268435968,268435968,1073743872,268435968,0,128,6144,0,229376,128,268435968,16777220,268436032,256,256,256,256,257,256,256,536871168,256,256,256,256,384,-1879046336,-1879046334,1073744256,-1879046334,-1879046326,-1879046334,-1879046334,-1879046326,-1879046326,-1845491902,-1878784182,268444480,268444480,268444480,268444480,2100318145,268436288,268436288,268436288,268436288,268436289,268436288,2100318149,2100318149,2100318149,2100318149,2100326337,2100318149,2100318149,2100318145,2100318149,2100318145,2100318149,2100326341,2100318149,2100326341,2100326341,0,1,16,32,128,512,0,4194304,1,1024,0,0,229376,0,0,12,3145728,0,0,576,0,0,16,8192,0,0,16,262144,0,384,0,0,21,266240,1864,0,0,0,8388608,0,0,0,128,0,0,0,256,0,0,0,260,512,0,1,4036,19939328,2080374784,0,0,0,16777216,0,0,0,32,0,0,0,40,67108864,0,19947520,0,0,0,19947520,2304,0,8,0,512,301989888,0,0,262144,16777216,0,1,4,64,128,64,128,3840,16384,19922944,19922944,2080374784,0,0,29,0,0,1536,2147483648,0,0,32,1,8,0,33554432,0,0,32768,196608,0,0,0,33554432,0,0,32768,65536,131072,0,0,524288,524288,524288,524288,64,64,64,32,96,8,0,33554432,262144,8192,0,0,4194304,1024,0,4096,0,1024,2048,16384,3145728,2048,524288,536870912,1073741824,8,0,0,512,131072,0,0,64,256,1536,2048,33554432,8192,0,0,32,64,256,32768,65536,16777216,134217728,536870912,1073741824,0,3145728,16777216,536870912,1073741824,0,0,8192,8192,8192,9216,33554432,0,2097152,16777216,1073741824,0,0,32768,0,16777216,0,16777216,64,0,2,0,0,32768,16777216,0,0,32,512,128,131072,0,134218752,0,0,44,0,66048,0,0,0,67108864,0,0,0,8192,0,8192,0,536870912,0,0,0,12289,0,268500992,4243456,0,0,59,140224,5505024,-1887436800,0,0,2,2,4096,4096,0,4096,8192,67108864,0,0,1,4032,0,4243456,4096,1048588,12289,1124073472,1124073472,1124073472,1124073472,1124073472,1124073488,1124073472,1124073472,1124073474,1124073472,1124073472,1392574464,1124073472,12289,1073754113,12289,12289,1124073472,12289,12289,1098920193,1098920193,1124073488,1124073472,1258292224,1124073472,1124073472,1124073472,1124085761,1258304513,1124085761,1124085761,1124085761,1124085777,1132474625,1098920209,1132474625,1132474625,1132474625,1132474625,1400975617,2132360255,2132622399,2132622399,2132360255,2132360255,2132360255,2132360255,2132622399,2132360255,2132360255,2132360255,2140749119,2132360255,2140749119,2140749119,0,65536,268435456,49152,184549376,0,0,0,83886080,0,0,318767104,0,0,32768,100663296,402653184,1610612736,0,0,0,231488,0,12545,25165824,0,0,49152,0,0,256,1536,65536,0,0,58720256,0,0,131072,32768,0,0,134217728,0,12305,13313,0,0,331776,83886080,117440512,0,0,1,6,32,64,0,78081,327155712,0,0,511808,7864320,512,65536,0,0,64,65536,1048576,0,0,33554432,1073741824,0,0,110,0,0,256,8388608,0,0,524288,2097152,2147483648,0,0,77824,0,0,0,268435456,524288,1048576,16777216,100663296,134217728,0,339968,0,0,128,131072,1024,134217728,0,268435456,0,0,128,33554432,0,0,1,12288,0,0,0,134217728,2048,12288,65536,524288,1048576,1048576,33554432,67108864,134217728,805306368,0,327680,0,0,256,65536,0,0,268435456,1048576,33554432,134217728,805306368,1,14,16,1024,4096,8192,229376,65536,524288,33554432,134217728,536870912,1073741824,0,1,14,1024,2048,4096,8192,131072,1048576,8388608,33554432,134217728,2147483648,0,0,4096,65536,524288,134217728,16384,4194304,0,0,999,29619200,2113929216,0,0,0,148480,1,12,1024,134217728,0,128,134217728,8,0,8,8,8,0,1,4,8,134217728,536870912,0,0,1073741824,32768,0,4,8,536870912,0,0,1024,1024,0,1024,2048,3145728,0,8,32,512,4096,8192,0,0,68157440,137363456,0,66,66,524288,4100,1024,0,0,605247,1058013184,1073741824,100680704,25165824,92274688,25165824,25165824,92274688,92274688,25165952,25165824,25165824,26214400,92274688,25165824,92274688,93323264,92274688,92274688,92274688,92274688,92274720,93323264,25165890,100721664,25165890,100721928,100721928,100787464,100853e3,100721928,100721928,125977600,125977600,125977600,125977600,125846528,125846528,126895104,125846528,125846528,125846528,125846560,125977600,127026176,125977600,125977600,127026176,127026176,281843,1330419,281843,1330419,281843,281843,1330419,1330419,281843,281843,5524723,5524723,5524723,5524723,93605107,5524723,39079155,72633587,72633587,5524723,92556531,93605107,93605107,127290611,97799411,127290611,131484915,2097152,134217728,0,0,1024,65536,58368,0,0,0,301989888,8,124160,189696,0,0,605503,1066401792,0,0,3,240,19456,262144,0,150528,0,0,0,536870912,0,1073741824,0,57344,0,0,0,1073741824,0,0,0,1,2,112,128,3072,16384,262144,2048,16384,262144,0,0,2097152,16777216,0,0,0,1,2,48,64,0,1,2,16,32,64,384,8192,131072,1048576,32,4096,8192,131072,0,0,32768,0,256,0,256,0,65536,1024,2048,262144,0,0,32768,256,0,0,1024,2097152,0,0,0,16384,0,0,0,4,0,0,0,5,64,128,262144,0,0,2097152,268435456,0,0,64,128,0,0,1536,1792,1,2,16,64,0,0],r.TOKEN=["(0)","PragmaContents","DirCommentContents","DirPIContents","CDataSection","Wildcard","EQName","URILiteral","IntegerLiteral","DecimalLiteral","DoubleLiteral","StringLiteral","PredefinedEntityRef","\'\\"\\"\'","EscapeApos","ElementContentChar","QuotAttrContentChar","AposAttrContentChar","PITarget","NCName","QName","S","S","CharRef","CommentContents","EOF","\'!\'","\'!=\'","\'\\"\'","\'#\'","\'#)\'","\'$\'","\'%\'","\'\'\'\'","\'(\'","\'(#\'","\'(:\'","\')\'","\'*\'","\'*\'","\'+\'","\',\'","\'-\'","\'-->\'","\'.\'","\'..\'","\'/\'","\'//\'","\'/>\'","\':\'","\':)\'","\'::\'","\':=\'","\';\'","\'<\'","\'<!--\'","\'</\'","\'<<\'","\'<=\'","\'<?\'","\'=\'","\'>\'","\'>=\'","\'>>\'","\'?\'","\'?>\'","\'@\'","\'NaN\'","\'[\'","\']\'","\'after\'","\'all\'","\'allowing\'","\'ancestor\'","\'ancestor-or-self\'","\'and\'","\'any\'","\'append\'","\'array\'","\'as\'","\'ascending\'","\'at\'","\'attribute\'","\'base-uri\'","\'before\'","\'boundary-space\'","\'break\'","\'by\'","\'case\'","\'cast\'","\'castable\'","\'catch\'","\'check\'","\'child\'","\'collation\'","\'collection\'","\'comment\'","\'constraint\'","\'construction\'","\'contains\'","\'content\'","\'context\'","\'continue\'","\'copy\'","\'copy-namespaces\'","\'count\'","\'decimal-format\'","\'decimal-separator\'","\'declare\'","\'default\'","\'delete\'","\'descendant\'","\'descendant-or-self\'","\'descending\'","\'diacritics\'","\'different\'","\'digit\'","\'distance\'","\'div\'","\'document\'","\'document-node\'","\'element\'","\'else\'","\'empty\'","\'empty-sequence\'","\'encoding\'","\'end\'","\'entire\'","\'eq\'","\'every\'","\'exactly\'","\'except\'","\'exit\'","\'external\'","\'first\'","\'following\'","\'following-sibling\'","\'for\'","\'foreach\'","\'foreign\'","\'from\'","\'ft-option\'","\'ftand\'","\'ftnot\'","\'ftor\'","\'function\'","\'ge\'","\'greatest\'","\'group\'","\'grouping-separator\'","\'gt\'","\'idiv\'","\'if\'","\'import\'","\'in\'","\'index\'","\'infinity\'","\'inherit\'","\'insensitive\'","\'insert\'","\'instance\'","\'integrity\'","\'intersect\'","\'into\'","\'is\'","\'item\'","\'json\'","\'json-item\'","\'key\'","\'language\'","\'last\'","\'lax\'","\'le\'","\'least\'","\'let\'","\'levels\'","\'loop\'","\'lowercase\'","\'lt\'","\'minus-sign\'","\'mod\'","\'modify\'","\'module\'","\'most\'","\'namespace\'","\'namespace-node\'","\'ne\'","\'next\'","\'no\'","\'no-inherit\'","\'no-preserve\'","\'node\'","\'nodes\'","\'not\'","\'object\'","\'occurs\'","\'of\'","\'on\'","\'only\'","\'option\'","\'or\'","\'order\'","\'ordered\'","\'ordering\'","\'paragraph\'","\'paragraphs\'","\'parent\'","\'pattern-separator\'","\'per-mille\'","\'percent\'","\'phrase\'","\'position\'","\'preceding\'","\'preceding-sibling\'","\'preserve\'","\'previous\'","\'processing-instruction\'","\'relationship\'","\'rename\'","\'replace\'","\'return\'","\'returning\'","\'revalidation\'","\'same\'","\'satisfies\'","\'schema\'","\'schema-attribute\'","\'schema-element\'","\'score\'","\'self\'","\'sensitive\'","\'sentence\'","\'sentences\'","\'skip\'","\'sliding\'","\'some\'","\'stable\'","\'start\'","\'stemming\'","\'stop\'","\'strict\'","\'strip\'","\'structured-item\'","\'switch\'","\'text\'","\'then\'","\'thesaurus\'","\'times\'","\'to\'","\'treat\'","\'try\'","\'tumbling\'","\'type\'","\'typeswitch\'","\'union\'","\'unique\'","\'unordered\'","\'updating\'","\'uppercase\'","\'using\'","\'validate\'","\'value\'","\'variable\'","\'version\'","\'weight\'","\'when\'","\'where\'","\'while\'","\'wildcards\'","\'window\'","\'with\'","\'without\'","\'word\'","\'words\'","\'xquery\'","\'zero-digit\'","\'{\'","\'{{\'","\'{|\'","\'|\'","\'||\'","\'|}\'","\'}\'","\'}}\'"]}),define("lib/JSONParseTreeHandler.js",["require","exports","module"],function(e,t,n){var r=t.JSONParseTreeHandler=function(e){function f(e){return{name:e,children:[],getParent:null,pos:{sl:0,sc:0,el:0,ec:0}}}function l(e,t){var i=f(e);n===null?(n=i,r=i):(i.getParent=r,r.children.push(i),r=r.children[r.children.length-1])}function c(){if(r.children.length>0){var e=r.children[0],n=null;for(var i=r.children.length-1;i>=0;i--){n=r.children[i];if(n.pos.el!==0||n.pos.ec!==0)break}r.pos.sl=e.pos.sl,r.pos.sc=e.pos.sc,r.pos.el=n.pos.el,r.pos.ec=n.pos.ec}r.name==="FunctionName"&&(r.name="EQName"),r.name==="EQName"&&r.value===undefined&&(r.value=r.children[0].value,r.children.pop()),r.getParent!==null&&(r=r.getParent);if(r.children.length>0){var s=r.children[r.children.length-1];s.children.length===1&&t.indexOf(s.name)!==-1&&(r.children[r.children.length-1]=s.children[0])}}function h(e,t,n){var a=n-s;r.value=i.substring(0,a),i=i.substring(a),s=n;var f=u,l=o,c=f+r.value.split("\\n").length-1,h=r.value.lastIndexOf("\\n"),p=h===-1?l+r.value.length:r.value.substring(h+1).length;u=c,o=p,r.pos.sl=f,r.pos.sc=l,r.pos.el=c,r.pos.ec=p}var t=["OrExpr","AndExpr","ComparisonExpr","StringConcatExpr","RangeExpr","UnionExpr","IntersectExceptExpr","InstanceofExpr","TreatExpr","CastableExpr","CastExpr","UnaryExpr","ValueExpr","FTContainsExpr","SimpleMapExpr","PathExpr","RelativePathExpr","PostfixExpr","StepExpr"],n=null,r=null,i=e,s=0,o=0,u=0,a=0;this.closeParseTree=function(){while(r.getParent!==null)c();c()},this.peek=function(){return r},this.getParseTree=function(){return n},this.reset=function(e){},this.startNonterminal=function(e,t){l(e,t)},this.endNonterminal=function(e,t){c()},this.terminal=function(e,t,n){e=e.substring(0,1)==="\'"&&e.substring(e.length-1)==="\'"?"TOKEN":e,l(e,t),h(r,t,n),c()},this.whitespace=function(e,t){var n="WS";l(n,e),h(r,e,t),c()}}}),define("lib/Errors.js",["require","exports","module"],function(e,t,n){var r="error",i="warning";t.Errors={warning:function(e,t,n){return{name:n,pos:e,type:i,level:i,message:t}},unusedVar:function(e,t){var n="$"+t+": unused variable.";return{name:"unusedVar",pos:e,type:i,level:i,message:n}},unusedNsPrefix:function(e,t,n,r){var s=\'"\'+t+\'": unused namespace prefix.\';return{name:"unusedNsPrefix",pos:e,prefix:t,ns:n,nsType:r,type:i,level:i,message:s}},duplicateNs:function(e,t,n){var r=\'"\'+n+\'": is already available with the prefix "\'+t+\'".\';return{name:"duplicateNs",pos:e,otherPrefix:t,ns:n,type:i,level:i,message:r}},countOnGroupingVar:function(e,t){var n="Count on grouping variable ($"+t+") always returns 1. Use count clause instead.";return{name:"countOnGroupingVar",pos:e,type:i,level:i,message:n}},XPST0008:function(e,t){return{name:"XPST0008",pos:e,type:r,level:r,message:\'[XPST0008] "\'+t+\'": undeclared variable.\'}},XQST0033:function(e,t,n){return{name:"XQST0033",pos:e,type:r,level:r,message:\'[XQST0033] "\'+t+\'": namespace prefix already bound to "\'+n+\'".\'}},XPST0081:function(e,t,n){return{name:"XPST0081",pos:e,type:r,level:r,prefix:t,localName:n,message:\'[XPST0081] "\'+t+\'": can not expand namespace prefix to URI.\'}},XQST0039:function(e,t){return{name:"XQST0039",pos:e,type:r,level:r,message:\'[XQST0039] "\'+t+\'": duplicate parameter name.\'}},XQST0049:function(e,t){return{name:"XQST0049",pos:e,type:r,level:r,message:\'[XQST0049] "\'+t+\'": duplicate variable declaration.\'}},XQST0034:function(e,t){return{name:"XQST0034",pos:e,type:r,level:r,message:\'[XQST0034] "\'+t+\'": duplicate function declaration.\'}}}}),define("lib/StaticContext.js",["require","exports","module"],function(e,t,n){var r=t.StaticContext=function(e,t){this.pos=e,this.parent=t,this.children=[],this.varDecls={},this.varRefs={},this.getVarRefs=function(e){return this.varDecls[e]!==undefined?this.varRefs[e]:this.parent!==undefined?this.parent.getVarRefs(e):null},this.getVarDecl=function(e){return this.varDecls[e]!==undefined?this.varDecls[e]:this.parent!==undefined?this.parent.getVarDecl(e):null},this.getVarDecls=function(e){if(this.parent===undefined)return this.varDecls;var t=this.parent.getVarDecls(!0);for(var n in this.varDecls)t[n]=this.varDecls[n];return t}}}),define("lib/CommentParser.js",["require","exports","module"],function(e,t,n){var r=t.CommentParser=function i(e,t){function r(e,t){p=t,g=e,y=e.length,s(0,0,0)}function s(e,t,n){a=t,f=t,l=e,c=t,h=n,w=n,p.reset(g)}function o(){p.startNonterminal("Comment",f),v(4);for(;;){m(1);if(l==5)break;switch(l){case 2:v(2);break;default:o()}}v(5),p.endNonterminal("Comment",f)}function d(e,t,r,i,s){throw new n.ParseException(e,t,r,i,s)}function v(e){l==e?(p.terminal(i.TOKEN[l],c,h>y?y:h),a=c,f=h,l=0):d(c,h,0,l,e)}function m(e){l==0&&(l=E(e),c=b,h=w)}function E(e){var t=!1;b=w;var n=w,r=i.INITIAL[e],s=0;for(var o=r&15;o!=0;){var u,a=n<y?g.charCodeAt(n):0;++n;if(a<128)u=i.MAP0[a];else if(a<55296){var f=a>>5;u=i.MAP1[(a&31)+i.MAP1[(f&31)+i.MAP1[f>>5]]]}else{if(a<56320){var f=n<y?g.charCodeAt(n):0;f>=56320&&f<57344&&(++n,a=((a&1023)<<10)+(f&1023)+65536,t=!0)}var l=0,c=1;for(var h=1;;h=c+l>>1){if(i.MAP2[h]>a)c=h-1;else{if(!(i.MAP2[2+h]<a)){u=i.MAP2[4+h];break}l=h+1}if(l>c){u=0;break}}}s=o;var p=(u<<4)+o-1;o=i.TRANSITION[(p&3)+i.TRANSITION[p>>2]],o>15&&(r=o,o&=15,w=n)}r>>=4;if(r==0){w=n-1;var f=w<y?g.charCodeAt(w):0;return f>=56320&&f<57344&&--w,d(b,w,s,-1,-1)}if(t)for(var v=r>>3;v>0;--v){--w;var f=w<y?g.charCodeAt(w):0;f>=56320&&f<57344&&--w}else w-=r>>3;return(r&7)-1}r(e,t);var n=this;this.ParseException=function(e,t,n,r,i){var s=e,o=t,u=n,a=r,f=i;this.getBegin=function(){return s},this.getEnd=function(){return o},this.getState=function(){return u},this.getExpected=function(){return f},this.getOffending=function(){return a},this.getMessage=function(){return a<0?"lexical analysis failed":"syntax error"}},this.getInput=function(){return g},this.getOffendingToken=function(e){var t=e.getOffending();return t>=0?i.TOKEN[t]:null},this.getExpectedTokenSet=function(e){var t;return e.getExpected()<0?t=i.getTokenSet(-e.getState()):t=[i.TOKEN[e.getExpected()]],t},this.getErrorMessage=function(e){var t=this.getExpectedTokenSet(e),n=this.getOffendingToken(e),r=g.substring(0,e.getBegin()),i=r.split("\\n"),s=i.length,o=i[s-1].length+1,u=e.getEnd()-e.getBegin();return e.getMessage()+(n==null?"":", found "+n)+"\\nwhile expecting "+(t.length==1?t[0]:"["+t.join(", ")+"]")+"\\n"+(u==0||n!=null?"":"after successfully scanning "+u+" characters beginning ")+"at line "+s+", column "+o+":\\n..."+g.substring(e.getBegin(),Math.min(g.length,e.getBegin()+64))+"..."},this.parse_Comments=function(){p.startNonterminal("Comments",f);for(;;){m(0);if(l==3)break;switch(l){case 1:v(1);break;default:o()}}v(3),p.endNonterminal("Comments",f)};var u,a,f,l,c,h,p,g,y,b,w};r.getTokenSet=function(e){var t=[],n=e<0?-e:INITIAL[e]&15;for(var i=0;i<6;i+=32){var s=i,o=(i>>5)*9+n-1,u=r.EXPECTED[o];for(;u!=0;u>>>=1,++s)(u&1)!=0&&t.push(r.TOKEN[s])}return t},r.MAP0=[6,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],r.MAP1=[54,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,88,120,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,6,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,2,2,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],r.MAP2=[57344,65536,65533,1114111,2,2],r.INITIAL=[1,2],r.TRANSITION=[33,33,33,33,28,37,32,33,31,37,32,33,43,50,53,33,31,39,33,33,46,57,59,33,63,33,33,33,35,5,35,0,5,0,0,0,0,5,5,5,5,96,5,4,6,0,0,7,0,80,184,184,184,184,0,0,0,185,80,185,0,0,0,64,0,0,0],r.EXPECTED=[26,52,2,16,4,20,36,4,4],r.TOKEN=["(0)","S","CommentContents","EOF","\'(:\'","\':)\'"]}),define("lib/CommentHandler.js",["require","exports","module"],function(e,t,n){var r=t.CommentHandler=function(e){function a(e){return{name:e,children:[],getParent:null,pos:{sl:0,sc:0,el:0,ec:0}}}function f(e,r){var i=a(e);t===null?(t=i,n=i):(i.getParent=n,n.children.push(i),n=n.children[n.children.length-1])}function l(e,t){if(n.children.length>0){var r=n.children[0],i=n.children[n.children.length-1];n.pos.sl=r.pos.sl,n.pos.sc=r.pos.sc,n.pos.el=i.pos.el,n.pos.ec=i.pos.ec}if(n.getParent!==null){n=n.getParent;for(var s in n.children)delete n.children[s].getParent}else delete n.getParent}function c(e,t,u){var a=u-i;n.value=r.substring(0,a);var f=o,l=o===0?s:s-1,c=f+n.value.split("\\n").length-1,h=n.value.lastIndexOf("\\n"),p=h===-1?l+n.value.length:n.value.substring(h).length;r=r.substring(a),i=u,s=h===-1?s+n.value.length:p,o=c,n.pos.sl=f,n.pos.sc=l,n.pos.el=c,n.pos.ec=p}var t=null,n=null,r=e,i=0,s=0,o=0,u=0;this.peek=function(){return n},this.getParseTree=function(){return t},this.reset=function(e){},this.startNonterminal=function(e,t){f(e,t)},this.endNonterminal=function(e,t){l(e,t)},this.terminal=function(e,t,r){e=e.substring(0,1)==="\'"&&e.substring(e.length-1)==="\'"?"TOKEN":e,f(e,t),c(n,t,r),l(e,r)},this.whitespace=function(e,t){var r="WS";f(r,e),c(n,e,t),l(r,t)},this.normalizeComment=function(e){var t=e.split("\\n");for(var n=0;n<t.length;n++){var r=t[n];if(r.isWS()){t[n]="";continue}if(r[0]===":")r=" "+r;else{var i=r.ltrimSpaces(),s=r.length-i.length;i[0]!=":"?s<=2?r=" : "+i:r[s-2]=":":i.length==1&&(r+=" ")}t[n]=r}return t.join("\\n")},this.trimComment=function(e){var t=e.split("\\n"),n=0,r=0,i=Number.MAX_VALUE;for(var s=0;s<t.length;s++){if(t[s].isWS()){n===s&&n++;continue}r=s+1;var o=t[s].indexOf(": ");if(o===-1){console.log(\'Warning: trimComment: Non-normalized comment line "\'+t[s]+\'"\');continue}t[s][o]=" ",i>o&&(i=o)}if(i!=Number.MAX_VALUE)for(var s=0;s<t.length;s++)t[s]=t[s].substring(i+2).rtrimSpaces();return t.slice(n,r).join("\\n")},this.commentToDocString=function(e){return this.trimComment(this.normalizeComment(e))},String.prototype.isWS!="function"&&(String.prototype.isWS=function(){return this.trim()===""}),String.prototype.rtrimSpaces!="function"&&(String.prototype.rtrimSpaces=function(e){return this.replace(/[ \\t]+$/,"")}),String.prototype.ltrimSpaces!="function"&&(String.prototype.ltrimSpaces=function(e){return this.replace(/^[ \\t]+/,"")}),String.prototype.fromChar!="function"&&(String.prototype.fromChar=function(e,t){if(!t||t<1)t=1;var n=new Array(t+1);return n.join(e)})}}),define("lib/Translator.js",["require","exports","module","lib/Errors.js","lib/StaticContext.js","lib/CommentParser.js","lib/CommentHandler.js"],function(e,t,n){var r=e("lib/Errors.js").Errors,i=e("lib/StaticContext.js").StaticContext,s=e("lib/CommentParser.js").CommentParser,o=e("lib/CommentHandler.js").CommentHandler,u=t.Translator=function(e){function g(e){m.children.push(new i(e,m)),m=m.children[m.children.length-1]}function y(e){e!==undefined&&(m.pos.el=e.el,m.pos.ec=e.ec);var n=m.varDecls,i=m.varRefs;for(var s in n){var o=n[s],u=i[s];u===undefined&&o.kind!=="VarDecl"&&t.push(r.unusedVar(o.pos,s))}for(var s in i){var o=n[s],u=i[s];if(o===undefined)if(m.parent.parent===undefined)for(var a=0;a<u.length;a++){var f=u[a];t.push(r.XPST0008(f.pos,s))}else m.parent.varRefs[s]===undefined&&(m.parent.varRefs[s]=[]),m.parent.varRefs[s]=m.parent.varRefs[s].concat(u)}m=m.parent}function b(e){if(e.substring(0,2)!=="Q{")return e}function w(e,t,n){n=n||", ";var r=[];return e.forEach(function(e){e[t]&&r.push(e[t])}),r.join(n)}function H(e){var t="";if(e.value===undefined)for(var n=0;n<e.children.length;n++){var r=e.children[n];t+=H(r)}else t+=e.value;return t}var t=[],n=[],u=!0,a="http://www.w3.org/2005/xpath-functions",f={local:"http://www.w3.org/2005/xquery-local-functions",xs:"http://www.w3.org/2001/XMLSchema",fn:"http://www.w3.org/2005/xpath-functions",jn:"http://www.jsoniq.org/functions",an:"http://www.zorba-xquery.com/annotations",db:"http://www.zorba-xquery.com/modules/store/static/collections/dml",idx:"http://www.zorba-xquery.com/modules/store/static/indexes/dml",zerr:"http://www.zorba-xquery.com/errors",err:"http://www.w3.org/2005/xqt-error"},l={jn:{ns:"http://www.jsoniq.org/functions",pos:{sl:0,sc:0,el:0,ec:0},type:"module",auto:!0},fn:{ns:"http://www.w3.org/2005/xpath-functions",pos:{sl:0,sc:0,el:0,ec:0},type:"module",auto:!0}},c={},h={},p={},d={},v=new i(e.pos),m=v;this.XQuery=function(e){g(e.pos),this.visitChildren(e),y(e.pos);var n={};for(var i in l){var s=l[i].ns,o=l[i].pos,u=l[i].type;if(c[i]===undefined&&l[i].auto===undefined){var a=r.unusedNsPrefix(o,i,s,u);t.push(a)}n[s]===undefined?n[s]={prefix:i,positions:[o]}:u!=="schema"&&n[s].positions.push(o)}for(var s in n){var i=n[s].prefix,f=n[s].positions;if(f.length>1)for(var h=1;h<f.length;h++)t.push(r.duplicateNs(f[h],i,s))}return!0},this.ModuleDecl=function(e){u=!1;var t=function(){var e="",t="";this.NCName=function(t){e=H(t)},this.URILiteral=function(n){t=H(n),t=t.substring(1,t.length-1),f[e]=t}};return this.visitChildren(e,new t),!0},this.ModuleImport=function(e){var n=new function(){var n="",i=null;this.NCName=function(e){n=H(e)},this.URILiteral=function(s){s=H(s),s=s.substring(1,s.length-1),i===null&&(i=s,l[n]===undefined?(l[n]={ns:i,pos:e.pos,type:"module"},f[n]=i):t.push(r.XQST0033(e.pos,n,i)))}};return this.visitChildren(e,n),!0},this.SchemaImport=function(e){var n=this,i=new function(){var i="",s=null;this.SchemaPrefix=function(e){var t=function(){this.NCName=function(e){i=H(e)}};n.visitChildren(e,new t)},this.URILiteral=function(n){n=H(n),n=n.substring(1,n.length-1),s===null&&(s=n,l[i]===undefined?l[i]={ns:s,pos:e.pos,type:"schema"}:t.push(r.XQST0033(e.pos,i,s)))}};return this.visitChildren(e,i),!0},this.NamespaceDecl=function(e){var n=new function(){var n="",i="";this.NCName=function(e){n=H(e)},this.URILiteral=function(s){i=H(s),i=i.substring(1,i.length-1),l[n]===undefined?l[n]={ns:i,pos:e.pos,type:"decl"}:t.push(r.XQST0033(e.pos,n,i))}};return this.visitChildren(e,n),!0},this.DefaultNamespaceDecl=function(e){var t=function(){var e=!1,t="";this.TOKEN=function(t){e=e?!0:t.value==="function"},this.URILiteral=function(n){t=H(n),t=t.substring(1,t.length-1),e&&(a=t)}};return this.visitChildren(e,new t),!0};var E=[];this.StatementsAndOptionalExpr=function(e){g(e.pos),E.push(0),this.visitChildren(e);for(var t=1;t<=E[E.length-1];t++)y(e.pos);return E.pop(),y(),!0},this.StatementsAndExpr=function(e){g(e.pos),E.push(0),this.visitChildren(e);for(var t=1;t<=E[E.length-1];t++)y(e.pos);return E.pop(),y(),!0},this.BlockStatement=function(e){g(e.pos),E.push(0),this.visitChildren(e);for(var t=1;t<=E[E.length-1];t++)y(e.pos);return E.pop(),y(),!0},this.visitExprSingles=function(e){for(var t=0;t<e.children.length;t++){var n=e.children[t];(n.name==="ExprSingle"||n.name==="VarValue"||n.name==="VarDefaultValue")&&this.visit(n)}};var S=function(e){this.ExprSingle=this.VarValue=this.VarDefaultValue=function(e){return!0},this.VarName=this.EQName=function(n){var i=H(n);i.substring(0,2)!=="Q{"&&(m.varDecls[i]===undefined?m.varDecls[i]={pos:n.pos,kind:e.name}:e.name=="Param"?t.push(r.XQST0039(e.pos,i)):t.push(r.XQST0049(e.pos,i)))}};this.Param=function(e){var t={};return t.name="$"+H(e.children[1]),e.children[3]&&(t.type=H(e.children[3].children[2])),A||this.visitChildren(e,new S(e)),L.push(t),!0},this.TransformExpr=function(e){return g(e.pos),this.visitExprSingles(e),this.visitChildren(e,new S(e)),y(),!0},this.QuantifiedExpr=function(e){return g(e.pos),this.visitExprSingles(e),this.visitChildren(e,new S(e)),y(),!0};var x=[];this.FLWORExpr=function(e){g(e.pos),x.push(0),this.visitChildren(e);for(var t=1;t<=x[x.length-1];t++)y(e.pos);return x.pop(),y(),!0},this.LetBinding=function(e){return this.visitExprSingles(e),g(e.pos),x[x.length-1]++,this.visitChildren(e,new S(e)),!0},this.ForBinding=function(e){return this.visitExprSingles(e),g(e.pos),x[x.length-1]++,this.visitChildren(e,new S(e)),!0},this.TumblingWindowClause=function(e){return this.visitExprSingles(e),g(e.pos),x[x.length-1]++,this.visitChildren(e,new S(e)),!0},this.WindowVars=function(e){return g(e.pos),x[x.length-1]++,this.visitChildren(e,new S(e)),!0},this.SlidingWindowClause=function(e){return this.visitExprSingles(e),g(e.pos),x[x.length-1]++,this.visitChildren(e,new S(e)),!0},this.PositionalVar=function(e){return this.visitChildren(e,new S(e)),!0},this.CurrentItem=function(e){return this.visitChildren(e,new S(e)),!0},this.PreviousItem=function(e){return this.visitChildren(e,new S(e)),!0},this.NextItem=function(e){return this.visitChildren(e,new S(e)),!0},this.CountClause=function(e){return g(e.pos),x[x.length-1]++,this.visitChildren(e,new S(e)),!0};var T=!1;this.GroupingSpec=function(e){T=!1,g(e.pos),x[x.length-1]++;for(var t=0;t<e.children.length;t++){var n=e.children[t];n.value===":="&&(T=!0)}return!1},this.GroupingVariable=function(e){if(T)this.visitChildren(e,new S(e));else{if(e.children.length===2){var t=H(e.children[1]),n=m.getVarDecl(t);n&&(n.kind="GroupingVariable")}this.VarRef(e)}return!1};var N="",C=null;this.VarDecl=this.VarDeclStatement=function(e){var i=e.name==="VarDeclStatement",s=this,o=[],u=[],a={};i?k={annotations:{}}:k.isExternal=!1;var f,l,c=function(){var e=0;this.ExprSingle=function(e){return!0},this.VarName=function(n){var s=H(n);o.push(s),u[e++]=n.pos,i||(f=n.pos),l[s]&&t.push(r.XQST0049(n.pos,value))},this.TypeDeclaration=function(e){var t=function(){this.SequenceType=function(e){a[o[o.length-1]]=H(e)}};s.visitChildren(e,new t)},this.TOKEN=function(e){e.value==="external"&&(k.isExternal=!0)}};i?(s.visitExprSingles(e),g(e.pos),E[E.length-1]++,l=m.varDecls):(g(e.pos),s.visitExprSingles(e),y(),l=d),s.visitChildren(e,new c);var h=[],p=k.annotations,b=0;return o.forEach(function(t){var n={annotations:p,pos:u[b++],kind:e.name};k.isExternal&&(n.isExternal=!0),a[t]&&(n.type=a[t]),l[t]=l[t]||n;if(!i){var r=v.children[0];r.varDecls[t]=r.varDecls[t]||n}}),i||n.push({displayPos:f,icon:"property",name:"$"+o[0],pos:e.pos,items:[]}),!0},this.Annotation=function(e){var t=this,n="",r={literals:[]},i=function(){this.EQName=function(e){n=H(e);var t=n.split(":");n.substring(0,2)!=="Q{"&&t.length>1?(r.prefix=t[0],r.name=t[1]):r.name=n,n==="updating"&&k.annotations.updating},this.Literal=function(e){r.literals.push(H(e))}};return t.visitChildren(e,new i),k.annotations[n]=r,!0},this.CompatibilityAnnotation=function(e){var t=this;return k.annotations.updating||(k.annotations.updating={name:"updating",literals:[]}),!0};var k={},L=[],A=!1;this.AnnotatedDecl=function(e){var i=this;k={pos:e.pos,annotations:{}};var s=function(){this.FunctionDecl=function(e){D.pos&&k.pos.sl-D.pos.el<=1&&(k.doc=D.value,D.pos=undefined),k.isExternal=A=e.children[e.children.length-1].value&&e.children[e.children.length-1].value==="external",L=[];var s="",o="",u=null;g(e.pos);var a=function(){this.EQName=function(e){s=H(e),o=s+"(",u=e.pos},this.SequenceType=function(e){k.type=H(e)}};i.visitChildren(e,new a),y(),k.params=L.slice();var f=L.length;return e.arity=""+f,h[s]&&h[s][f]!==undefined?t.push(r.XQST0034(u,s)):(o+=w(L,"name")+")",n.push({displayPos:u,icon:"method",name:o,pos:e.pos,items:[]}),h[s]===undefined&&(h[s]={}),h[s][f]=k),!0}};return this.visitChildren(e,new s),!0};var O=!1,M="",_=0;this.FunctionCall=function(e){O=!0,_=0,M="",this.visitChildren(e),O=!1;if(e.children.length===2&&e.children[0].value==="count"&&a==="http://www.w3.org/2005/xpath-functions"){var n=H(e.children[1]);if(n.substring(0,2)==="($"){var i=n.substring(2,n.length-1),s=m.getVarDecl(i);if(s&&s.kind==="GroupingVariable"){var o=r.countOnGroupingVar(e.pos,i);t.push(o)}}}return p[M]===undefined&&(p[M]={}),p[M][_]===undefined&&(p[M][_]=[]),p[M][_].push(e.children[0].pos),e.arity=_,!0},this.Argument=function(e){return _++,!1},this.EQName=function(e){var n=H(e);O&&(M=n);if(n.substring(0,2)!=="Q{"&&n.indexOf(":")!==-1){var i=n.substring(0,n.indexOf(":")),s=n.substring(n.indexOf(":")+1);l[i]===undefined&&f[i]===undefined?t.push(r.XPST0081(e.pos,i,s)):c[i]=!0}return!1},this.QName=function(e){var t=H(e);if(t.indexOf(":")!==-1){var n=t.substring(0,t.indexOf(":"));c[n]=!0}return!1},this.Wildcard=function(e){var t=H(e),n=t.substring(0,t.indexOf(":"));return n!="*"&&(c[n]=!0),!0},this.VarRef=function(e){var t=H(e).substring(1);return t.substring(0,2)!=="Q{"&&t.indexOf(":")===-1&&(m.varRefs[t]===undefined&&(m.varRefs[t]=[]),e.pos.sc++,m.varRefs[t].push({pos:e.pos})),this.visitChildren(e),!0};var D={},P={};this.WS=function(e){var t=this,n=H(e),r=new o(n),i=new s(n,r);i.parse_Comments();var u=r.getParseTree(),a=function(){var e;this.Comment=function(n){e=n.pos;var i=function(){this.CommentContents=function(t){var n=t.value,i=n.length>0&&n[0]==="~";i?(n=n.substring(1),D.pos=e,D.value=r.commentToDocString(n)):(P.pos=e,P.value=r.commentToDocString(n))}};return t.visitChildren(n,new i),!0}};return this.visitChildren(u,new a),!0},this.visit=function(e){var t=e.name,n=!1;typeof this[t]=="function"&&(n=this[t](e)===!0?!0:!1),n||this.visitChildren(e)},this.visitChildren=function(e,t){for(var n=0;n<e.children.length;n++){var r=e.children[n];t!==undefined&&typeof t[r.name]=="function"?t[r.name](r):this.visit(r)}},this.translate=function(){return this.visit(e),e.markers=t,e.outline=n,e.sctx=v,e.sctx.namespaces=f,e.sctx.declaredNS=l,e.sctx.defaultFnNs=a,e.sctx.functionReferences=p,e.sctx.declaredFunctions=h,e.sctx.varDecls=d,e}}}),define("lib/Compiler.js",["require","exports","module","lib/XQueryParser.js","lib/JSONParseTreeHandler.js","lib/utils.js","lib/Translator.js"],function(e,t,n){var r=e("lib/XQueryParser.js").XQueryParser,i=e("lib/JSONParseTreeHandler.js").JSONParseTreeHandler,s=e("lib/utils.js").Utils,o=e("lib/Translator.js").Translator,u=t.Compiler=function(){this.compile=function(e){var t=new i(e),n=new r(e,t),u=null,a=null;try{n.parse_XQuery()}catch(f){if(!(f instanceof n.ParseException))throw f;t.closeParseTree();var l=s.convertPosition(e,f.getBegin(),f.getEnd()),c=n.getErrorMessage(f);l.sc===l.ec&&l.ec++,a={pos:l,type:"error",level:"error",rexError:!0,message:c}}u=t.getParseTree(),this.showAST!==undefined&&(s.removeParentPtr(u),console.log(JSON.stringify(u,null,2)));var h=new o(u);return u=h.translate(),a!==null&&(u.markers.push(a),u.error=!0),u}}}),define("lib/visitors/VariableRemover.js",["require","exports","module"],function(e,t,n){var r=t.VariableRemover=function(e){function t(e,t){var n=t.sl-e.sl,r=e.el-t.el,i=t.sc-e.sc,s=e.ec-t.ec;return(n>0||!n&&i>=0)&&(r>0||!r&&s>=0)}function n(){return{name:"WS",value:"",children:[]}}function r(e){return!/\\S/.test(e)}this.posUpdate=[],this.Prolog=function(e){var r=this,i=function(){deleted=!1,this.AnnotatedDecl=function(e){return t(e.pos,r.removePos)?(deleted=!0,n()):r.AnnotatedDecl(e)},this.Separator=function(e){return deleted?(deleted=!1,n()):r.Separator(e)}};return this.fromNode(e,new i)},this.VarDeclStatement=function(e){return t(e.pos,this.removePos)?n():this.everythingElse(e)},this.LetClause=function(e){if(!t(e.pos,this.removePos))return this.everythingElse(e);var i=0,s=-1,o=this,u=0;for(var a=0;a<e.children.length;a++){var f=e.children[a];f.name=="LetBinding"&&(t(f.pos,o.removePos)&&(s=u),i++,u++)}if(i==1)return n();var l=function(){u=-1,this.LetBinding=function(e){return u++,u==s?n():o.LetBinding(e)},this.TOKEN=function(e){return e.value==","?!s&&u==s||s&&u==s-1?n():o.TOKEN(e):o.TOKEN(e)},this.WS=function(e){if(!s&&u==s||s&&u==s-1)if(r(e.value))return n();return o.WS(e)}};return this.fromNode(e,new l)},this.fromNode=function(e,t){var n={};return n.name=e.name,n.children=this.visitChildren(e,t),n.value=e.value,n.pos=e.pos,n},this.everythingElse=function(e){return this.fromNode(e)},this.TOKEN=this.everythingElse,this.LetBinding=this.everythingElse,this.WS=this.everythingElse,this.Separator=this.everythingElse,this.AnnotatedDecl=this.everythingElse,this.visit=function(e){var t=e.name;return typeof this[t]=="function"?this[t](e):this.everythingElse(e)},this.visitChildren=function(e,t){var n=[];for(var r=0;r<e.children.length;r++){var i=e.children[r];t!==undefined&&typeof t[i.name]=="function"?n.push(t[i.name](i)):n.push(this.visit(i))}return n},this.removeVar=function(t){return this.removePos=t,this.visit(e)}}}),define("lib/visitors/NamespaceRemover.js",["require","exports","module"],function(e,t,n){var r=t.NamespaceRemover=function(e){function t(e,t){var n=t.sl-e.sl,r=e.el-t.el,i=t.sc-e.sc,s=e.ec-t.ec;return(n>0||!n&&i>=0)&&(r>0||!r&&s>=0)}function n(){return{name:"WS",value:"",children:[]}}function r(e){return!/\\S/.test(e)}function i(e){var t="";if(e.value===undefined)for(var n=0;n<e.children.length;n++){var r=e.children[n];t+=i(r)}else t+=e.value;return t}this.removedStr="",this.Prolog=function(e){var r=this,s=function(){var e=!1;this.Import=this.NamespaceDecl=function(s){return t(s.pos,r.removePos)?(e=!0,r.removedStr=i(s),n()):r[s.name](s)},this.Separator=function(t){return e?(e=!1,r.removedStr+=";",n()):r.Separator(t)}};return this.fromNode(e,new s)},this.fromNode=function(e,t){var n={};return n.name=e.name,n.children=this.visitChildren(e,t),n.value=e.value,n.pos=e.pos,n},this.everythingElse=function(e){return this.fromNode(e)},this.Import=this.everythingElse,this.NamespaceDecl=this.everythingElse,this.Separator=this.everythingElse,this.visit=function(e){var t=e.name;return typeof this[t]=="function"?this[t](e):this.everythingElse(e)},this.visitChildren=function(e,t){var n=[];for(var r=0;r<e.children.length;r++){var i=e.children[r];t!==undefined&&typeof t[i.name]=="function"?n.push(t[i.name](i)):n.push(this.visit(i))}return n},this.removeNs=function(t){return this.removePos=t,this.visit(e)},this.getRemovedString=function(){return this.removedStr}}}),define("lib/visitors/Renamer.js",["require","exports","module"],function(e,t,n){var r=t.Renamer=function(e){function t(e,t){var n=t.sl-e.sl,r=e.el-t.el,i=t.sc-e.sc,s=e.ec-t.ec;return(n>0||!n&&i>=0)&&(r>0||!r&&s>=0)}function n(e){return!/\\S/.test(e)}this.renameInNode=function(e){var t=this,n=e.value.split(":"),r,i;n.length>1?(r=n[0],i=n[1]):i=n[0];var s;t.toPrefix?(r=t.toPrefix,s=r+":"+i):s=t.toName;var o={};return o.name=e.name,o.value=s,o.pos=e.pos,o.children=t.visitChildren(e),o},this.EQName=this.NCName=function(e){var n=this;return e.value&&t(e.pos,n.renamePos)?n.renameInNode(e):n.everythingElse(e)},this.ModuleImport=this.NamespaceDecl=function(e){var n=this;if(t(e.pos,n.renamePos)){var r=function(){this.NCName=function(e){return e.value?n.renameInNode(e):n.fromNode(e,this)}};return n.fromNode(e,new r)}return n.everythingElse(e)},this.fromNode=function(e,t){var n={};return n.name=e.name,n.children=this.visitChildren(e,t),n.value=e.value,n.pos=e.pos,n},this.everythingElse=function(e){return this.fromNode(e)},this.visit=function(e){var t=e.name;return typeof this[t]=="function"?this[t](e):this.everythingElse(e)},this.visitChildren=function(e,t){var n=[];for(var r=0;r<e.children.length;r++){var i=e.children[r];t!==undefined&&typeof t[i.name]=="function"?n.push(t[i.name](i)):n.push(this.visit(i))}return n},this.renamePrefix=function(t,n){return this.renamePos=t,this.toPrefix=n,this.visit(e)},this.rename=function(t,n){return this.renamePos=t,this.toName=n,this.visit(e)}}}),define("lib/visitors/Positioner.js",["require","exports","module"],function(e,t,n){var r=t.Positioner=function(e){this.ptr={l:0,c:0},this.addToPtr=function(e){if(e){var t=e.split("\\n");t.length>1&&(this.ptr.l+=t.length-1,this.ptr.c=0),this.ptr.c+=t[t.length-1].length}},this.fromNode=function(e,t){var n={};return n.name=e.name,n.pos={sl:this.ptr.l,sc:this.ptr.c},n.children=this.visitChildren(e,t),n.value=e.value,this.addToPtr(n.value),n.pos.el=this.ptr.l,n.pos.ec=this.ptr.c,n},this.everythingElse=function(e){return this.fromNode(e)},this.visit=function(e){var t=e.name;return typeof this[t]=="function"?this[t](e):this.everythingElse(e)},this.visitChildren=function(e,t){var n=[];for(var r=0;r<e.children.length;r++){var i=e.children[r];t!==undefined&&typeof t[i.name]=="function"?n.push(t[i.name](i)):n.push(this.visit(i))}return n},this.computePos=function(){return this.visit(e)}}}),define("lib/visitors/Adder.js",["require","exports","module","lib/visitors/Positioner.js"],function(e,t,n){var r=e("lib/visitors/Positioner.js").Positioner,i=t.Adder=function(e){function t(e,t){var n=t.sl-e.sl,r=e.el-t.el,i=t.sc-e.sc,s=e.ec-t.ec;return(n>0||!n&&i>=0)&&(r>0||!r&&s>=0)}function n(){return{name:"WS",value:"",children:[]}}function i(e){return!/\\S/.test(e)}function s(e){if(!e||!e.length)return\'""\';e[0]!==\'"\'&&(e=\'"\'+e);if(e.length==1||e[e.length-1]!==\'"\')e+=\'"\';return e}this.add={},this.addedStr="",this.Prolog=function(e){var t=this;if(t.add.NamespaceDecl||t.add.ModuleImport)if(t.add.NamespaceDecl){var n=t.add.NamespaceDecl,r=t.findInsertIndexInProlog(e,n,"NamespaceDecl"),i=r.idx,o=r.haveNewLine,u=t.nodeNamespaceDecl();o||(t.pushChild(e,t.nodeWS("\\n"),i),this.cursorTarget.line++,this.cursorTarget.column=0,i++),t.pushChild(e,u,i),t.pushChild(u,t.nodeTOKEN("declare")),t.pushSpace(u),t.pushChild(u,t.nodeTOKEN("namespace")),t.pushSpace(u),t.pushChild(u,t.nodeNCName(n.NCName)),t.pushSpace(u),t.pushChild(u,t.nodeTOKEN("=")),t.pushSpace(u),t.pushChild(u,t.nodeURILiteral(n.URILiteral)),this.addedStr="declare namespace "+t.add.NamespaceDecl.NCName+" = ",n.URILiteral===""?this.cursorTarget.column+=this.addedStr.length+1:this.cursorTarget=undefined,this.addedStr+=s(n.URILiteral)+";",t.pushChild(e,t.nodeSeparator(),i+1),i||t.pushChild(e,t.nodeWS("\\n"))}else if(t.add.ModuleImport){var n=t.add.ModuleImport,r=t.findInsertIndexInProlog(e,n,"Import"),i=r.idx,o=r.haveNewLine;o||(t.pushChild(e,t.nodeWS("\\n"),i),this.cursorTarget.line++,this.cursorTarget.column=0,i++);var a=t.nodeImport();t.pushChild(e,a,i);var u=t.nodeModuleImport();t.pushChild(a,u);var f=n.URILiterals,l=f.length;this.addedStr="import module ",t.pushChild(u,t.nodeTOKEN("import")),t.pushSpace(u),t.pushChild(u,t.nodeTOKEN("module")),t.pushSpace(u),n.NCName&&(this.addedStr+="namespace "+n.NCName+" = ",t.pushChild(u,t.nodeTOKEN("namespace")),t.pushSpace(u),t.pushChild(u,t.nodeNCName(n.NCName)),t.pushSpace(u),t.pushChild(u,t.nodeTOKEN("=")),t.pushSpace(u)),f[0]===\'""\'?this.cursorTarget.column+=this.addedStr.length+1:this.cursorTarget=undefined,this.addedStr+=s(f[0]),t.pushChild(u,t.nodeURILiteral(f[0]));if(l>1){this.addedStr+=" at "+s(f[1]),t.pushSpace(u),t.pushChild(u,t.nodeTOKEN("at")),t.pushSpace(u),t.pushChild(u,t.nodeURILiteral(f[1]));for(var c=2;c<f.length;c++)this.addedStr+=", "+s(f[c]),t.pushChild(u,t.nodeTOKEN(",")),t.pushSpace(u),t.pushChild(u,t.nodeURILiteral(f[c]))}this.addedStr+=";",t.pushChild(e,t.nodeSeparator(),i+1),i||t.pushChild(e,t.nodeWS("\\n"))}return this.everythingElse(e)},this.findInsertIndexInProlog=function(e,t,n){var r,i=!1;for(var s=0;s<e.children.length;s++){var o=e.children[s],u=["DefaultNamespaceDecl","Setter","NamespaceDecl","Import","FTOptionDecl"],a=["ContextItemDecl","AnnotatedDecl","OptionDecl"],f=u.concat(a);if(r===n&&o.name!==r&&f.indexOf(o.name)!==-1){this.cursorTarget={line:o.pos.sl,column:o.pos.sc};break}if(a.indexOf(n)==-1&&a.indexOf(o.name)!==-1){this.cursorTarget={line:o.pos.sl,column:o.pos.sc};break}o.name!=="Separator"&&o.name!=="WS"?(r=o.name,i=!1):o.name=="Separator"?i=!1:o.name==="WS"&&o.value.split("\\n").length>1?i=!0:i=!1}return i|=!s,this.cursorTarget||(this.cursorTarget={line:e.pos.sl,column:e.pos.sc}),{idx:s,haveNewLine:i}},this.pushChild=function(e,t,n){e.children=e.children||[],n=n||e.children.length,e.children.splice(n,0,t)},this.pushSpace=function(e){this.pushChild(e,this.nodeWS(" "))},this.nodeWithValue=function(e,t){return{name:e,value:t,children:[]}},this.nodeTOKEN=function(e){return this.nodeWithValue("TOKEN",e)},this.nodeNCName=function(e){return this.nodeWithValue("NCName",e)},this.nodeWS=function(e){return this.nodeWithValue("WS",e)},this.nodeURILiteral=function(e){return this.nodeWithValue("URILiteral",s(e))},this.nodeSeparator=function(){return this.nodeWithValue("Separator",";")},this.nodeNamespaceDecl=function(){return{name:"NamespaceDecl",children:[]}},this.nodeImport=function(){return{name:"Import",children:[]}},this.nodeModuleImport=function(){return{name:"ModuleImport",children:[]}},this.fromNode=function(e,t){var n={};return n.name=e.name,n.children=this.visitChildren(e,t),n.value=e.value,n.pos=e.pos,n},this.everythingElse=function(e){return this.fromNode(e)},this.visit=function(e){var t=e.name;return typeof this[t]=="function"?this[t](e):this.everythingElse(e)},this.visitChildren=function(e,t){var n=[];for(var r=0;r<e.children.length;r++){var i=e.children[r];t!==undefined&&typeof t[i.name]=="function"?n.push(t[i.name](i)):n.push(this.visit(i))}return n},this.copyAst=function(e){var t={name:e.name,children:[],value:e.value,pos:e.pos,getParent:e.getParent};for(var n=0;n<e.children.length;n++)t.children.push(this.copyAst(e.children[n]));return t},this.add=function(){this.addedStr="";var t=this.copyAst(e),n=this.visit(t),i=new r(n);return n=i.computePos(),n.cursorTarget=this.cursorTarget,console.log(JSON.stringify(n.cursorTarget)),n},this.addNamespaceDecl=function(e){return e.URILiteral=e.URILiteral||"",this.add.NamespaceDecl=e,this.add()},this.addModuleImport=function(e){if(!(e.URILiterals instanceof Array)){var t=e.URILiterals;e.URILiterals=[],t&&e.URILiterals.push(t)}return e.URILiterals.length||e.URILiterals.push(\'""\'),e.NCName===""&&(e.NCName=undefined),this.add.ModuleImport=e,this.add()},this.getAddedString=function(){return this.addedStr}}}),define("XQueryResolver.js",["require","exports","module","ext/language/MarkerResolution","lib/visitors/VariableRemover.js","lib/visitors/NamespaceRemover.js","lib/visitors/Renamer.js","lib/visitors/Adder.js"],function(e,t,n){var r=e("ext/language/MarkerResolution").MarkerResolution,i=e("lib/visitors/VariableRemover.js").VariableRemover,s=e("lib/visitors/NamespaceRemover.js").NamespaceRemover,o=e("lib/visitors/Renamer.js").Renamer,u=e("lib/visitors/Adder.js").Adder,a="./images/delete_obj.gif",f="./images/add_obj.gif",l="./images/correction_change.gif",c=5,h={name:0,prefix:1},p={NamespaceDecl:0,ModuleImport:1},d=function(e,t){function d(e,t,r,i,s,o){var u=[t,r,s,o].join(",");if(n[u]!==undefined)return n[u];if(r===0)return o;if(o===0)return r;var a=0;e[t]!=i[s]&&(a=1);var f=Math.min(d(e,t+1,r-1,i,s,o)+1,d(e,t,r,i,s+1,o-1)+1,d(e,t+1,r-1,i,s+1,o-1)+a);return n[u]=f,f}function v(e,t){return n=[],d(e,0,e.length,t,0,t.length)}function m(e,t,n,r){var i={row:e,column:t},s={row:n,column:r};return{start:i,end:s}}function g(e){if(e!==undefined){var t="";e.value!==undefined&&(t+=e.value);for(var n=0;n<e.children.length;n++)t+=g(e.children[n]);return t}return""}function y(e){var t=[];return t.push({action:"removeText",range:m(0,0,1e5,0)}),t.push({action:"insertText",range:m(0,0,1e5,0),text:e}),t}var n=[];this.getModulesContainingFunction=function(e){var t=[];for(var n in this.builtin)this.moduleContainsFunction(n,e)&&(t[n]=this.builtin[n]);return t},this.moduleContainsFunction=function(e,t){return this.builtin.hasOwnProperty(e)&&this.builtin[e].functions.hasOwnProperty(t)},this.getResolutions=function(e,t){this.builtin=t,this.builtin||(this.builtin={});var n=e.name;return n&&typeof this[n]=="function"?this[n](e):[]},this.unusedVar=function(e){var n="Remove unused variable",s=a,o=e.message.substring(0,e.message.indexOf(":")),u=new i(t),f=u.removeVar(e.pos),l=g(f),c="<b>Remove Unused Variable <i>"+o+"</i><b>";return[r(n,s,c,y(l))]},this.unusedNsPrefix=function(e){var n=this,i=[],o=e.ns;t.markers.forEach(function(t){if(t.name=="XPST0081"){var r=t.prefix,s=t.localName,u="<b>Rename Unused Namespace Prefix</b>";u+="<br/><br/><i>import module namespace <b>"+r+\'</b> = "\'+o+\'";</i>\',n.moduleContainsFunction(o,s)&&i.push(n.resRename(e,"Rename prefix to "+r,r,h.name,u))}});var u="Remove unused namespace prefix",f=a,l=new s(t),c=l.removeNs(e.pos),p=g(c),d="<b>Remove Unused Module Import</b>";return d+="<br/><br/><del><i>"+l.getRemovedString()+"</del></i>",i.push(r(u,f,d,y(p))),i},this.duplicateNs=this.XQST0033=function(e){var n="Remove duplicate namespace prefix",i=a,o=new s(t),u=o.removeNs(e.pos),f=g(u),l="<b>Remove Duplicate Namespace Prefix</b>";return l+="<br/><br/><i><del>"+o.getRemovedString()+"</del></i>",[r(n,i,l,y(f))]},this.XPST0081=function(e){var n=this,r=e.prefix,i=e.localName,s=this.getModulesContainingFunction(i),o=[],u=[],a=[],f=[];for(var l in t.sctx.namespaces)t.sctx.namespaces.hasOwnProperty(l)&&(a.push(l),f.push(t.sctx.namespaces[l]));a.forEach(function(n){if(!u[n]){u[n]=!0;var r="<b>Change Namespace Prefix</b>";r+="<br/><br/><i><b>"+n+"</b>:"+i+"(...</i>",o.push({marker:e,label:"Change prefix to "+n,preview:r,toName:n,hasFunction:s.hasOwnProperty(t.sctx.namespaces[n])?1:0,renameType:h.prefix})}});var p=[];t.markers.forEach(function(e){if(e.name=="unusedNamespace"&&e.nsType==="module"){var t=e.message.split(\'"\')[1];if(!p[t]){p[t]=!0;var n="<b>Rename Unused Namespace</b>";n+="<br/><br/><i>import module namespace <b>"+r+\'</b> = "\'+e.ns+\'";</i>\',o.push({marker:e,label:\'Change unused namespace prefix "\'+t+\'" to \'+r,preview:n,toName:r,fromName:t,hasFunction:s.hasOwnProperty(e.ns)?1:0,renameType:h.name})}}}),o.sort(function(e,t){var n=t.hasFunction-e.hasFunction;if(n)return n;var i=e.fromName||e.toName,s=t.fromName||t.toName;return v(i,r)-v(s,r)});var d=[];for(var m=0;m<c&&m<o.length&&o[m].hasFunction;m++){var g=o[m],y=this.resRename(g.marker,g.label,g.toName,g.renameType,g.preview);d.push(y)}var b=[];for(var w in s)s.hasOwnProperty(w)&&f.indexOf(w)==-1&&b.push(this.resAddModuleImport(r,w));!b.length&&!d.length&&b.push(this.resAddModuleImport(r,""));var E=b;for(var m=0;m<c&&m<d.length;m++)E.push(d[m]);return E},this.resRename=function(e,n,i,s,u){var a=l,f=new o(t),c;switch(s){case h.name:c=f.rename(e.pos,i);break;case h.prefix:c=f.renamePrefix(e.pos,i);break;default:throw"Illegal renameType"}var p=g(c);u=u||p;var d=r(n,a,u,y(p));return d.toName=i,d.renameType=s,d},this.resAdd=function(e,n,i){var s=f,o=new u(t),a,l="";switch(i){case p.NamespaceDecl:a=o.addNamespaceDecl(n),l="<b>Add Namespace Declaration</b>",l+="<br/><br/><i>"+o.getAddedString()+"</i>";break;case p.ModuleImport:a=o.addModuleImport(n),l="<b>Add Module Import</b>",l+="<br/><br/><i>"+o.getAddedString()+"</i>";break;default:throw"Illegal addType"}var c=g(a);l=l||c;var h=r(e,s,l,y(c),a.cursorTarget);return h.addType=i,h},this.resAddNamespaceDecl=function(e,t){var n="Declare Namespace "+e;t&&t.length&&(n+=\' = "\'+t+\'"\'),t=t||"";var r={NCName:e,URILiteral:t};return this.resAdd(n,r,p.NamespaceDecl)},this.resAddModuleImport=function(e,t){t=t||[],t instanceof Array||(t=[t]);var n="Import Module "+e,r={NCName:e,URILiterals:t};return this.resAdd(n,r,p.ModuleImport)},this.resDebug=function(e,t){return r(e,f,t,y(t))}};t.XQueryResolver=d}),define("refactoring",["require","exports","module"],function(e,t,n){t.Refactoring={equalPositions:function(e,t){return e.pos.sl===t.pos.sl&&e.pos.sc===t.pos.sc&&e.pos.el===t.pos.el&&e.pos.ec===t.pos.ec},nsDecls:["NamespaceDecl","ModuleDecl","SchemaPrefix","ModuleImport"],findPrefixDeclaration:function(e,t){if(t.name==="NCName"&&t.value===e&&t.getParent&&t.getParent.getParent&&this.nsDecls.indexOf(t.getParent.getParent.name)!==-1)return t.pos;for(var n=0;n<t.children.length;n++){var r=t.children[n],i=this.findPrefixDeclaration(e,r);if(i!==undefined)return i}},findPrefixReferences:function(e,t){var n=[];if(["QName","Wildcard"].indexOf(t.name)!==-1&&t.value.indexOf(":")!==-1&&t.value.substring(0,t.value.indexOf(":"))===e){var r=t.value.indexOf(":"),i=t.pos;n.push({sl:i.sl,sc:i.sc,el:i.el,ec:i.sc+r})}else if(t.name==="EQName"&&t.value&&t.value.substring(0,2)!=="Q{"&&t.value.indexOf(":")!==-1&&t.value.substring(0,t.value.indexOf(":"))===e){var r=t.value.indexOf(":"),i=t.pos;n.push({sl:i.sl,sc:i.sc,el:i.el,ec:i.sc+r})}for(var s=0;s<t.children.length;s++){var o=t.children[s];n=n.concat(this.findPrefixReferences(e,o))}return n},isNodePrefix:function(e,t){return["EQName","QName"].indexOf(e.name)!==-1&&e.value.indexOf(":")!==-1&&e.pos.sc+e.value.indexOf(":")>=t.column},isNSDecl:function(e,t){return e.name==="NCName"&&e.getParent&&e.getParent.getParent&&this.nsDecls.indexOf(e.getParent.getParent.name)!==-1},isFunctionDecl:function(e){return e.name==="EQName"&&e.getParent&&e.getParent.name==="FunctionDecl"},isFunctionCall:function(e){return e.name==="EQName"&&e.getParent&&e.getParent.name==="FunctionCall"},isTagName:function(e){return e.name==="QName"&&e.getParent&&e.getParent.name==="DirElemConstructor"},isVariable:function(e){var t=e.getParent;if(!t)return!1;if(t.name==="VarName")return!0;for(var n=0;n<t.children.length-1;n++){var r=t.children[n],i=t.children[n+1];if(r.value==="$"&&i.name==="EQName"&&this.equalPositions(i,e))return!0}return!1},getFunctionDeclarationsAndReferences:function(e,t,n){var r=e.sctx.declaredFunctions[t]&&e.sctx.declaredFunctions[t][n],i=e.sctx.functionReferences[t]&&e.sctx.functionReferences[t][n],s=r?e.sctx.declaredFunctions[t][n]:null,o=i?e.sctx.functionReferences[t][n]:[];return{declaration:s,references:o}},getTags:function(e){var t={};for(var n=0;n<e.children.length;n++){var r=e.children[n];r.name==="QName"&&(t.open!==undefined?t.close=r.pos:t.open=r.pos)}return t}}}),define("lib/XQueryBuiltin.js",["require","exports","module"],function(e,t,n){var r=t.XQueryBuiltin=function(){this.getBuiltin=function(){return{"http://www.28msec.com/modules/assertion":{doc:"<p>This module provides a set of assertion methods useful for writing tests.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"equals-general":[{doc:"<p>Asserts that two objects are equal (by general comarison). If they are not, an error containing the diff is thrown.</p>",docUrl:"http://www.28msec.com/modules/",params:["$expected","$actual"]}],error:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$error","$expected","$actual"]}],"equals-deep":[{doc:"<p>Asserts that two objects are deep-equal. If they are not, an error containing the diff is thrown.</p>",docUrl:"http://www.28msec.com/modules/",params:["$expected","$actual"]}],"equals-value":[{doc:"<p>Asserts that two objects are equal (by value comarison). If they are not, an error containing the diff is thrown.</p>",docUrl:"http://www.28msec.com/modules/",params:["$expected","$actual"]}]}},"http://www.28msec.com/modules/error":{doc:"<p>Applications written with Sausalito use this default error module if an error happens inside a Sausalito project. An error can occur during the run time of a Sausalito project on one of the following cases: If the XQuery code raises a dynamic error that is not caught in a try-catch block. If the giv...</p>",docUrl:"http://www.28msec.com/modules/",functions:{handle:[{doc:"<p>This is the default function that is called if an error happens. The default can be overridden by adding an error.xq library module into the Sausalito project. This module needs to declare a function with the same signature as the err:handle function in this module. The value returned by this functi...</p>",docUrl:"http://www.28msec.com/modules/",params:["$code","$description","$value","$stack"]}],"http-status":[{doc:"<p>Convert the given error QName into an HTTP status code.</p>",docUrl:"http://www.28msec.com/modules/",params:["$status"]}]}},"http://www.28msec.com/modules/http/cookie":{doc:"<p>The Sausalito Cookie module provides function to manipulate HTTP-Cookies.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"create-session":[{doc:\'<p>Creates a client-side cookie named "_session", containing the $sessionData node value together with its signature. The signature is generated with the server\\\'s private key.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$sessionData"]},{doc:\'<p>Creates a client-side cookie named "_session", containing the $sessionData node value together with its signature. The signature is generated with the server\\\'s private key. The cookie is also set to expire on the date specified by $expires .</p>\',docUrl:"http://www.28msec.com/modules/",params:["$sessionData","$expires"]},{doc:\'<p>Creates a client-side cookie named "_session", containing the $sessionData node value together with its signature. The signature is generated with the server\\\'s private key. The cookie is also set to expire on the date specified by $expires . The cookie is only valid for the specified path.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$sessionData","$expires","$path"]}],"session-data":[{doc:\'<p>Reads the "_session" cookie in the request and verifies if the signature matches the ad-hoc computed signature of the content of the session. If the verification is successful, the function returns the session data. Otherwise, an error is raised.</p>\',docUrl:"http://www.28msec.com/modules/",params:[]}],"delete-session":[{doc:\'<p>Delete the "_session" cookie from the client. The next user request will not receive a valid session cookie anymore</p>\',docUrl:"http://www.28msec.com/modules/",params:[]},{doc:\'<p>Delete the "_session" cookie from the client. The next user request will not receive a valid session cookie anymore</p>\',docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"validate-session":[{doc:\'<p>Reads the "_session" cookie in the request and verifies if the signature matches the ad-hoc computed signature of the content of the session. The signature is generated with a server private key. If no cookie named "_session" exists, this function returns false.</p>\',docUrl:"http://www.28msec.com/modules/",params:[]}],set:[{doc:"<p>Adds a Set-Cookie header to the response. This function is equivalent to cookie:set($cookie, fn:true()) .</p>",docUrl:"http://www.28msec.com/modules/",params:["$cookie"]},{doc:\'<p>Adds a Set-Cookie header to the response. The cookie parameter needs to adhere to the cookie schema. For example, &lt;cookie:cookie name="xs:string" expires="xs:datetime" domain="xs:string" path="xs:string" secure="xs:boolean"&gt;value&lt;/cookie:cookie&gt; . If the cookie parameter is not valid according to th...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$cookie","$encode"]}],ssign:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$data"]}],get:[{doc:\'<p>Returns the cookie in the request having the given name or the empty sequence if no such cookie exists. The cookie format returned is: &lt;cookie:cookie name=".."&gt;...&lt;/cookie:cookie&gt; . The content of the cookie element is the value of the cookie.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>Returns the cookies in the request having the given name. If no name is given, it returns all available cookies. If no cookie value decoding is wanted, the user must specify a second argument that evaluates to fn:false().</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$decode"]}],"secret-key":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:[]}],"create-session-path":[{doc:"<p>Computes the default path for session cookies if no path is passed by the user. It takes the path of the request URL, up to, but not including, the right-most /. Set http://www.ietf.org/rfc/rfc2109.txt</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}]}},"http://www.28msec.com/modules/http/request":{doc:"<p>The Sausalito request module provides functions for accessing information contained in the current HTTP request. For example, the parameter-names function can be used to retrieve all the names of the parameters contained in a request.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"method-delete":[{doc:"<p>Returns true if the HTTP method of this request is DELETE.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"text-part":[{doc:"<p>Returns the value of a part as string A part is identified by a reference that is the value of a src attribute returned by the request:parts function. The value of the text part is interpreted using the encoding/charset given in the headers of the part. If no encoding is given, the default US-ASCII ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$ref"]},{doc:"<p>Returns the value of a part as string interpreting it with the given encoding. A part is identified by a reference that is the value of a src attribute returned by the request:parts function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$ref","$overwrite-encoding"]}],"server-port":[{doc:"<p>Returns the sever port to which the client making the current request is connected.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"header-names":[{doc:"<p>Returns the names of all the HTTP headers in this request. Header fields are colon-separated name-value pairs, terminated by a carriage return (CR) and line feed (LF) character sequence. The names and values of each header are allowed to consist of US-ASCII characters only. The names of the headers ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"method-get":[{doc:"<p>Returns true if the HTTP method of this request is GET.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"remote-addr":[{doc:"<p>Returns the IP address of the client to which this request is connected.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],method:[{doc:"<p>Returns the name of the HTTP method used to make this request.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"method-put":[{doc:"<p>Returns true if the HTTP method of this request is PUT.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"content-length":[{doc:"<p>Returns the length of the content in bytes. The value returned corresponds to the value of the HTTP content-length header. The function returns an empty sequence if this header does not exist in the request or its value could not be converted to item of type xs:integer .</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"parameter-names":[{doc:\'<p>Returns the names of the parameters contained in the current request. Parameters are name-value pairs contained in the query string of the URL used to make this request. As defined in RFC 1738, the query string of a URL starts with a "?" character and ends with the character (if any). Additionally, ...</p>\',docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the names of the parameters contained in the current request. This function is similar to the request:parameter-names#0 function. However, the names are treated (after precent-decoding) using the given encoding supplied as parameter. For example, parameters might be encoded using the ISO-885...</p>",docUrl:"http://www.28msec.com/modules/",params:["$encoding"]}],"method-post":[{doc:"<p>Returns true if the HTTP method of this request is POST.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"method-head":[{doc:"<p>Returns true if the HTTP method of this request is HEAD.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"content-type":[{doc:"<p>Returns the content-type of the data sent with this request. Note that the content-type is only set for PUT and POST requests.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"parameter-values":[{doc:"<p>Returns a sequence of parameter values for the given parameter name which are contained in the URL\'s query string or the body of a POST or PUT request. Parameters are name-value pairs contained in the query string of the URL used to make this request. As defined in RFC 1738, the query string of a UR...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>Returns a sequence of parameter values for the given parameter name which are contained in the URL\'s query string or the body of a POST or PUT request. This function is similar to the request:parameter-values#1 function. However, instead of returning the empty-sequence as a default value it returns ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$default-values"]},{doc:"<p>Returns a sequence of parameter values for the given parameter name which are contained in the URL\'s query string or the body of a POST or PUT request. This function is similar to the request:parameter-values#2 function. However, the names and values are treated (after precent-decoding) using the gi...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$default-values","$encoding"]}],path:[{doc:"<p>Return the path component of the request URI. The path starts after the host and ends before the query string starts.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"method-options":[{doc:"<p>Returns true if the HTTP method of this request is OPTION.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"user-agent":[{doc:"<p>Returns the user agent that made to perform the current request. This function returns the value of the User-Agent header contained in the current request.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"binary-content":[{doc:"<p>Returns the content of the request as base64Binary.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"header-value":[{doc:"<p>Returns the value of the HTTP header with the given name. Header fields are colon-separated name-value pairs, terminated by a carriage return (CR) and line feed (LF) character sequence. The names and values of each header are allowed to consist of US-ASCII characters only. Please note that header na...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"text-content":[{doc:"<p>Returns the content of the request as string. The function returns the content of the request only if the content-type refers to a type that can be treated as text (e.g. text/* or application/xml). The function raises an error if the content cannot be treated as text. The text content is interpreted...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the content of the request as string interpreting it with the given encoding. The function returns the content of the request only if the content-type refers to a type that can be treated as text (e.g. text/* or application/xml). The function raises an error if the content cannot be treated ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$overwrite-encoding"]}],"query-string":[{doc:"<p>Returns the query string that was used to make this request. The query string contains the part of the request URL that starts with the \'?\' character to the end or the starting of the fragment (i.e. the \'#\' character).</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"remote-port":[{doc:"<p>Returns the port of the client to which this request is connected.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"server-name":[{doc:"<p>Returns the server name of the server running the application. The web server\'s hostname or IP address.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],uri:[{doc:"<p>Returns the URI that was used to make this request. The value returned contains the part of the URL starting from the path to the end or the starting of the fragment (i.e. the \'#\' character).</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"binary-part":[{doc:"<p>Returns the value of a part as base64Binary. A part is identified by a reference that is the value of a src attribute returned by the request:parts function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$ref"]}],parts:[{doc:\'<p>Returns the metadata of all parts contained in a multipart request. The data is returned as an element with name request:mulitpart as shown in the following example. &lt;multipart xmlns="http://www.28msec.com/modules/http/request" media-type="multipart/...; boundary=..."&gt; &lt;header name="Content-Disposit...</p>\',docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.28msec.com/modules/http/response":{doc:"<p>The Sausalito response module can be used to modify the HTTP response that will be send as a result of this request. For example, the set-content-type function can be used to set the Content-Type header and determine the encoding of data in the response.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"set-redirect":[{doc:"<p>This function sets the HTTP 302 redirect status code in the response. As a result, a redirect to the URL given as parameter will be made.</p>",docUrl:"http://www.28msec.com/modules/",params:["$url"]}],"code-for-status":[{doc:"<p>Convert between the HTTP status code as QName and the integer value of that status code.</p>",docUrl:"http://www.28msec.com/modules/",params:["$status"]}],"serializer-defaults-text":[{doc:"<p>Returns an element that can be used to specify the settings of serialization parameters for the text serialization method. The only default used is encoding: UTF-8 For example, this default is used when setting the content-type to some text content-type (e.g. text/plain).</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"content-type-binary":[{doc:"<p>Test if a given content-type is a binary content-type. A content-type is considered to be binary if it\'s not a text content-type.</p>",docUrl:"http://www.28msec.com/modules/",params:["$type"]}],"serializer-defaults-xhtml":[{doc:"<p>Returns an element that can be used to specify the settings of serialization parameters for the XHTML serialization method. The defaults are encoding: UTF-8 indent: yes omit-xml-declaration: yes version: 1.0 doctype-system: http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd doctype-public: -//W...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"set-serialization-parameters":[{doc:"<p>Set the serialization parameters used for serializing the result of the request. The following example shows how to set several options for the HTML serialization method. Specifically, it sets the HTML method to HTML 4.01, set the doctype-system and doctype-public makes sure that the output is inden...</p>",docUrl:"http://www.28msec.com/modules/",params:["$params"]}],"content-type-xhtml":[{doc:\'<p>Test if a given content-type is a XHTML content-type, i.e. the content-type is the string "application/xhtml+xml".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$type"]}],"content-type-html":[{doc:\'<p>Test if a given content-type is a HTML content-type, i.e. the content-type is the string "text/html".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$type"]}],"serializer-defaults-xml":[{doc:"<p>Returns an element that can be used to specify the settings of serialization parameters for the XML serialization method. The defaults are encoding: UTF-8 indent: yes omit-xml-declaration: yes version: 1.0 For example, those defaults are used when setting the content-type to some XML content-type (e...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"set-status-code":[{doc:\'<p>Sets the status code of the HTTP response to the integer given as parameter. For example, resp:set-status(204) will result in "HTTP/1.1 204 No Content".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$status"]}],"content-type-json":[{doc:\'<p>Test if a given content-type is a JSON content-type, i.e. the content-type is the string "application/json".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$type"]}],"set-content-type":[{doc:\'<p>Sets the Content-Type header for the response. For example, resp:set-content-type("text/plain") will cause the header Content-Type: text/plain to be added for the response. In addtion to setting the Content-Type header, the function also sets the serialization parameters to the default values for se...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$type"]},{doc:\'<p>Sets the Content-Type header for the response. For example, resp:set-content-type("text/plain") will cause the header Content-Type: text/plain to be added for the response. In addition to the content-type, the function also allows to specify the serialization method and parameters that will be used ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$type","$params"]}],"serializer-defaults-html":[{doc:"<p>Returns an element that can be used to specify the settings of serialization parameters for the HTML serialization method. The defaults are encoding: UTF-8 indent: yes version: 4.01 doctype-system: http://www.w3.org/TR/html4/loose.dtd doctype-public: -//W3C//DTD HTML 4.01 Transitional//EN include-co...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"set-header":[{doc:"<p>Set a HTTP header in the response. If a header with the same name was already set, the value is overwritten and the function returns the old value. As defined in the HTTP specification, multiple headers with the same name can be combined into one header whose value is a comma-separated list of the v...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$value"]}],"message-for-status":[{doc:"<p>Convert between the HTTP status code as QName and the name/message of that status code.</p>",docUrl:"http://www.28msec.com/modules/",params:["$status"]}],"valid-status":[{doc:"<p>Test whether the given QName refers to a valid HTTP status code.</p>",docUrl:"http://www.28msec.com/modules/",params:["$status"]}],"set-decode-binary":[{doc:"<p>If this function is invoked with true, the result of the request will not be serialized. Instead, the result will be the binary values of any item that is of type xs:base64Binary. The values of all other items will not be part of the result. Please note that all serialization parameters which have b...</p>",docUrl:"http://www.28msec.com/modules/",params:["$decode"]}],"set-status":[{doc:\'<p>Sets the status code of the HTTP response to the QName given as parameter. For example, resp:set-status($http:no-content) will result in "HTTP/1.1 204 No Content".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$status"]}],"set-encoding":[{doc:\'<p>The function sets the output encoding that will be used for the payload of the response. For example, resp:set-encoding("ISO-8859-1") will cause the content in the response to be encoded using ISO-8859-1. Please note that the encoding only applies to textual data. It is not used if the function set-...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$encoding"]}],"serialization-parameters":[{doc:"<p>Returns the serialization parameters that are currently active, i.e. the ones that will be used to serialize the result of this request. This will either be the default, the defaults set when calling resp:set-content-type(), or the ones set by resp:set-serialization-parameters().</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"content-type-xml":[{doc:\'<p>Test if a given content-type is a XML content-type A XML content-type is a content-type that is "application/xml" or ends : with the string "+xml".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$type"]}],"content-type-text":[{doc:\'<p>Test if a given content-type is a text content-type. A text content-type starts with "text/" or contains either of the strings "xml" or "json".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$type"]}],"decode-binary":[{doc:"<p>Returns the boolean indiciating whether base64Binaries returned by this request will be decoded. The default if not modified using resp:set-decode-binary is false.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"set-header-impl":[{doc:"<p>Set a HTTP header in the response.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$value"]}],"serializer-defaults-jsoniq":[{doc:"<p>Returns an element that can be used to specify the settings of serialization parameters for the JSONiq serialization method. The defaults are encoding: UTF-8 indent: yes omit-xml-declaration: yes version: 1.0 jsoniq-extensions: yes jsoniq-xdm-node-output-method: xml jsoniq-multiple-items: appended F...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.28msec.com/modules/http/util/cache":{doc:"<p>This module contains a collection of convenience functions to help developers work with HTTP caching options.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"no-cache":[{doc:"<p>Forces a client not to cache the response by setting the appropriate HTTP headers. In detail, the following HTTP headers will be set in the response: Cache-Control: no-cache Pragma: no-cache Expires: 0</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.28msec.com/modules/http/util/diagnostic":{doc:"<p>This module provides utility functions to help with diagnostic analysis / debugging of RESTful Apps or webapps.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"serialize-request-as-xml":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:[]}],"serialize-request-as-txt":[{doc:"<p>Returns a sequence of xs:string listing all request characteristics. This function is helpful for debugging purposes. It can be used to output request information as plan text.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"serialize-request-as-html":[{doc:"<p>Returns a sequence of html elements listing all request characteristics. This function is helpful for debugging purposes. It can be used to output request information within an HTML page.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.28msec.com/modules/http/util/multipart":{doc:"<p>This module provides utility functions to help dealing with the content of multipart requests. In their implementation, all the functions use the multipart related functions of the request module (e.g. parts() or text-part()).</p>",docUrl:"http://www.28msec.com/modules/",functions:{"binary-file":[{doc:"<p>Returns the contents of the part/file in the multipart requests with the given filename as xs:base64Binary. Please note that the file is identified by the filename (and not the name of the part) that is contained in the Content-Disposition header of the part.</p>",docUrl:"http://www.28msec.com/modules/",params:["$filename"]}],"content-length":[{doc:"<p>Returns the content length of the parts/files in the multipart requests with the given part name as xs:integer.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],names:[{doc:"<p>Returns the names of all the parts contained in the multipart content of the given request.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"text-file":[{doc:"<p>Returns the contents of the part/file in the multipart requests with the given filename as a string. It is assumed that the character set of the file is UTF-8. Please note that the file is identified by the filename (and not the name of the part) that is contained in the Content-Disposition header o...</p>",docUrl:"http://www.28msec.com/modules/",params:["$filename"]}],"content-type":[{doc:"<p>Returns the content type of the parts/files in the multipart requests with the given part name as xs:string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],part:[{doc:"<p>Returns the req:part element among all the parts contained in the multipart requests with the given name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],filename:[{doc:"<p>Returns the filenames of the parts/files in the multipart requests with the given part name as xs:string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"binary-content":[{doc:"<p>Returns the contents of the parts/files in the multipart requests with the given part name as xs:base64Binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"text-content":[{doc:"<p>Returns the contents of the parts/files in the multipart requests with the given part name as a string. It is assumed that the character set of the file is UTF-8.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],filenames:[{doc:"<p>Returns the filenames of all the parts contained in the multipart content of the given request.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.28msec.com/modules/lock":{doc:"<p>Sausalito provides a an application level locking mechanism that can be used e.g. to ensure exclusive access to data. As the store ensures atomicity of of single document updates, atomic updates to multiple documents are implemented using this mechanism. Locks can be acquired and re-acquired at any ...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"try-acquire":[{doc:\'<p>Tries to acquire a lock. This operation is non-blocking if the lock cannot be acquired immediately. To check and modify the stock of a product wihtout interference from concurrent requests a lock could be used like this: if (lock:try-acquire("stock-update")) then if (stock:check($product-id)) then {...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$lock-name"]},{doc:"<p>tries to acquire a lock</p>",docUrl:"http://www.28msec.com/modules/",params:["$lock-name","$reason"]}]}},"http://www.28msec.com/modules/mongodb":{doc:\'<p>This module provides a driver to access a MongoDB database - similar to drivers for other high-level languages like e.g. PyMongo . Here is a simple example of how we can raise the salary of each developer by 10%. Starting with an employees collection in MongoDB that contains { "name" : "Peter", "rol...</p>\',docUrl:"http://www.28msec.com/modules/",functions:{count:[{doc:"<p>Counts the number of documents in the given collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll"]}],remove:[{doc:"<p>Performs a remove operation on the given collection. The operation will be checked and an error is raised if one of them fails.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$remove"]},{doc:"<p>Performs a remove operation on the given collection. safe: If to true, the operation will wait for a response from the database and an error is raised if the operation fails. Otherwise, the operation will not wait for a response. just-one: true if the operation should stop after a single match has b...</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$remove","$options"]}],"is-connected":[{doc:"<p>Checks if the given identifiers is valid and the corresponding connection is open.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db"]}],update:[{doc:"<p>Performs an update command on the given collection. The operation will be checked and an error is raised if one of them fails. Also, this function only modifies one document matching the query and does not do any upserts.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$query","$update"]},{doc:"<p>Performs an update operation on the given collection. safe: If to true, the operation will wait for a response from the database and an error is raised if the operation fails. Otherwise, the operation will not wait for a response. multi: indicates if all documents matching criteria should be updated...</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$query","$update","$options"]}],connect:[{doc:"<p>Connect to a MongoDB database. The options object can contain the following values: host (string; mandatory) port (integer; default: 27017) db (string; mandatory) user (string) pass (string)</p>",docUrl:"http://www.28msec.com/modules/",params:["$options"]},{doc:"<p>Connect to a MongoDB database.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host","$port","$db","$user","$pass"]}],disconnect:[{doc:"<p>Disconnect from a MongoDB database.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db"]}],save:[{doc:\'<p>Save a sequence of documents in the given collection. If a document to be save already has an "_id" field, then an upsert operation is performed an any existing document with that id will be overwritten. Otherwise, an insert operation is performed and the "_id" generated for each document will be re...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$doc"]},{doc:\'<p>Save a sequence of documents in the given collection. If a document to be saved already has an "_id" field, then an upsert operation is performed and any existing document with that id will be overwritten. Otherwise, an insert operation is performed If the manipulate option is set to true, an "_id" ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$doc","$options"]}],find:[{doc:"<p>Returns all objects of the given collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll"]},{doc:"<p>Performs a query operation on the given collection and returns all matches.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$query"]},{doc:"<p>Performs a query operation on the given collection and returns all matches.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$query","$options"]},{doc:"<p>Performs a query operation on the given collection and returns all matches. Available options: to-return: the maximum number of objects to return (0 = unlimited) to-skip: start with the n-th object batch-size: the number of objects to return in one batch slave-ok: allow this query to be run against ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll","$query","$projection","$options"]}],"drop-collection":[{doc:"<p>Drop a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db","$coll"]}],"collection-names":[{doc:"<p>Get a list of all the collection names in this database.</p>",docUrl:"http://www.28msec.com/modules/",params:["$db"]}]}},"http://www.28msec.com/modules/sequence":{doc:"<p>The sequence module allows you to generate consecutive application-unique xs:integer ids. This is required e.g. in accounting applications as some legislations require consecutive invoice numbers.</p>",docUrl:"http://www.28msec.com/modules/",functions:{id:[{doc:\'<p>Returns a unique (sequentially incremented) id for the uri specified as parameter. Here the function is used to create consecutive invoice numbers: if (order:fulfilled($order-id)) then { variable $invoice-id := seq:id("invoice"); invoice:create($invoice-id, $order-id); } else ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],"acquire-lock":[{doc:"<p>Tries to acquire a lock that ensures consistent modifications of the counter for the uri specified as parameter. Throws seq:failed if the lock cannnot be acquired.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],reset:[{doc:"<p>Resets the unique (sequentially incremented) id generation for the uri specified as parameter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],value:[{doc:"<p>Returns the id for the uri specified as parameter without incrementing it.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}]}},"http://www.28msec.com/modules/sleep":{doc:"<p>This module provides a function to put the currently executing request to sleep.</p>",docUrl:"http://www.28msec.com/modules/",functions:{millis:[{doc:\'<p>Puts the currently executing request to sleep. This function is mainly useful in development e.g. to simulate the effects of long-running tasks wrt. the concurrent execution of requests. Here the function is used to simulate a request that runs for 1 second declare $acquired := lock:try-acquire("my-...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$millis"]}]}},"http://www.28msec.com/modules/store":{doc:"<p>This modules provides functions that allow to have more control over the data store. For example, the flush() function may be used to synchronously flush all pending modifications and make them available to other requests.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"flush-if":[{doc:\'<p>Same functionality as the flush function, but it only flushes conditionally. A typical use of this function to bulkload a large number of nodes could look as follows: for $i at $y in 1 to 8193 return { store:flush-if($y mod 100 eq 0); db:insert-nodes(xs:QName("foo:mycollection"), {$i} ); }</p>\',docUrl:"http://www.28msec.com/modules/",params:["$cond"]}],flush:[{doc:"<p>The flush function flushes all pending modifications to persistent storage such that they are immediately available to other requests. This function is particularly useful if a huge number of modifications (i.e. updates to nodes or collections) are made during one request or during the initial bulkl...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],clear:[{doc:"<p>The clear function completely clears Sausalito\'s buffer. It is an error if the currently executing request references an item in the buffer as the buffer cannot be completely cleared in that case. This function is mainly useful in development e.g. to verify that the data in the presistent storage is...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"clear-if":[{doc:"<p>Same functionality as the clear function, but it only clears conditionally.</p>",docUrl:"http://www.28msec.com/modules/",params:["$cond"]}]}},"http://www.28msec.com/modules/ws/mailchimp":{doc:"<p>Mailchimp Client Module.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"list-clients":[{doc:"<p>Convenience function for list-clients#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Retrieve the clients that the list\'s subscribers have been tagged as being used based on user agents seen. Made possible by user-agent-string.info double penetration the percent of desktop clients in use array clients a record containing the \'client\', an \'icon\' image url, the \'percent\' using the cli...</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"campaign-unschedule":[{doc:"<p>Convenience function for campaign-unschedule#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Unschedule a campaign that is scheduled to be sent in the future.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"campaign-share-report":[{doc:"<p>Convenience function for campaign-share-report#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$opts"]},{doc:"<p>Get the URL to a customized VIP Report for the specified campaign and optionally send an email to someone with links to it. Note subsequent calls will overwrite anything already set for the same campign (eg, the password).</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$opts"]}],"list-merge-var-del":[{doc:"<p>Convenience function for list-merge-var-del#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$tag"]},{doc:"<p>Delete a merge tag from a given list and all its members. Seriously - the data is removed from all members as well! Note that on large lists this method may seem a bit slower than calls you typically make.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$tag"]}],"folder-add":[{doc:"<p>Convenience function for folder-add#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$name","$type"]},{doc:"<p>Add a new folder to file campaigns or autoresponders in.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$name","$type"]}],apikeys:[{doc:"<p>Convenience function for apikeys#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$username","$password","$apikey","$expired"]},{doc:"<p>Retrieve a list of all MailChimp API Keys for this User.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$username","$password","$apikey","$expired"]}],"campaign-geo-opens":[{doc:"<p>Convenience function for campaign-geo-opens#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Retrieve the countries and number of opens tracked for each. Email address are not returned.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"campaign-email-stats-AIM-all":[{doc:"<p>Convenience function for campaign-email-stats-AIM-all#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit"]},{doc:"<p>Given a campaign and correct paging limits, return the entire click and open history with timestamps, ordered by time, for every user a campaign was delivered to.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit"]}],"list-static-segment-del":[{doc:"<p>Convenience function for list-static-segment-del#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$seg_id"]},{doc:"<p>Delete a static segment. Note that this will, of course, remove any member affiliations with the segment.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$seg_id"]}],"list-abuse-reports":[{doc:"<p>Convenience function for list-abuse-reports#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$start","$limit","$since"]},{doc:"<p>Get all email addresses that complained about a given campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$start","$limit","$since"]}],"list-batch-subscribe":[{doc:"<p>Convenience function for list-batch-subscribe#7 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$batch","$double_optin","$update_existing","$replace_interests"]},{doc:"<p>Subscribe a batch of email addresses to a list at once. If you are using a serialized version of the API, we strongly suggest that you only run this method as a POST request, and not a GET request. Maximum batch sizes vary based on the amount of data in each record, though you should cap them at 5k ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$batch","$double_optin","$update_existing","$replace_interests"]}],"list-static-segment-members-del":[{doc:"<p>Convenience function for list-static-segment-members-del#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$seg_id","$batch"]},{doc:"<p>Remove list members from a static segment. It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list in order to be removed - this will not unsubscribe them from the list!.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$seg_id","$batch"]}],"list-interest-groupings":[{doc:"<p>Convenience function for list-interest-groupings#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Get the list of interest groupings for a given list, including the label, form information, and included groups for each.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"get-account-details":[{doc:"<p>Convenience function for get-account-details#2 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey"]},{doc:"<p>Retrieve lots of account information including payments made, plan info, some account stats, installed modules, contact info, and more.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey"]}],"ecomm-order-add":[{doc:"<p>Convenience function for ecomm-order-add#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$order"]},{doc:"<p>Import Ecommerce Order Information to be used for Segmentation.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$order"]}],"campaign-create":[{doc:"<p>Convenience function for campaign-create#7 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$type","$options","$content","$segment_opts","$type_opts"]},{doc:"<p>Create a new draft campaign to send. You can not have more than 32,000 campaigns in your account.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$type","$options","$content","$segment_opts","$type_opts"]}],"list-static-segments":[{doc:"<p>Convenience function for list-static-segments#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Retrieve all of the Static Segments for a list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"campaign-bounce-message":[{doc:"<p>Convenience function for campaign-bounce-message#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$email"]},{doc:"<p>Retrieve the most recent full bounce message for a specific email address on the given campaign. Messages over 30 days old are subject to being removed.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$email"]}],"campaign-hard-bounces":[{doc:"<p>Convenience function for campaign-hard-bounces#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit"]},{doc:"<p>DEPRECATED Get all email addresses with Hard Bounces for a given campaign the email address that bounced.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit"]}],"template-update":[{doc:"<p>Convenience function for template-update#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$values"]},{doc:"<p>Replace the content of a user template, NOT campaign content.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$values"]}],"campaign-template-content":[{doc:"<p>Convenience function for campaign-template-content#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Get the HTML template content sections for a campaign. Note that this will return very jagged, non-standard results based on the template a campaign is using. You only want to use this if you want to allow editing template sections in your applicaton.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"list-member-activity":[{doc:"<p>Convenience function for list-member-activity#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$email_address"]},{doc:"<p>Get the most recent 100 activities for particular list members (open, click, bounce, unsub, abuse, sent to).</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$email_address"]}],"list-interest-grouping-update":[{doc:"<p>Convenience function for list-interest-grouping-update#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$grouping_id","$name","$value"]},{doc:"<p>Update an existing Interest Grouping.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$grouping_id","$name","$value"]}],"campaign-ecomm-order-add":[{doc:"<p>Convenience function for campaign-ecomm-order-add#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$order"]},{doc:"<p>Attach Ecommerce Order Information to a Campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$order"]}],"campaign-resume":[{doc:"<p>Convenience function for campaign-resume#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Resume sending an AutoResponder or RSS campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"campaign-content":[{doc:"<p>Convenience function for campaign-content#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$for_archive"]},{doc:"<p>Get the content (both html and text) for a campaign either as it would appear in the campaign archive or as the raw, original content.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$for_archive"]}],"list-update-member":[{doc:"<p>Convenience function for list-update-member#7 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$email_address","$merge_vars","$email_type","$replace_interests"]},{doc:"<p>Edit the email address, merge fields, and interest groups for a list member. If you are doing a batch update on lots of users, consider using #list-batch-subscribe() with the update_existing and possible replace_interests parameter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$email_address","$merge_vars","$email_type","$replace_interests"]}],"campaign-schedule":[{doc:"<p>Convenience function for campaign-schedule#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$schedule_time","$schedule_time_b"]},{doc:"<p>Schedule a campaign to be sent in the future.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$schedule_time","$schedule_time_b"]}],"folder-del":[{doc:"<p>Convenience function for folder-del#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$fid","$type"]},{doc:"<p>Delete a campaign or autoresponder folder. Note that this will simply make campaigns in the folder appear unfiled, they are not removed.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$fid","$type"]}],"list-interest-group-update":[{doc:"<p>Convenience function for list-interest-group-update#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$old_name","$new_name","$grouping_id"]},{doc:"<p>Change the name of an Interest Group.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$old_name","$new_name","$grouping_id"]}],"campaign-bounce-messages":[{doc:"<p>Convenience function for campaign-bounce-messages#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit","$since"]},{doc:"<p>Retrieve the full bounce messages for the given campaign. Note that this can return very large amounts of data depending on how large the campaign was and how much cruft the bounce provider returned.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit","$since"]}],"list-locations":[{doc:"<p>Convenience function for list-locations#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Retrieve the locations (countries) that the list\'s subscribers have been tagged to based on geocoding their IP address.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"campaign-abuse-reports":[{doc:"<p>Convenience function for campaign-abuse-reports#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$since","$start","$limit"]},{doc:"<p>Get all email addresses that complained about a given campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$since","$start","$limit"]}],"list-merge-vars":[{doc:"<p>Convenience function for list-merge-vars#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Get the list of merge tags for a given list, including their name, tag, and required setting.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],folders:[{doc:"<p>Convenience function for folders#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$type"]},{doc:"<p>List all the folders for a user account.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$type"]}],"campaign-analytics":[{doc:"<p>Convenience function for campaign-analytics#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Retrieve the Google Analytics data we\'ve collected for this campaign. Note, requires Google Analytics Add-on to be installed and configured.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"list-activity":[{doc:"<p>Convenience function for list-activity#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Access up to the previous 180 days of daily detailed aggregated activity stats for a given list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"list-growth-history":[{doc:"<p>Convenience function for list-growth-history#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Access the Growth History by Month for a given list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"campaign-unsubscribes":[{doc:"<p>Convenience function for campaign-unsubscribes#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit"]},{doc:"<p>Get all unsubscribed email addresses for a given campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit"]}],"list-webhook-add":[{doc:"<p>Convenience function for list-webhook-add#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$url","$actions","$sources"]},{doc:"<p>Add a new Webhook URL for the given list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$url","$actions","$sources"]}],campaigns:[{doc:"<p>Convenience function for campaigns#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$filters","$start","$limit"]},{doc:"<p>Get the list of campaigns and their details matching the specified filters.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$filters","$start","$limit"]}],"ecomm-order-del":[{doc:"<p>Convenience function for ecomm-order-del#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$store_id","$order_id"]},{doc:"<p>Delete Ecommerce Order Information used for segmentation. This will generally be used by ecommerce package plugins that we provide or by 3rd part system developers.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$store_id","$order_id"]}],"template-add":[{doc:"<p>Convenience function for template-add#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$name","$html"]},{doc:"<p>Create a new user template, NOT campaign content. These templates can then be applied while creating campaigns.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$name","$html"]}],"list-members":[{doc:"<p>Convenience function for list-members#7 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$status","$since","$start","$limit"]},{doc:"<p>Get all of the list members for a list that are of a particular status.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$status","$since","$start","$limit"]}],"campaign-click-detail-AIM":[{doc:"<p>Convenience function for campaign-click-detail-AIM#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$url","$start","$limit"]},{doc:"<p>Return the list of email addresses that clicked on a given url, and how many times they clicked.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$url","$start","$limit"]}],"list-merge-var-update":[{doc:"<p>Convenience function for list-merge-var-update#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$tag","$options"]},{doc:"<p>Update most parameters for a merge tag on a given list. You cannot currently change the merge type.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$tag","$options"]}],"campaign-geo-opens-for-country":[{doc:"<p>Convenience function for campaign-geo-opens-for-country#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$code"]},{doc:"<p>Retrieve the regions and number of opens tracked for a certain country. Email address are not returned.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$code"]}],"apikey-add":[{doc:"<p>Convenience function for apikey-add#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$username","$password","$apikey"]},{doc:"<p>Add an API Key to your account. We will generate a new key for you and return it.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$username","$password","$apikey"]}],"campaign-not-opened-AIM":[{doc:"<p>Convenience function for campaign-not-opened-AIM#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit"]},{doc:"<p>Retrieve the list of email addresses that did not open a given campaign string email Email address that opened the campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit"]}],"campaign-email-domain-performance":[{doc:"<p>Convenience function for campaign-email-domain-performance#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Get the top 5 performing email domains for this campaign. Users want more than 5 should use campaign campaign-email-stats-AIM() or campaign-email-stats-AIM-all() and generate any additional stats they require.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"campaign-ecomm-orders":[{doc:"<p>Convenience function for campaign-ecomm-orders#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit","$since"]},{doc:"<p>Retrieve the Ecommerce Orders tracked by campaign-ecomm-order-add() .</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit","$since"]}],"list-interest-group-add":[{doc:"<p>Convenience function for list-interest-group-add#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$group_name","$grouping_id"]},{doc:"<p>Add a single Interest Group - if interest groups for the List are not yet enabled, adding the first group will automatically turn them on.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$group_name","$grouping_id"]}],"campaign-eep-url-stats":[{doc:"<p>Convenience function for campaign-eep-url-stats#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Retrieve the tracked eepurl mentions on Twitter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"list-unsubscribe":[{doc:"<p>Convenience function for list-unsubscribe#7 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$email_address","$delete_member","$send_goodbye","$send_notify"]},{doc:"<p>Unsubscribe the given email address from the list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$email_address","$delete_member","$send_goodbye","$send_notify"]}],"generate-text":[{doc:"<p>Convenience function for generate-text#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$type","$content"]},{doc:"<p>Have HTML content auto-converted to a text-only format. You can send: plain HTML, an array of Template content, an existing Campaign Id, or an existing Template Id. Note that this will not save anything to or update any of your lists, campaigns, or templates.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$type","$content"]}],"campaign-opened-AIM":[{doc:"<p>Convenience function for campaign-openedAIM#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit"]},{doc:"<p>Retrieve the list of email addresses that opened a given campaign with how many times they opened.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit"]}],"list-webhook-del":[{doc:"<p>Convenience function for list-webhook-del#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$url"]},{doc:"<p>Delete an existing Webhook URL from a given list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$url"]}],"campaign-stats":[{doc:"<p>Convenience function for campaign-stats#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Given a list and a campaign, get all the relevant campaign statistics (opens, bounces, clicks, etc.)</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"campaign-delete":[{doc:"<p>Convenience function for campaign-delete#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:\'<p>Delete a campaign. Seriously, "poof, gone!" - be careful!.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"ecomm-orders":[{doc:"<p>Convenience function for ecomm-orders#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$start","$limit","$since"]},{doc:"<p>Retrieve the Ecommerce Orders for an account.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$start","$limit","$since"]}],"list-batch-unsubscribe":[{doc:"<p>Convenience function for list-batch-unsubscribe#7 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$emails","$delete_member","$send_goodbye","$send_notify"]},{doc:"<p>Unsubscribe a batch of email addresses to a list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$emails","$delete_member","$send_goodbye","$send_notify"]}],"template-del":[{doc:"<p>Convenience function for template-del#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Delete (deactivate) a user template.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"list-interest-grouping-add":[{doc:"<p>Convenience function for list-interest-grouping-add#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$name","$type","$groups"]},{doc:"<p>Add a new Interest Grouping - if interest groups for the List are not yet enabled, adding the first grouping will automatically turn them on.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$name","$type","$groups"]}],"campaign-pause":[{doc:"<p>Convenience function for campaign-pause#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Pause an AutoResponder or RSS campaign from sending.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"campaign-update":[{doc:"<p>Convenience function for campaign-update#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$name","$value"]},{doc:"<p>Update just about any setting for a campaign that has not been sent. See campaigncreate() for details. Caveats: If you set list_id, all segmentation options will be deleted and must be re-added. If you set template_id, you need to follow that up by setting it\'s \'content\' If you set segment_opts, you...</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$name","$value"]}],"campaign-advice":[{doc:"<p>Convenience function for campaign-advice#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Retrieve the text presented in our app for how a campaign performed and any advice we may have for you - best suited for display in customized reports pages. Note: some messages will contain HTML - clean tags as necessary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"template-undel":[{doc:"<p>Convenience function for template-undel#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Undelete (reactivate) a user template.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],templates:[{doc:"<p>Convenience function for templates#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$types","$category","$inactives"]},{doc:"<p>Retrieve various templates available in the system, allowing some thing similar to our template gallery to be created. boolean user Customer template for this user account. Defaults to true. boolean gallery Templates from our Gallery. Note that some templates that require extra configuration are wit...</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$types","$category","$inactives"]}],"template-info":[{doc:"<p>Convenience function for template-info#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$tid","$type"]},{doc:"<p>Pull details for a specific template to help support editing.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$tid","$type"]}],"list-interest-group-del":[{doc:"<p>Convenience function for list-interest-group-del#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$group_name","$grouping_id"]},{doc:"<p>Delete a single Interest Group - if the last group for a list is deleted, this will also turn groups for the list off.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$group_name","$grouping_id"]}],"campaign-send-test":[{doc:"<p>Convenience function for campaign-send-test#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$test_emails","$send_type"]},{doc:"<p>Send a test of this campaign to the provided email address.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$test_emails","$send_type"]}],lists:[{doc:"<p>Convenience function for lists#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$filters","$start","$limit"]},{doc:"<p>Retrieve all of the lists defined for your user account.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$filters","$start","$limit"]}],"campaign-email-stats-AIM":[{doc:"<p>Convenience function for campaign-email-stats-AIM#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$email_address"]},{doc:"<p>Given a campaign and email address, return the entire click and open history with timestamps, ordered by time.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$email_address"]}],"campaigns-for-email":[{doc:"<p>Convenience function for campaigns-for-email#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$email_address"]},{doc:"<p>Retrieve all Campaigns Ids a member was sent.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$email_address"]}],"list-merge-var-add":[{doc:"<p>Convenience function for list-merge-var-add#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$tag","$name","$options"]},{doc:"<p>Add a new merge tag to a given list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$tag","$name","$options"]}],"campaign-segment-test":[{doc:"<p>Convenience function for campaign-segment-test#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$list_id","$options"]},{doc:"<p>Allows one to test their segmentation rules before creating a campaign using them.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$list_id","$options"]}],ping:[{doc:"<p>Convenience function for ping#2 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey"]},{doc:\'<p>"Ping" the MailChimp API - a simple method you can call that will return a constant value as long as everything is good. Note than unlike most all of our methods, we don\\\'t throw an Exception if we are having issues. You will simply receive a different string back that will explain our view on what i...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey"]}],"campaign-click-stats":[{doc:"<p>Convenience function for campaign-click-stats#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Get an array of the urls being tracked, and their click counts for a given campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"campaign-replicate":[{doc:"<p>Convenience function for campaign-replicate#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:"<p>Replicate a campaign.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"list-static-segment-add":[{doc:"<p>Convenience function for list-static-segment-add#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$name"]},{doc:"<p>Save a segment against a list for later use. There is no limit to the number of segments which can be saved. Static Segments are not tied to any merge data, interest groups, etc. They essentially allow you to configure an unlimited number of custom segments which will have standard performance. When...</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$name"]}],"folder-update":[{doc:"<p>Convenience function for folder-update#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$fid","$name","$type"]},{doc:"<p>Update the name of a folder for campaigns or autoresponders.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$fid","$name","$type"]}],"list-interest-grouping-del":[{doc:"<p>Convenience function for list-interest-grouping-del#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$grouping_id"]},{doc:"<p>Delete an existing Interest Grouping - this will permanently delete all contained interest groups and will remove those selections from all list members.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$grouping_id"]}],"campaign-members":[{doc:"<p>Convenience function for campaign-members#6 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$status","$start","$limit"]},{doc:"<p>Get all email addresses the campaign was successfully sent to (ie, no bounces).</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$status","$start","$limit"]}],"list-static-segment-members-add":[{doc:"<p>Convenience function for list-static-segment-members-add#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$seg_id","$batch"]},{doc:"<p>Add list members to a static segment. It is suggested that you limit batch size to no more than 10,000 addresses per call. Email addresses must exist on the list in order to be included - this will not subscribe them to the list!.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$seg_id","$batch"]}],"campaign-send-now":[{doc:"<p>Convenience function for campaign-send-now#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid"]},{doc:\'<p>Send a given campaign immediately. For RSS campaigns, this will "start" them.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid"]}],"list-subscribe":[{doc:"<p>Subscribe the provided email to a list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$email_address","$merge_vars","$email_type","$double_optin","$update_existing","$replace_interests","$send_welcome"]},{doc:"<p>Convenience function for list-subscribe#10 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$email_address","$merge_vars","$email_type","$double_optin","$update_existing","$replace_interests","$send_welcome"]}],"lists-for-email":[{doc:"<p>Convenience function for lists-for-email#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$email_address"]},{doc:"<p>Retrieve all List Ids a member is subscribed to.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$email_address"]}],"apikey-expire":[{doc:"<p>Convenience function for apikey-expire#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$username","$password","$apikey"]},{doc:"<p>Expire a Specific API Key. Note that if you expire all of your keys, just visit your API dashboard to create a new one. If you are trying to shut off access to your account for an old developer, change your MailChimp password, then expire all of the keys they had access to. Note that this takes effe...</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$username","$password","$apikey"]}],"inline-css":[{doc:"<p>Convenience function for inline-css#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$html","$strip_css"]},{doc:"<p>Send your HTML content to have the CSS inlined and optionally remove the original styles.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$html","$strip_css"]}],"campaign-soft-bounces":[{doc:"<p>Convenience function for campaign-soft-bounces#5 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$cid","$start","$limit"]},{doc:"<p>DEPRECATED Get all email addresses with Soft Bounces for a given campaign the email address that bounced.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$cid","$start","$limit"]}],"chimp-chatter":[{doc:"<p>Convenience function for chimp-chatter#2 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey"]},{doc:"<p>Return the current Chimp Chatter messages for an account.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey"]}],"list-webhooks":[{doc:"<p>Convenience function for list-webhooks#3 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id"]},{doc:"<p>Return the Webhooks configured for the given list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id"]}],"list-member-info":[{doc:"<p>Convenience function for list-member-info#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$email_address"]},{doc:"<p>Get all the information for particular members of a list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$email_address"]}],"list-static-segment-reset":[{doc:"<p>Convenience function for list-static-segment-reset#4 .</p>",docUrl:"http://www.28msec.com/modules/",params:["$apikey","$id","$seg_id"]},{doc:"<p>Resets a static segment - removes all members from the static segment. Note: does not actually affect list member data.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$apikey","$id","$seg_id"]}]}},"http://www.28msec.com/modules/xmlrpc":{doc:\'<p>XML RPC Client Module This module provides the functions necessary to execute remote call procedures using XML-RPC . The application/mashup creator does not need to know the specifics of XML-RPC to use this module. Usage: xmlrpc:invoke("http://www.advogato.org/XMLRPC", "test.sumprod", (5, 7)) xmlrpc...</p>\',docUrl:"http://www.28msec.com/modules/",functions:{invoke:[{doc:"<p>Invoke a remote method without parameters. Calling this function is equivalent to xmlrpc:invoke($url, $method, ())</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$method"]},{doc:"<p>Invoke a remote method with parameters.</p>",docUrl:"http://www.28msec.com/modules/",params:["$endpoint-url","$method","$parameters"]}],payload:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$method","$params"]}],"set-content-type":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$request"]}],"set-method":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$request"]}],result:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$body"]}],serialize:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],unserialize:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}]}},"http://www.functx.com/":{doc:"<p>-------------------------------- The FunctX XQuery Function Library -------------------------------- Copyright (C) 2007 Datypic This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundatio...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"add-or-update-attributes":[{doc:"<p>Adds attributes to XML elements</p>",docUrl:"http://www.28msec.com/modules/",params:["$elements","$attrNames","$attrValues"]}],"line-count":[{doc:"<p>The number of lines</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"has-empty-content":[{doc:"<p>Whether an element has empty content</p>",docUrl:"http://www.28msec.com/modules/",params:["$element"]}],"has-element-only-content":[{doc:"<p>Whether an element has element-only content</p>",docUrl:"http://www.28msec.com/modules/",params:["$element"]}],"sort-case-insensitive":[{doc:"<p>Sorts a sequence of values or nodes regardless of capitalization</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],"duration-from-timezone":[{doc:\'<p>Converts a timezone like "-05:00" or "Z" into xs:dayTimeDuration</p>\',docUrl:"http://www.28msec.com/modules/",params:["$timezone"]}],"is-descendant":[{doc:"<p>Whether an XML node is a descendant of another node</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"is-leap-year":[{doc:"<p>Whether a date falls in a leap year</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"next-day":[{doc:"<p>The next day</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"contains-any-of":[{doc:"<p>Whether a string contains any of a sequence of strings</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$searchStrings"]}],"is-node-among-descendants-deep-equal":[{doc:"<p>Whether an XML node is among the descendants of a sequence, based on contents and attributes</p>",docUrl:"http://www.28msec.com/modules/",params:["$node","$seq"]}],"max-node":[{doc:"<p>The XML node whose typed value is the maximum</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"index-of-string-last":[{doc:"<p>The last position of a substring</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$substring"]}],"is-absolute-uri":[{doc:"<p>Whether a URI is absolute</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],"day-of-week-abbrev-en":[{doc:"<p>The abbreviated day of the week, from a date, in English</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"min-non-empty-string":[{doc:\'<p>The minimum of a sequence of strings, ignoring "empty" values</p>\',docUrl:"http://www.28msec.com/modules/",params:["$strings"]}],"between-inclusive":[{doc:"<p>Whether a value is between two provided values, or equal to one of them</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$minValue","$maxValue"]}],"add-months":[{doc:"<p>Adds months to a date</p>",docUrl:"http://www.28msec.com/modules/",params:["$date","$months"]}],"max-depth":[{doc:"<p>The maximum depth of elements in an XML tree</p>",docUrl:"http://www.28msec.com/modules/",params:["$root"]}],time:[{doc:"<p>Construct a time from an hour, minute and second</p>",docUrl:"http://www.28msec.com/modules/",params:["$hour","$minute","$second"]}],"update-attributes":[{doc:"<p>Updates the attribute value of an XML element</p>",docUrl:"http://www.28msec.com/modules/",params:["$elements","$attrNames","$attrValues"]}],"first-day-of-month":[{doc:"<p>The first day of the month of a date</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"path-to-node-with-pos":[{doc:"<p>A unique path to an XML node (or sequence of nodes)</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],"right-trim":[{doc:"<p>Trims trailing whitespace</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"distinct-deep":[{doc:"<p>The XML nodes with distinct values, taking into account attributes and descendants</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"index-of-string-first":[{doc:"<p>The first position of a substring</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$substring"]}],"timezone-from-duration":[{doc:\'<p>Converts an xs:dayTimeDuration into a timezone like "-05:00" or "Z"</p>\',docUrl:"http://www.28msec.com/modules/",params:["$duration"]}],"contains-case-insensitive":[{doc:"<p>Whether one string contains another, without regard to case</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$substring"]}],"value-except":[{doc:"<p>The values in one sequence that aren\'t in another sequence</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"last-day-of-month":[{doc:"<p>The last day of the month of a date</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"add-attributes":[{doc:"<p>Adds attributes to XML elements</p>",docUrl:"http://www.28msec.com/modules/",params:["$elements","$attrNames","$attrValues"]}],"copy-attributes":[{doc:"<p>Copies attributes from one element to another</p>",docUrl:"http://www.28msec.com/modules/",params:["$copyTo","$copyFrom"]}],"replace-multi":[{doc:"<p>Performs multiple replacements, using pairs of replace parameters</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$changeFrom","$changeTo"]}],"between-exclusive":[{doc:"<p>Whether a value is between two provided values</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$minValue","$maxValue"]}],"replace-element-values":[{doc:"<p>Updates the content of one or more elements</p>",docUrl:"http://www.28msec.com/modules/",params:["$elements","$values"]}],chars:[{doc:"<p>Converts a string to a sequence of characters</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"word-count":[{doc:"<p>The number of words</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"remove-elements":[{doc:"<p>Removes child elements from an XML node, based on name</p>",docUrl:"http://www.28msec.com/modules/",params:["$elements","$names"]}],"id-untyped":[{doc:"<p>Gets XML element(s) that have an attribute with a particular value</p>",docUrl:"http://www.28msec.com/modules/",params:["$node","$id"]}],"previous-day":[{doc:"<p>The previous day</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"atomic-type":[{doc:"<p>The built-in type of an atomic value</p>",docUrl:"http://www.28msec.com/modules/",params:["$values"]}],"change-element-ns-deep":[{doc:"<p>Changes the namespace of XML elements and its descendants</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes","$newns","$prefix"]}],date:[{doc:"<p>Construct a date from a year, month and day</p>",docUrl:"http://www.28msec.com/modules/",params:["$year","$month","$day"]}],"pad-integer-to-length":[{doc:"<p>Pads an integer to a desired length by adding leading zeros</p>",docUrl:"http://www.28msec.com/modules/",params:["$integerToPad","$length"]}],"avg-empty-is-zero":[{doc:\'<p>The average, counting "empty" values as zero</p>\',docUrl:"http://www.28msec.com/modules/",params:["$values","$allNodes"]}],"first-node":[{doc:"<p>The XML node in a sequence that appears first in document order</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"max-determine-type":[{doc:"<p>The maximum value in a sequence, figuring out its type (numeric or string)</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],"is-a-number":[{doc:"<p>Whether a value is numeric</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],"distinct-attribute-names":[{doc:"<p>The distinct names of all attributes in an XML fragment</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"min-string":[{doc:"<p>The minimum of a sequence of values, treating them like strings</p>",docUrl:"http://www.28msec.com/modules/",params:["$strings"]}],"change-element-names-deep":[{doc:"<p>Changes the names of elements in an XML fragment</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes","$oldNames","$newNames"]}],"sort-document-order":[{doc:"<p>Sorts a sequence of nodes in document order</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],"camel-case-to-words":[{doc:"<p>Turns a camelCase string into space-separated words</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$delim"]}],"last-node":[{doc:"<p>The XML node in a sequence that is last in document order</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"sort-as-numeric":[{doc:"<p>Sorts a sequence of numeric values or nodes</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],"if-absent":[{doc:"<p>The first argument if it is not empty, otherwise the second argument</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$value"]}],"total-months-from-duration":[{doc:"<p>The total number of months in a yearMonthDuration</p>",docUrl:"http://www.28msec.com/modules/",params:["$duration"]}],"exclusive-or":[{doc:"<p>Whether one (and only one) of two boolean values is true</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"node-kind":[{doc:"<p>The XML node kind (element, attribute, text, etc.)</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"has-simple-content":[{doc:"<p>Whether an element has simple content</p>",docUrl:"http://www.28msec.com/modules/",params:["$element"]}],"dynamic-path":[{doc:"<p>Dynamically evaluates a simple XPath path</p>",docUrl:"http://www.28msec.com/modules/",params:["$parent","$path"]}],"wrap-values-in-elements":[{doc:"<p>Wraps a sequence of atomic values in XML elements</p>",docUrl:"http://www.28msec.com/modules/",params:["$values","$elementName"]}],"day-of-week-name-en":[{doc:"<p>The name of the day of the week, from a date, in English</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"get-matches":[{doc:"<p>Return the matching regions of a string</p>",docUrl:"http://www.28msec.com/modules/",params:["$string","$regex"]}],"mmddyyyy-to-date":[{doc:"<p>Converts a string with format MMDDYYYY (with any delimiters) to a date</p>",docUrl:"http://www.28msec.com/modules/",params:["$dateString"]}],"max-string":[{doc:"<p>The maximum of a sequence of values, treating them like strings</p>",docUrl:"http://www.28msec.com/modules/",params:["$strings"]}],"pad-string-to-length":[{doc:"<p>Pads a string to a desired length</p>",docUrl:"http://www.28msec.com/modules/",params:["$stringToPad","$padChar","$length"]}],"is-node-in-sequence":[{doc:"<p>Whether an XML node is in a sequence, based on node identity</p>",docUrl:"http://www.28msec.com/modules/",params:["$node","$seq"]}],trim:[{doc:"<p>Trims leading and trailing whitespace</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],sort:[{doc:"<p>Sorts a sequence of values or nodes</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],"sequence-deep-equal":[{doc:"<p>Whether two sequences have the same XML node content and/or values</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq1","$seq2"]}],"replace-first":[{doc:"<p>Replaces the first match of a pattern</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$pattern","$replacement"]}],"day-of-week":[{doc:"<p>The day of the week, from a date</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"number-of-matches":[{doc:"<p>The number of regions that match a pattern</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$pattern"]}],"month-abbrev-en":[{doc:"<p>The month of a date as an abbreviated word (Jan, Feb, etc.)</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"has-mixed-content":[{doc:"<p>Whether an element has mixed content</p>",docUrl:"http://www.28msec.com/modules/",params:["$element"]}],"is-value-in-sequence":[{doc:"<p>Whether an atomic value appears in a sequence</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$seq"]}],"sequence-node-equal":[{doc:"<p>Whether two sequences contain the same XML nodes, in the same order</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq1","$seq2"]}],"get-matches-and-non-matches":[{doc:"<p>Splits a string into matching and non-matching regions</p>",docUrl:"http://www.28msec.com/modules/",params:["$string","$regex"]}],"namespaces-in-use":[{doc:"<p>A list of namespaces used in element/attribute names in an XML fragment</p>",docUrl:"http://www.28msec.com/modules/",params:["$root"]}],"distinct-nodes":[{doc:"<p>The distinct XML nodes in a sequence (by node identity)</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"precedes-not-ancestor":[{doc:"<p>Whether an XML node precedes another without being its ancestor</p>",docUrl:"http://www.28msec.com/modules/",params:["$a","$b"]}],"substring-before-match":[{doc:"<p>The substring before the last text that matches a regex</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$regex"]}],"substring-before-last-match":[{doc:"<p>The substring after the first text that matches a regex</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$regex"]}],"min-determine-type":[{doc:"<p>The minimum value in a sequence, figuring out its type (numeric or string)</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],"last-day-of-year":[{doc:"<p>The last day of the month of a date</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"reverse-string":[{doc:"<p>Reverses the order of characters</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"are-distinct-values":[{doc:"<p>Whether all the values in a sequence are distinct</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],"repeat-string":[{doc:"<p>Repeats a string a given number of times</p>",docUrl:"http://www.28msec.com/modules/",params:["$stringToRepeat","$count"]}],"index-of-string":[{doc:"<p>The position(s) of a substring</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$substring"]}],"substring-before-last":[{doc:"<p>The substring before the last occurrence of a delimiter</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$delim"]}],"index-of-match-first":[{doc:"<p>The first position of a matching substring</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$pattern"]}],"remove-elements-not-contents":[{doc:"<p>Removes descendant XML elements but keeps their content</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes","$names"]}],"total-hours-from-duration":[{doc:"<p>The total number of hours in a dayTimeDuration</p>",docUrl:"http://www.28msec.com/modules/",params:["$duration"]}],"substring-after-last-match":[{doc:"<p>The substring after the last text that matches a regex</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$regex"]}],"leaf-elements":[{doc:"<p>All XML elements that don\'t have any child elements</p>",docUrl:"http://www.28msec.com/modules/",params:["$root"]}],"remove-elements-deep":[{doc:"<p>Removes descendant elements from an XML node, based on name</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes","$names"]}],"substring-before-if-contains":[{doc:"<p>Performs substring-before, returning the entire string if it does not contain the delimiter</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$delim"]}],"total-minutes-from-duration":[{doc:"<p>The total number of minutes in a dayTimeDuration</p>",docUrl:"http://www.28msec.com/modules/",params:["$duration"]}],"escape-for-regex":[{doc:"<p>Escapes regex special characters</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"scheme-from-uri":[{doc:"<p>Returns the scheme from a URI</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],"distinct-element-paths":[{doc:"<p>The distinct paths of all descendant elements in an XML fragment</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"is-node-among-descendants":[{doc:"<p>Whether an XML node is among the descendants of a sequence, based on node identity</p>",docUrl:"http://www.28msec.com/modules/",params:["$node","$seq"]}],"substring-after-if-contains":[{doc:"<p>Performs substring-after, returning the entire string if it does not contain the delimiter</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$delim"]}],"max-line-length":[{doc:"<p>The maximum line length</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"left-trim":[{doc:"<p>Trims leading whitespace</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"replace-beginning":[{doc:"<p>Replaces the beginning of a string, up to a matched pattern</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$pattern","$replacement"]}],"day-in-year":[{doc:"<p>The day of the year (a number between 1 and 366)</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"total-days-from-duration":[{doc:"<p>The total number of days in a dayTimeDuration</p>",docUrl:"http://www.28msec.com/modules/",params:["$duration"]}],"capitalize-first":[{doc:"<p>Capitalizes the first character of a string</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"remove-attributes":[{doc:"<p>Removes attributes from an XML element, based on name</p>",docUrl:"http://www.28msec.com/modules/",params:["$elements","$names"]}],"id-from-element":[{doc:"<p>Gets the ID of an XML element</p>",docUrl:"http://www.28msec.com/modules/",params:["$element"]}],"sequence-type":[{doc:"<p>The sequence type that represents a sequence of nodes or values</p>",docUrl:"http://www.28msec.com/modules/",params:["$items"]}],"follows-not-descendant":[{doc:"<p>Whether an XML node follows another without being its descendant</p>",docUrl:"http://www.28msec.com/modules/",params:["$a","$b"]}],"if-empty":[{doc:"<p>The first argument if it is not blank, otherwise the second argument</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$value"]}],"remove-attributes-deep":[{doc:"<p>Removes attributes from an XML fragment, based on name</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes","$names"]}],"name-test":[{doc:"<p>Whether a name matches a list of names or name wildcards</p>",docUrl:"http://www.28msec.com/modules/",params:["$testname","$names"]}],"fragment-from-uri":[{doc:"<p>Returns the fragment from a URI</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],dayTimeDuration:[{doc:"<p>Construct a dayTimeDuration from a number of days, hours, etc.</p>",docUrl:"http://www.28msec.com/modules/",params:["$days","$hours","$minutes","$seconds"]}],"substring-after-match":[{doc:"<p>The substring after the first text that matches a regex</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$regex"]}],"is-ancestor":[{doc:"<p>Whether an XML node is an ancestor of another node</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"change-element-ns":[{doc:"<p>Changes the namespace of XML elements</p>",docUrl:"http://www.28msec.com/modules/",params:["$elements","$newns","$prefix"]}],"all-whitespace":[{doc:"<p>Whether a value is all whitespace or a zero-length string</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"non-distinct-values":[{doc:"<p>Returns any values that appear more than once in a sequence</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq"]}],lines:[{doc:"<p>Split a string into separate lines</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],yearMonthDuration:[{doc:"<p>Construct a yearMonthDuration from a number of years and months</p>",docUrl:"http://www.28msec.com/modules/",params:["$years","$months"]}],"days-in-month":[{doc:"<p>Number of days in the month</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"depth-of-node":[{doc:"<p>The depth (level) of a node in an XML tree</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],dateTime:[{doc:"<p>Construct a date/time from individual components</p>",docUrl:"http://www.28msec.com/modules/",params:["$year","$month","$day","$hour","$minute","$second"]}],"substring-after-last":[{doc:"<p>The substring after the last occurrence of a delimiter</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$delim"]}],"contains-word":[{doc:"<p>Whether one string contains another, as a separate word</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$word"]}],"total-years-from-duration":[{doc:"<p>The total number of years in a yearMonthDuration</p>",docUrl:"http://www.28msec.com/modules/",params:["$duration"]}],"first-day-of-year":[{doc:"<p>The first day of the year of a date</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"min-node":[{doc:"<p>The XML node whose typed value is the minimum</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"format-as-title-en":[{doc:\'<p>Moves title words like "the" and "a" to the end of strings</p>\',docUrl:"http://www.28msec.com/modules/",params:["$titles"]}],"distinct-element-names":[{doc:"<p>The distinct names of all elements in an XML fragment</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"index-of-deep-equal-node":[{doc:"<p>The position of a node in a sequence, based on contents and attributes</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes","$nodeToFind"]}],"index-of-node":[{doc:"<p>The position of a node in a sequence, based on node identity</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes","$nodeToFind"]}],"insert-string":[{doc:"<p>Inserts a string at a specified position</p>",docUrl:"http://www.28msec.com/modules/",params:["$originalString","$stringToInsert","$pos"]}],"is-node-in-sequence-deep-equal":[{doc:"<p>Whether an XML node is in a sequence, based on contents and attributes</p>",docUrl:"http://www.28msec.com/modules/",params:["$node","$seq"]}],"month-name-en":[{doc:"<p>The month of a date as a word (January, February, etc.)</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"ordinal-number-en":[{doc:"<p>Reformats a number as an ordinal number, e.g. 1st, 2nd, 3rd.</p>",docUrl:"http://www.28msec.com/modules/",params:["$num"]}],"path-to-node":[{doc:"<p>A path to an XML node (or sequence of nodes)</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"sequence-node-equal-any-order":[{doc:"<p>Whether two sequences contain the same XML nodes, regardless of order</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq1","$seq2"]}],"siblings-same-name":[{doc:"<p>The siblings of an XML element that have the same name</p>",docUrl:"http://www.28msec.com/modules/",params:["$element"]}],siblings:[{doc:"<p>The siblings of an XML node</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],"total-seconds-from-duration":[{doc:"<p>The total number of seconds in a dayTimeDuration</p>",docUrl:"http://www.28msec.com/modules/",params:["$duration"]}],"value-intersect":[{doc:"<p>The intersection of two sequences of values</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"value-union":[{doc:"<p>The union of two sequences of values</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"words-to-camel-case":[{doc:"<p>Turns a string of words into camelCase</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}]}},"http://www.zorba-xquery.com/errors":{doc:"<p>This module contains one declaration of a variable for each error of the http://www.zorba-xquery.com/errors namespace. The variables serves as documentation for the errors but can also be used in the code. For example, one useful scenario is to compare an error caught in the catch clause of a try-ca...</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://www.zorba-xquery.com/modules/converters/base64":{doc:"<p>Base64 encoding and decoding</p>",docUrl:"http://www.28msec.com/modules/",functions:{decode:[{doc:"<p>Decode a xs:base64Binary. The function assumes that the content after decoding is valid UTF-8.</p>",docUrl:"http://www.28msec.com/modules/",params:["$base64"]},{doc:"<p>Decode a xs:base64Binary. The function assumes that the content after decoding has the given encoding.</p>",docUrl:"http://www.28msec.com/modules/",params:["$base64","$encoding"]}],encode:[{doc:"<p>Encode a xs:string as xs:base64Binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$string"]}]}},"http://www.zorba-xquery.com/modules/converters/csv":{doc:"<p>Function library providing converters from CSV/TXT to XML and back. The functions are optimized to work with large amounts of data, in a streaming way.</p>",docUrl:"http://www.28msec.com/modules/",functions:{parse:[{doc:\'<p>Parse a CSV or fixed size text and convert to XML. By default each line is converted to a &lt;row&gt; element, and each field to a &lt;column&gt; element inside &lt;row&gt;. The format of the param $options is: &lt;csv-options:options&gt; &lt;csv [separator="default comma ,"] ? [quote-char="default double quotes &amp;quote;"]? [q...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$csv","$options"]}],"parse-internal":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$csv","$options"]}],"serialize-internal":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$xml","$options"]}],serialize:[{doc:\'<p>Convert XML into CSV or fixed size text. Note: if you want to serialize out the result, make sure that the serializer method is set to "text". For example, in zorba command line, you have to set the param --serialize-text. When using the file:write(...) function, you have to set the method serializa...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$xml","$options"]}]}},"http://www.zorba-xquery.com/modules/converters/html":{doc:"<p>This module provides functions to tidy a HTML document. The functions in this module take an HTML document (a string) as parameter, tidy it in order to result in valid XHTML, and return this XHTML document as a document-node.</p>",docUrl:"http://www.28msec.com/modules/",functions:{parse:[{doc:"<p>This function tidies the given HTML string and returns a valid XHTML document node. This functions automatically sets the following tidying parameters: output-xml=yes doctype=omit quote-nbsp=no char-encoding=utf8 newline=LF tidy-mark=no</p>",docUrl:"http://www.28msec.com/modules/",params:["$html"]},{doc:"<p>This function tidies the given HTML string and returns a valid XHTML document node. The second parameter allows to specify options that configure the tidy process. This parameter is a sequence of name=value pairs. Allowed parameter names and values are documented at http://tidy.sourceforge.net/docs/...</p>",docUrl:"http://www.28msec.com/modules/",params:["$html","$options"]}],"parse-internal":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$html","$options"]}]}},"http://www.zorba-xquery.com/modules/converters/json":{doc:\'<p>Using this module, you can parse JSON data into XML, manipulate it like any other XML data using XQuery, and serialize the result back as JSON. There are many ways to represent JSON data in XML, some loss-less ("round tripable") and some lossy ("one way"). Loss-less representations preserve the JSON...</p>\',docUrl:"http://www.28msec.com/modules/",functions:{parse:[{doc:"<p>Parses JSON data from a string and returns an XDM instance using the Snelson representation described above.</p>",docUrl:"http://www.28msec.com/modules/",params:["$json"]},{doc:"<p>Parses JSON data from a string and returns an XDM instance using one of the representations described above.</p>",docUrl:"http://www.28msec.com/modules/",params:["$json","$options"]}],"parse-internal":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$json","$options"]}],"serialize-internal":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$xml","$options"]}],serialize:[{doc:"<p>Serializes an XDM into JSON using one of the representations described above.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xml"]},{doc:"<p>Serializes an XDM into JSON using one of the representations described above.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xml","$options"]}]}},"http://www.zorba-xquery.com/modules/cryptography/hash":{doc:"<p>This module provides functions that perform different hash operations. For example, they compute MD5 and various SHA functions on either strings or binary. The result is the base64 encoded value of the hash.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"hash-binary":[{doc:"<p>This function computes a hash value of the binary form of the given base64Binary item, i.e. the item is base64-decoded before hashing.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$alg"]}],sha1:[{doc:"<p>Computes the SHA1 hash of the string provided as parameter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],hash:[{doc:"<p>This function computes a hash value of the string provided as parameter. The function expects the hash algorithm to be used as parameter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$alg"]}],"md5-binary":[{doc:"<p>This function computes the MD5 hash value of the binary form of the given base64Binary item, i.e. the item is base64-decoded before hashing.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],md5:[{doc:"<p>Computes the MD5 hash of the string provided as parameter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],"sha1-binary":[{doc:"<p>This function computes the SHA1 hash value of the binary form of the given base64Binary item, i.e. the item is base64-decoded before hashing.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}]}},"http://www.zorba-xquery.com/modules/cryptography/hmac":{doc:"<p>This module provides functions that perform HMAC (hash-based message authentication code) operations. For example, they calculate message codes involving hash functions such as MD5 and various SHA variants. The result is the base64 encoded value of the hash. A hash may be used to verify the data int...</p>",docUrl:"http://www.28msec.com/modules/",functions:{compute:[{doc:"<p>Calculate the HMAC for the given message and secret-key involving an custom hash function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$message","$secret-key","$alg"]}],sha1:[{doc:"<p>Calculate the HMAC for the given message and secret-key involving the SHA1 hash function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$message","$secret-key"]}],"md5-binary":[{doc:"<p>Calculate the HMAC for the given message and secret-key involving the MD5 hash function. Before calculating the code, the given base64-encoded message is base64-decoded.</p>",docUrl:"http://www.28msec.com/modules/",params:["$message","$secret-key"]}],md5:[{doc:"<p>Calculate the HMAC for the given message and secret-key involving the MD5 hash function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$message","$secret-key"]}],"sha1-binary":[{doc:"<p>Calculate the HMAC for the given message and secret-key involving the SHA1 hash function. Before calculating the code, the given base64-encoded message is base64-decoded.</p>",docUrl:"http://www.28msec.com/modules/",params:["$message","$secret-key"]}],"compute-binary":[{doc:"<p>Calculate the HMAC for the given message and secret-key involving an custom hash function. Before calculating the code, the given base64-encoded message is base64-decoded.</p>",docUrl:"http://www.28msec.com/modules/",params:["$message","$secret-key","$hash-algo"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/character-based-string-similarity":{doc:"<p>This library module provides character-based string similarity functions that view strings as sequences of characters, generally computing a similarity score that corresponds to the cost of transforming one string into another. These functions are particularly useful for matching near duplicate stri...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"jaro-winkler":[{doc:"<p>Returns the Jaro-Winkler similarity coefficient between two strings. This similarity coefficient corresponds to an extension of the Jaro similarity coefficient that weights or penalizes strings based on their similarity at the beginning of the string, up to a given prefix size. Example usage : jaro-...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$prefix","$fact"]}],"needleman-wunsch":[{doc:\'<p>Returns the Needleman-Wunsch distance between two strings. The Needleman-Wunsch distance is similar to the basic edit distance metric, adding a variable cost adjustment to the cost of a gap (i.e., an insertion or deletion) in the distance metric. Example usage : needleman-wunsch("KAK", "KQRK", 1, 1)...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$score","$penalty"]}],"edit-distance":[{doc:"<p>Returns the edit distance between two strings. This distance, also refered to as the Levenshtein distance, is defined as the minimum number of edits needed to transform one string into the other, with the allowable edit operations being insertion, deletion, or substitution of a single character. Exa...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}],"smith-waterman":[{doc:\'<p>Returns the Smith-Waterman distance between two strings. Example usage : smith-waterman("ACACACTA", "AGCACACA", 2, 1) The function invocation in the example above returns : 12</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$score","$penalty"]}],jaro:[{doc:"<p>Returns the Jaro similarity coefficient between two strings. This similarity coefficient is based on the number of transposed characters and on a weighted sum of the percentage of matched characters held within the strings. The higher the Jaro-Winkler value is, the more similar the strings are. The ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/consolidation":{doc:"<p>This library module provides data consolidation functions that generally take as input a sequence of XML nodes and apply some rule in order do decide which node is better suited to represent the entire sequence. The logic contained in this module is not specific to any particular XQuery implementati...</p>",docUrl:"http://www.28msec.com/modules/",functions:{longest:[{doc:\'<p>Returns the single longest string, in terms of the number of characters, in a sequence of strings provided as input. If more then one answer is possible, return the first string according to the order of the input sequence. Example usage : con:longest( ( "a", "aa", "aaa") ) The function invocation i...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"most-attributes":[{doc:\'<p>Returns the single node having the largest number of descending attributes (attributes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : most-attributes( ( &lt;a att1="a1...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-frequent":[{doc:\'<p>Returns the single less frequent node in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : least-frequent( ( "a", "a", "b") ) The function invocation in the example above returns : ("b")</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-distinct-elements":[{doc:"<p>Returns the single node having the smallest number of distinct descending elements (sub-elements at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : least-distinct-eleme...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"most-similar-edit-distance":[{doc:"<p>Returns the single most similar string, in terms of the edit distance metric towards an input string, in a sequence of strings provided as input. If more than one string has a maximum similarity (a minimum value for the edit distance metric), the function return the first string according to the ord...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s","$m"]}],"most-elements":[{doc:"<p>Returns the single node having the largest number of descending elements (sub-elements at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : most-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-distinct-nodes":[{doc:"<p>Returns the single node having the smallest number of distinct descending nodes (sub-nodes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : least-distinct-nodes( ( &lt;a...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-xpaths":[{doc:"<p>Returns the single element from an input sequence of elements that matches the smallest number of XPath expressions from a given set, producing a non-empty set of nodes. If more then one answer is possible, return the first element according to the order of the input sequence. Example usage : least-...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s","$paths"]}],"most-xpaths":[{doc:"<p>Returns the single element from an input sequence of elements that matches the largest number of XPath expressions from a given set, producing a non-empty set of nodes. If more then one answer is possible, return the first element according to the order of the input sequence. Example usage : most-xp...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s","$paths"]}],"least-distinct-attributes":[{doc:"<p>Returns the single node having the smallest number of distinct descending attributes (attributes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : least-distinct-attri...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"some-xpaths":[{doc:\'<p>Returns the elements from a sequence of elements that, when matched to a given set of XPath expressions, produce a non-empty set of nodes for some of the cases. Example usage : some-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;d&gt;&lt;c/&gt;&lt;/d&gt;, &lt;d/&gt;), (".//b", ".//c") ) The function invocation in the example above returns : (...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s","$paths"]}],shortest:[{doc:\'<p>Returns the single shortest string, in terms of the number of characters, in a sequence of strings provided as input. If more then one answer is possible, return the first string according to the order of the input sequence. Example usage : shortest( ( "a", "aa", "aaa") ) The function invocation in ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-similar-edit-distance":[{doc:"<p>Returns the single least similar string, in terms of the edit distance metric towards an input string, in a sequence of strings provided as input. If more than one string has a minimum similarity (a maximum value for the edit distance metric), return the first string according to the order of the in...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s","$m"]}],"most-distinct-attributes":[{doc:"<p>Returns the single node having the largest number of distinct descending attributes (attributes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : most-distinct-attribu...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-elements":[{doc:"<p>Returns the single node having the smallest number of descending elements (sub-elements at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : least-elements( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"all-xpaths":[{doc:\'<p>Returns the elements from an input sequence of elements that, when matched to a given set of XPath expressions, produce a non-empty set of nodes in all the cases. Example usage : all-xpaths( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;c&gt;&lt;d/&gt;&lt;/c&gt;, &lt;d/&gt;), (".//b") ) The function invocation in the example above returns : (&lt;a&gt;&lt;b/&gt;...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s","$paths"]}],matching:[{doc:\'<p>Returns the strings from an input sequence of strings that match a particular regular expression. Example usage : matching( ( "a A b", "c AAA d", "e BB f"), "A+" ) The function invocation in the example above returns : ( "a A b", "c AAA d")</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s","$r"]}],"most-distinct-elements":[{doc:"<p>Returns the single node having the largest number of distinct descending elements (sub-elements at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : most-distinct-element...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],superstring:[{doc:"<p>Returns the single string, from an input sequence of strings, that appears more frequently as part of the other strings in the sequence. If no such string exists, the function returns an empty sequence. If more then one answer is possible, the function returns the first string according to the order...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-tokens":[{doc:\'<p>Returns the single shortest string, in terms of the number of tokens, in a sequence of strings provided as input. If more then one answer is possible, return the first string according to the order of the input sequence. Example usage : least-tokens( ( "a b c", "a b", "a"), " +" ) The function invoc...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s","$r"]}],"most-tokens":[{doc:\'<p>Returns the single longest string, in terms of the number of tokens, in a sequence of strings provided as input. If more then one answer is possible, return the first string according to the order of the input sequence. Example usage : most-tokens( ( "a b c", "a b", "a"), " +" ) The function invocat...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s","$r"]}],"most-nodes":[{doc:"<p>Returns the single node having the largest number of descending nodes (sub-nodes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : most-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;a/&gt;, &lt;b/...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"least-attributes":[{doc:\'<p>Returns the single node having the smallest number of descending attributes (attributes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : least-attributes( ( &lt;a att1="...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"most-distinct-nodes":[{doc:"<p>Returns the single node having the largest number of distinct descending nodes (sub-nodes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : most-distinct-nodes( ( &lt;a&gt;&lt;...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"most-frequent":[{doc:\'<p>Returns the single most frequent node in a sequence of nodes provided as input. If more then one answer is possible, returns the first node according to the order of the input sequence. Example usage : most-frequent( ( "a", "a", "b") ) The function invocation in the example above returns : ("a")</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"validating-schema":[{doc:\'<p>Returns the nodes from an input sequence of nodes that validate against a given XML Schema. Example usage : validating-schema ( ( &lt;a/&gt; , &lt;b/&gt; ), &lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;&lt;xs:element name="a" /&gt;&lt;/xs:schema&gt; ) The function invocation in the example above returns : ( &lt;a/&gt; ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s","$schema"]}],"least-nodes":[{doc:"<p>Returns the single node having the smallest number of descending nodes (sub-nodes at any given depth) in a sequence of nodes provided as input. If more then one answer is possible, return the first node according to the order of the input sequence. Example usage : least-nodes( ( &lt;a&gt;&lt;b/&gt;&lt;/a&gt;, &lt;b&gt;&lt;c/&gt;...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/conversion":{doc:"<p>This library module provides data conversion functions for processing calendar dates, temporal values, currency values, units of measurement, location names and postal addresses. The logic contained in this module is not specific to any particular XQuery implementation.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"user-from-phone":[{doc:"<p>Uses a White-pages Web service to discover information about a given phone number, returning a sequence of strings for the name associated to the phone number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$phone-number"]}],"phone-from-user":[{doc:"<p>Uses a White-pages Web service to discover information about a given name, returning a sequence of strings for the phone numbers associated to the name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"address-from-user":[{doc:"<p>Uses a White-pages Web service to discover information about a given name, returning a sequence of strings for the addresses associated to the name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"user-from-address":[{doc:"<p>Uses a White-pages Web service to discover information about a given address, returning a sequence of strings for the names associated to the address.</p>",docUrl:"http://www.28msec.com/modules/",params:["$address"]}],"phone-from-address":[{doc:"<p>Uses a White-pages Web service to discover information about a given address, returning a sequence of strings for the phone number associated to the address.</p>",docUrl:"http://www.28msec.com/modules/",params:["$address"]}],"geocode-from-address":[{doc:"<p>Placename to geospatial coordinates converter, acting as a wrapper over the Yahoo! geocoder service.</p>",docUrl:"http://www.28msec.com/modules/",params:["$q"]}],"currency-convert":[{doc:"<p>Currency conversion function, acting as a wrapper over the WebService from the European Central Bank. WebService documentation at http://www.ecb.int/stats/exchange/eurofxref/html/index.en.html</p>",docUrl:"http://www.28msec.com/modules/",params:["$v","$m1","$m2","$date"]}],"address-from-domain":[{doc:"<p>Uses a whois service to discover information about a given domain name, returning a sequence of strings for the addresses associated to the name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$domain"]}],"address-from-geocode":[{doc:"<p>Geospatial coordinates to placename converter, acting as a wrapper over the Yahoo! reverse geocoder service.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lat","$lon"]}],"address-from-phone":[{doc:"<p>Uses a White-pages Web service to discover information about a given phone number, returning a string for the address associated to the phone number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$phone-number"]}],"phone-from-domain":[{doc:"<p>Uses a whois service to discover information about a given domain name, returning a sequence of strings for the phone numbers associated to the name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$domain"]}],"name-from-domain":[{doc:"<p>Uses a whois service to discover information about a given domain name, returning a sequence of strings for the person or organization names associated to the name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$domain"]}],"unit-convert":[{doc:"<p>Conversion function for units of measurement, acting as a wrapper over the CuppaIT WebService.</p>",docUrl:"http://www.28msec.com/modules/",params:["$v","$t","$m1","$m2"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/hybrid-string-similarity":{doc:"<p>This library module provides hybrid string similarity functions, combining the properties of character-based string similarity functions and token-based string similarity functions. The logic contained in this module is not specific to any particular XQuery implementation, although the module requir...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"soft-cosine-tokens-jaro":[{doc:"<p>Returns the cosine similarity coefficient between sets of tokens extracted from two strings. The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the term-frequency heuristic from Information Retrieval). The Jaro similarity function is used to ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r","$t"]}],"soft-cosine-tokens-jaro-winkler":[{doc:"<p>Returns the cosine similarity coefficient between sets of tokens extracted from two strings. The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the term-frequency heuristic from Information Retrieval). The Jaro-Winkler similarity function is ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r","$t","$prefix","$fact"]}],"monge-elkan-jaro-winkler":[{doc:\'<p>Returns the Monge-Elkan similarity coefficient between two strings, using the Jaro-Winkler similarity function to discover token identity. Example usage : monge-elkan-jaro-winkler("Comput. Sci. and Eng. Dept., University of California, San Diego", "Department of Computer Scinece, Univ. Calif., San D...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$prefix","$fact"]}],"soft-cosine-tokens-edit-distance":[{doc:"<p>Returns the cosine similarity coefficient between sets of tokens extracted from two strings. The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the term-frequency heuristic from Information Retrieval). The Edit Distance similarity function is...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r","$t"]}],"soft-cosine-tokens-soundex":[{doc:"<p>Returns the cosine similarity coefficient between sets of tokens extracted from two strings. The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the term-frequency heuristic from Information Retrieval). The Soundex phonetic similarity function...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r"]}],"soft-cosine-tokens-metaphone":[{doc:"<p>Returns the cosine similarity coefficient between sets of tokens extracted from two strings. The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the term-frequency heuristic from Information Retrieval). The Metaphone phonetic similarity functi...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/normalization":{doc:"<p>This library module provides data normalization functions for processing calendar dates, temporal values, currency values, units of measurement, location names and postal addresses. These functions are particularly useful for converting different data representations into cannonical formats. The log...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"month-dictionary":[{doc:"<p>Internal auxiliary function that returns an XML representation for a dictionary that contains a numeric value associated to different month name abbreviations.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"normalize-phone":[{doc:"<p>Uses an phone number normalization Web service to convert a phone number given as input into a cannonical representation.</p>",docUrl:"http://www.28msec.com/modules/",params:["$addr"]}],"to-dateTime":[{doc:"<p>Converts a given string representation of a dateTime value into a dateTime representation valid according to the corresponding XML Schema type.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sd","$format"]}],"normalize-address":[{doc:"<p>Uses an address normalization Web service to convert a postal address given as input into a cannonical representation format.</p>",docUrl:"http://www.28msec.com/modules/",params:["$addr"]}],"check-time":[{doc:"<p>Internal auxiliary function that checks if a string is in xs:time format</p>",docUrl:"http://www.28msec.com/modules/",params:["$Time"]}],"timeZone-dictionary":[{doc:"<p>Internal auxiliary function that returns an XML representation for a dictionary that contains the time-shift value associated to different time-zone abbreviations.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"to-time":[{doc:"<p>Converts a given string representation of a time value into a time representation valid according to the corresponding XML Schema type.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sd","$format"]}],"check-dateTime":[{doc:"<p>Internal auxiliary function that checks if a string is in xs:dateTime format</p>",docUrl:"http://www.28msec.com/modules/",params:["$dateTime"]}],"check-date":[{doc:"<p>Internal auxiliary function that checks if a string is in xs:date format</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],"to-date":[{doc:"<p>Converts a given string representation of a date value into a date representation valid according to the corresponding XML Schema type.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sd","$format"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/phonetic-string-similarity":{doc:"<p>This library module provides phonetic string similarity functions, comparing strings with basis on how they sound. These metrics are particularly effective in matching names, since names are often spelled in different ways that sound the same. The logic contained in this module is not specific to an...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"metaphone-key":[{doc:\'<p>Returns the Metaphone key for a given string. The Metaphone algorithm produces variable length keys as its output, as opposed to Soundex\\\'s fixed-length keys. Example usage : metaphone-key("ALEKSANDER") The function invocation in the example above returns : "ALKSNTR"</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1"]}],"soundex-key":[{doc:\'<p>Returns the Soundex key for a given string. Example usage : soundex-key("Robert") The function invocation in the example above returns : "R163"</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1"]}],soundex:[{doc:\'<p>Checks if two strings have the same Soundex key. Example usage : soundex( "Robert" , "Rupert" ) The function invocation in the example above returns : true</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}],metaphone:[{doc:\'<p>Checks if two strings have the same Metaphone key. Example usage : metaphone("ALEKSANDER", "ALEXANDRE") The function invocation in the example above returns : true</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/set-similarity":{doc:"<p>This library module provides similarity functions for comparing sets of XML nodes (e.g., sets of XML elements, attributes or atomic values). These functions are particularly useful for matching near duplicate sets of XML nodes. The logic contained in this module is not specific to any particular XQu...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"deep-intersect":[{doc:\'<p>Returns the intersection between two sets, using the deep-equal() function to compare the XML nodes from the sets. Example usage : deep-intersect ( ( "a", "b", "c") , ( "a", "a", ) ) The function invocation in the example above returns : ("a")</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}],distinct:[{doc:\'<p>Removes exact duplicates from a set, using the deep-equal() function to compare the XML nodes from the sets. Example usage : distinct ( ( "a", "a", ) ) The function invocation in the example above returns : ("a", )</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s"]}],"deep-union":[{doc:\'<p>Returns the union between two sets, using the deep-equal() function to compare the XML nodes from the sets. Example usage : deep-union ( ( "a", "b", "c") , ( "a", "a", ) ) The function invocation in the example above returns : ("a", "b", "c", )</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}],dice:[{doc:\'<p>Returns the Dice similarity coefficient between two sets of XML nodes. The Dice coefficient is defined as defined as twice the shared information between the input sets (i.e., the size of the intersection) over the sum of the cardinalities for the input sets. Example usage : dice ( ( "a", "b", ) , (...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}],jaccard:[{doc:\'<p>Returns the Jaccard similarity coefficient between two sets of XML nodes. The Jaccard coefficient is defined as the size of the intersection divided by the size of the union of the input sets. Example usage : jaccard ( ( "a", "b", ) , ( "a", "a", "d") ) The function invocation in the example above r...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}],overlap:[{doc:\'<p>Returns the overlap coefficient between two sets of XML nodes. The overlap coefficient is defined as the shared information between the input sets (i.e., the size of the intersection) over the size of the smallest input set. Example usage : overlap ( ( "a", "b", ) , ( "a", "a", "b" ) ) The function ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2"]}]}},"http://www.zorba-xquery.com/modules/data-cleaning/token-based-string-similarity":{doc:"<p>This library module provides token-based string similarity functions that view strings as sets or multi-sets of tokens and use set-related properties to compute similarity scores. The tokens correspond to groups of characters extracted from the strings being compared, such as individual words or cha...</p>",docUrl:"http://www.28msec.com/modules/",functions:{ngrams:[{doc:\'<p>Returns the individual character n-grams forming a string. Example usage : ngrams("FLWOR", 2 ) The function invocation in the example above returns : ("_F" , "FL" , "LW" , "WO" , "LW" , "WO" , "OR" , "R_")</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s","$n"]}],"jaccard-tokens":[{doc:\'<p>Returns the Jaccard similarity coefficient between sets of tokens extracted from two strings. Example usage : jaccard-tokens("The FLWOR Foundation", "FLWOR Found.", " +" ) The function invocation in the example above returns : 0.25</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r"]}],"cosine-tokens":[{doc:\'<p>Returns the cosine similarity coefficient between sets of tokens extracted from two strings. The tokens from each string are weighted according to their occurence frequency (i.e., weighted according to the term-frequency heuristic from Information Retrieval). Example usage : cosine-tokens("The FLWOR...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r"]}],"dice-ngrams":[{doc:\'<p>Returns the Dice similarity coefficient between sets of character n-grams extracted from two strings. Example usage : dice-ngrams("DWAYNE", "DUANE", 2 ) The function invocation in the example above returns : 0.4615384615384616</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$n"]}],"overlap-ngrams":[{doc:\'<p>Returns the overlap similarity coefficient between sets of character n-grams extracted from two strings. Example usage : overlap-ngrams("DWAYNE", "DUANE", 2 ) The function invocation in the example above returns : 0.5</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$n"]}],"jaccard-ngrams":[{doc:\'<p>Returns the Jaccard similarity coefficient between sets of character n-grams extracted from two strings. Example usage : jaccard-ngrams("DWAYNE", "DUANE", 2 ) The function invocation in the example above returns : 0.3</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$n"]}],"cosine-ngrams":[{doc:"<p>Returns the cosine similarity coefficient between sets of character n-grams extracted from two strings. The n-grams from each string are weighted according to their occurence frequency (i.e., weighted according to the term-frequency heuristic from Information Retrieval). Example usage : cosine-ngram...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$n"]}],"dice-tokens":[{doc:\'<p>Returns the Dice similarity coefficient between sets of tokens extracted from two strings. Example usage : dice-tokens("The FLWOR Foundation", "FLWOR Found.", " +" ) The function invocation in the example above returns : 0.4</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r"]}],"overlap-tokens":[{doc:\'<p>Returns the overlap similarity coefficient between sets of tokens extracted from two strings. Example usage : overlap-tokens("The FLWOR Foundation", "FLWOR Found.", " +" ) The function invocation in the example above returns : 0.5</p>\',docUrl:"http://www.28msec.com/modules/",params:["$s1","$s2","$r"]}],cosine:[{doc:\'<p>Auxiliary function for computing the cosine similarity coefficient between strings, using stringdescriptors based on sets of character n-grams or sets of tokens extracted from two strings. Example usage : cosine( ("aa","bb") , ("bb","aa")) The function invocation in the example above returns : 1.0</p>\',docUrl:"http://www.28msec.com/modules/",params:["$desc1","$desc2"]}]}},"http://www.zorba-xquery.com/modules/datetime":{doc:\'<p>This module provides functions to retrieve the current dateTime. In contrast to the current-dateTime functions specified in "XQuery Functions and Operators" the functions in this module are nondeterministic. That is, they do not return the current-dateTime from the dynamic context but return the act...</p>\',docUrl:"http://www.28msec.com/modules/",functions:{"current-date":[{doc:"<p>Return the current date value. Please note, that this function is not stable. It returns the dat value of the date the function has been actually invoked.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],timestamp:[{doc:"<p>Return the the number of milliseconds since the Epoch.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"current-dateTime":[{doc:"<p>Return the current dateTime value. Please note, that this function is not stable. It returns the dateTime value of the date and time the function has actually been invoked.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"current-time":[{doc:"<p>Return the current time value. Please note, that this function is not stable. It returns the time value of the date and time the function has actually been invoked.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.zorba-xquery.com/modules/debugger/dbgp-message-handler":{doc:"<p>Zorba debugger module.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"breakpoint-get":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],lpottl:[{doc:"<p>left-pad-or-trim-to-length</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$length","$padChar"]}],"breakpoint-remove":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],"context-get":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],eval:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],"stack-depth":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],status:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],"stack-get":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],"process-init":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$init"]}],"breakpoint-set":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],"breakpoint-list":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],source:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],"process-response":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],process:[{doc:"<p>Process one message received from the Zorba debugger server.</p>",docUrl:"http://www.28msec.com/modules/",params:["$message"]}],"context-names":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$resp"]}],"report-error":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$message"]},{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$message","$debugMessage"]}]}},"http://www.zorba-xquery.com/modules/email/imap":{doc:"<p>This module provides functions for accessing and manipulating emails on mail servers through the IMAP protocol. All functions in this module receive as the first argument the IMAP host and user information. This is an element with the type hostInfoType as defined in the email schema: http://www.zorb...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"list-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-ref","$pattern","$only-subscribed"]}],unsubscribe:[{doc:"<p>Unsubscribes the user from the specified mailbox.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}],rename:[{doc:"<p>Renames a mailbox.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-old","$mailbox-new"]}],copy:[{doc:"<p>Copies messages between mailboxes. Depending on the value of $uid , the messages are either specified through their sequence number or through their unique id. Both mailboxes must exist.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-from","$mailbox-to","$messages","$uid"]}],"fetch-subject-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],"fetch-message-sequence-number-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],"fetch-uid-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],"delete-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-name"]}],"delete":[{doc:"<p>Deletes a mailbox for the given user.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-name"]}],"fetch-envelope-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$uid"]}],"fetch-message":[{doc:"<p>Fetches a whole message.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$uid"]}],move:[{doc:"<p>Moves messages between mailboxes. Depending on the value of $uid , the messages are either specified through their sequence number or through their unique id. Both mailboxes must exist.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-from","$mailbox-to","$messages","$uid"]}],"fetch-uid":[{doc:"<p>Fetches the unique identifier for a given message sequence number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],"search-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$criteria","$uid"]}],"expunge-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}],"copy-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-from","$mailbox-to","$messages","$uid","$copy"]}],"set-flags-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$flags","$uid"]}],"fetch-message-sequence-number":[{doc:"<p>Fetches the message sequence number for a given unique identifier.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],"subscribe-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}],"fetch-flags-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$uid"]}],status:[{doc:"<p>Returns the status of the given mailbox. The status of a mailbox contains: messages : the number of messages in the mailbox recent : the number of messages flagged as recent unseen : the number of messages flagged as unseen uidnext : the next unique identifier that will be assigned to a message uidv...</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}],"set-flags":[{doc:"<p>Sets the flags for a given message. The flags are set and unset according to the passed $flags .</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$flags","$uid"]}],"fetch-from-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],"fetch-message-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$uid"]}],list:[{doc:"<p>Lists IMAP folders for the specified user on the host that match the pattern.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-ref","$pattern","$only-subscribed"]}],"fetch-flags":[{doc:"<p>Fetches the flags of a message.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$uid"]}],create:[{doc:"<p>Creates a new mailbox for the given user.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-name"]}],"fetch-from":[{doc:"<p>Fetches the \'from\' string of a message. Please note that this function only words with message sequence numbers, not with unique identifiers. Only the first 255 characters of a \'from\' string are fetched.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],search:[{doc:"<p>Searches a mailbox for messages that match the given criteria. The criteria should be a string as defined in the RFC3501 (IMAP4rev1). A valid example would be: \'FROM zorba@gmail.com OR NOT SUBJECT Bug\'. Depending on the value of $uid , the function will either return matching sequence numbers or uni...</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$criteria","$uid"]}],"fetch-envelope":[{doc:"<p>Fetches the envelope of a message.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number","$uid"]}],"rename-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-old","$mailbox-new"]}],"unsubscribe-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}],"create-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox-name"]}],expunge:[{doc:\'<p>Permanently deletes all messages of the given mailbox that have the "deleted" flag set.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}],"fetch-subject":[{doc:"<p>Fetches the subject for a message. Please note that this function only works with message sequence numbers, not with unique identifiers. Only the first 255 characters of a subject are fetched.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox","$message-number"]}],subscribe:[{doc:"<p>Subscribes the user to the specified mailbox.</p>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}],"status-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$mailbox"]}]}},"http://www.zorba-xquery.com/modules/email/smtp":{doc:"<p>This module can be used for sending emails. The SMTP module contains only one public function that receives two parameters. The SMTP server access information passed as an hostInfo element and the email message representation as a message element. For a quick start see the examples associates with t...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"send-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$host-info","$message"]}],send:[{doc:\'<p>This function sends an email message from the specified account. The hostName child element of $host-info must have the form: remote_system_name [":" port ] [ flags ] . This syntax is part of the Remote names syntax defined in the UW IMAP toolkit. The remote_system_name and flags fragments are expla...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$host-info","$message"]}]}},"http://www.zorba-xquery.com/modules/excel/datetime":{doc:"<p>This is a library module offering the same set of functions defined by Microsoft Excel.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"is-leap-year":[{doc:"<p>Tests if a year is leap or not.</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],second:[{doc:"<p>Returns the seconds of a $time value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$time"]}],month:[{doc:"<p>Returns the month of a $date.</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],weekday:[{doc:"<p>Returns the day of the week corresponding to a $date.</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]},{doc:"<p>Returns the day of the week corresponding to a $date depending on $return_type.</p>",docUrl:"http://www.28msec.com/modules/",params:["$date","$return_type"]}],time:[{doc:"<p>Constructs a time given the hours, minutes and seconds.</p>",docUrl:"http://www.28msec.com/modules/",params:["$hour","$minute","$second"]}],networkdays:[{doc:"<p>Returns the number of whole working days between $start_date and $end_date.</p>",docUrl:"http://www.28msec.com/modules/",params:["$start_date","$end_date"]},{doc:"<p>Returns the number of whole working days between $start_date and $end_date.</p>",docUrl:"http://www.28msec.com/modules/",params:["$start_date","$end_date","$holidays"]}],minute:[{doc:"<p>Returns the minutes of a time value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$time"]}],day:[{doc:"<p>Returns the day of a $date, represented by a serial number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],date:[{doc:"<p>Constructs a date given the hours, months and days.</p>",docUrl:"http://www.28msec.com/modules/",params:["$year","$month","$day"]}],now:[{doc:"<p>Returns the current date and time.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],days360:[{doc:"<p>Returns the number of days between two dates based on a 360-day year.</p>",docUrl:"http://www.28msec.com/modules/",params:["$start_date","$end_date"]},{doc:"<p>Returns the number of days between two dates based on a 360-day year.</p>",docUrl:"http://www.28msec.com/modules/",params:["$start_date","$end_date","$method"]}],"day-of-week":[{doc:"<p>The day of the week, from a date.</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}],hour:[{doc:"<p>Returns the hour of a time value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$time"]}],today:[{doc:"<p>Returns the current date.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],year:[{doc:"<p>Returns the year corresponding to a date.</p>",docUrl:"http://www.28msec.com/modules/",params:["$date"]}]}},"http://www.zorba-xquery.com/modules/excel/engineering":{doc:"<p>This is a library module offering the same set of functions defined by Microsoft Excel, under Engineering Functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{bin2decUtil:[{doc:"<p>Returns a decimal representation of a number given it\'s binary representation.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],hex2oct:[{doc:"<p>Converts a hexadecimal number to octal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts a hexadecimal number to octal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],oct2hex:[{doc:"<p>Converts an octal number to hexadecimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts an octal number to hexadecimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],dec2hexUtil:[{doc:"<p>Returns a binary representation of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"is-bin":[{doc:"<p>Tests if a string is a binary representation of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],dec2hex:[{doc:"<p>Converts a decimal number to hexadecimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts a decimal number to hexadecimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],bin2oct:[{doc:"<p>Converts a binary number to octal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts a binary number to octal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],hex2decUtil:[{doc:"<p>Returns a decimal representation of a number given it\'s hexadecimal representation.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],hex2dec:[{doc:"<p>Converts a hexadecimal number to decimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],hex2bin:[{doc:"<p>Converts a hexadecimal number to binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts a hexadecimal number to binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],dec2binUtil:[{doc:"<p>Returns a binary representation of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"is-hex":[{doc:"<p>Tests if a string is a hexadecimal representation of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],bin2dec:[{doc:"<p>Converts a binary number to decimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],dec2oct:[{doc:"<p>Converts a decimal number to octal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts a decimal number to octal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],dec2octUtil:[{doc:"<p>Returns an octal representation of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"is-oct":[{doc:"<p>Tests if a string is a octal representation of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],oct2dec:[{doc:"<p>Converts an octal number to decimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],bin2hex:[{doc:"<p>Converts a binary number to hexadecimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts a binary number to hexadecimal.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],oct2bin:[{doc:"<p>Converts an octal number to binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts an octal number to binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}],oct2decUtil:[{doc:"<p>Returns a decimal representation of a number given it\'s octal representation.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],dec2bin:[{doc:"<p>Converts a decimal number to binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Converts a decimal number to binary.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$places"]}]}},"http://www.zorba-xquery.com/modules/excel/information":{doc:"<p>This is a library module offering the same set of functions defined by Microsoft Excel, under Information Functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{isnumber:[{doc:"<p>Tests if the passed $value is a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],na:[{doc:"<p>Raises the error value #N/A.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"is-even":[{doc:"<p>Test is a number is even.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],n:[{doc:"<p>Converts a $value to a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],islogical:[{doc:"<p>Tests if the passed $value is a logical value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],istext:[{doc:"<p>Tests if the passed $value is a string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],"is-blank":[{doc:"<p>Test if the passed argument is empty of not.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],"is-odd":[{doc:"<p>Test is a number is odd.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}]}},"http://www.zorba-xquery.com/modules/excel/logical":{doc:"<p>This is a library module offering the same set of functions defined by Microsoft Excel, under Logical Functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"if":[{doc:"<p>Returns one value if a condition you specify evaluates to TRUE and another value if it evaluates to FALSE.</p>",docUrl:"http://www.28msec.com/modules/",params:["$logical_test","$value_if_true","$value_if_false"]}],or:[{doc:"<p>Returns TRUE if any argument is TRUE; FALSE if all arguments are FALSE.</p>",docUrl:"http://www.28msec.com/modules/",params:["$values"]},{doc:"<p>Returns TRUE if any argument is TRUE; FALSE if all arguments are FALSE.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],and:[{doc:"<p>Returns TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE.</p>",docUrl:"http://www.28msec.com/modules/",params:["$values"]},{doc:"<p>Returns TRUE if all its arguments are TRUE; FALSE if one or more arguments are FALSE.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}]}},"http://www.zorba-xquery.com/modules/excel/lookup":{doc:"<p>This module implements some Excel 2003 lookup functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{hlookup:[{doc:"<p>Same as above, only that range_lookup is defaulted to true. That is, this Hlookup looks for the approximate value and the first row must be ordered ascending.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$table_array","$table_width","$table_height","$row_index_num"]},{doc:"<p>Searches for a value in the top row of an array of values, and then returns a value in the same column from a row you specify in the array. Array is specified with 3 parameters: table_array is a sequence of elements, first row first, then second row and so on table_width specifies the number of elem...</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$table_array","$table_width","$table_height","$row_index_num","$range_lookup"]}],choose:[{doc:"<p>Uses index_num to return a sequence from the list of sequences. Use CHOOSE to select one of up to 29 sequences based on the index number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$index_num","$value_sequence1","$value_sequence2","$value_sequence3","$value_sequence4","$value_sequence5","$value_sequence6","$value_sequence7","$value_sequence8","$value_sequence9","$value_sequence10","$value_sequence11","$value_sequence12","$value_sequence13","$value_sequence14","$value_sequence15","$value_sequence16","$value_sequence17","$value_sequence18","$value_sequence19","$value_sequence20","$value_sequence21","$value_sequence22","$value_sequence23","$value_sequence24","$value_sequence25","$value_sequence26","$value_sequence27","$value_sequence28","$value_sequence29"]},{doc:"<p>Uses index_num to return a value from the sequence of value arguments.</p>",docUrl:"http://www.28msec.com/modules/",params:["$index_num","$values"]}],lookup:[{doc:"<p>The Vector form. Looks in a sequence for a value and return a value from the same position in a second sequence. If the value is not found, then it matches the largest value in lookup_vector that is less than or equal to lookup_value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$lookup_vector","$result_vector"]},{doc:"<p>The Array form. It looks in the first row or column of an array for the specified value and returns a value from the same position in the last row or column of the array. If array covers an area that is wider than it is tall (more columns than rows), LOOKUP searches for lookup_value in the first row...</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$array","$array_width","$array_height"]}],transpose:[{doc:"<p>Transposes an array. The rows become columns and vice versa.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array","$array_width","$array_height"]}],index:[{doc:"<p>Returns a value from within an array. This is the Array form of the Excel Index function. Array is specified with 3 parameters: array is a sequence of elements, first row first, then second row and so on array_height specifies the number of rows array_width specifies the number of elements in a row ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$array","$array_height","$array_width","$row_num","$column_num"]}],"lookup-column":[{doc:"<p>Function for HLOOKUP, LOOKUP, MATCH, VLOOKUP. This function should not be used outside this module. It searches a lookup_value in table_header with three different algorithms specified by range_lookup.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$table_header","$range_lookup","$pos","$last_comparable_pos"]}],match:[{doc:"<p>Same as above, but match_type is defaulted to 1. It finds the largest value that is less than or equal to lookup_value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$sequence"]},{doc:"<p>Returns the relative position of an item in a sequence that matches a specified value in a specified order. Only for one dimensional vector.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$sequence","$match_type"]}],vlookup:[{doc:"<p>Same as above, with range_lookup defaulted to true. It finds the largest value that is less than or equal to lookup_value. First column must be in ascending order.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$table_array","$table_width","$table_height","$col_index_num"]},{doc:"<p>Searches for a value in the first column of a table array and returns a value in the same row from another column in the table array. Array is specified with 3 parameters: table_array is a sequence of elements, first row first, then second row and so on table_width specifies the number of elements i...</p>",docUrl:"http://www.28msec.com/modules/",params:["$lookup_value","$table_array","$table_width","$table_height","$col_index_num","$range_lookup"]}],offset:[{doc:"<p>Same as above, only that the sub-array is specified only by rows and cols relative position. The sub-array height and width is computed to contain the remaining elements of the array.</p>",docUrl:"http://www.28msec.com/modules/",params:["$reference","$reference_height","$reference_width","$rows","$cols"]},{doc:"<p>Returns a sub-array from an array. The inner array must be within the reference array</p>",docUrl:"http://www.28msec.com/modules/",params:["$reference","$reference_height","$reference_width","$rows","$cols","$height","$width"]}]}},"http://www.zorba-xquery.com/modules/excel/math-sumproduct":{doc:"<p>Module implementing the sumproduct functions from Excel 2003 math library. There are 30 functions defined, implementing the same function but with 1 to 30 parameters. Each parameter can be a sequence of infinite length.</p>",docUrl:"http://www.28msec.com/modules/",functions:{sumsq:[{doc:"<p>Returns the sum of the squares of the arguments. It used the sumproduct function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],sumproduct:[{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23","$array24"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23","$array24","$array25"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23","$array24","$array25","$array26"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23","$array24","$array25","$array26","$array27"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23","$array24","$array25","$array26","$array27","$array28"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23","$array24","$array25","$array26","$array27","$array28","$array29"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9","$array10","$array11","$array12","$array13","$array14","$array15","$array16","$array17","$array18","$array19","$array20","$array21","$array22","$array23","$array24","$array25","$array26","$array27","$array28","$array29","$array30"]},{doc:"<p>Sums the values in the sequence. The sequence can be of any length.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8"]},{doc:"<p>Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2","$array3","$array4","$array5","$array6","$array7","$array8","$array9"]}]}},"http://www.zorba-xquery.com/modules/excel/math":{doc:"<p>This is a library module offering a part of the set of functions defined by Microsoft Excel 2003.</p>",docUrl:"http://www.28msec.com/modules/",functions:{fact:[{doc:"<p>Returns the factorial of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"int":[{doc:"<p>Rounds a number down to the nearest integer. Positive numbers are rounded toward zero, negative numbers are rounded away from zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],roman:[{doc:\'<p>Converts an arabic numeral to roman, as text. Only the clasic format is supported (out of all formats Excel requires). M is the largest digit, it represents 1000. Numbers bigger than 2000 will be represented by a sequence of "M". D = 500, C = 100, L = 50, X = 10, V = 5, I = 1.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$number"]}],rounddown:[{doc:"<p>Rounds a number down, toward zero. If num_digits is greater than 0 (zero), then number is rounded down to the specified number of decimal places. If num_digits is 0, then number is rounded down to the nearest integer. If num_digits is less than 0, then number is rounded down to the left of the decim...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}],"sort-numbers":[{doc:"<p>Helper function. Sorts a sequence of numbers or arguments castable to numeric. It first casts all arguments to numeric and then sorts ascending.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],odd:[{doc:"<p>Returns number rounded up to the nearest odd integer, away from zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"cast-as-numeric":[{doc:"<p>Cast the xs:anyAtomicType to a numeric type. If the value is already of a numeric type then nothing is changed. Otherwise the value is casted to the numeric type that is most appropriate.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],abs:[{doc:"<p>Compute the abs of a numeric value. The value can also be a string and it will be casted to the appropriate numeric first.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],factdouble:[{doc:"<p>Returns the double factorial of a number. Computes the double factorial of n as n(n-2)(n-4)...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"try-exact-divide":[{doc:"<p>Function for computing GCD. This function should not be used outside this module. Checks if all integer numbers from a sequence divide exactly to a divident.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$divident"]}],mround:[{doc:"<p>Returns a number rounded to the desired multiple. MROUND rounds up, away from zero, if the remainder of dividing number by multiple is greater than or equal to half the value of multiple. MROUND is computed through floor function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$multiple"]}],pi:[{doc:"<p>Return the value of PI as decimal with 15 digits.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],even:[{doc:"<p>Returns number rounded up to the nearest even integer. Regardless of the sign of number, a value is rounded up when adjusted away from zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],mod:[{doc:"<p>Returns the remainder after number is divided by divisor. The result has the same sign as divisor.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$divisor"]}],"product-internal":[{doc:"<p>Function for product. This function should not be used outside this module. Multiplies all numbers in the sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"is-a-number":[{doc:"<p>Checks if the xs:anyAtomicType argument is actually a numeric type or can be converted to numeric.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],radians:[{doc:"<p>Converts degrees to radians.</p>",docUrl:"http://www.28msec.com/modules/",params:["$degree"]}],quotient:[{doc:"<p>Returns the integer portion of a division.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numerator","$denominator"]}],"iterate-all-gcd":[{doc:"<p>Function for computing GCD. This function should not be used outside this module. This function iterates through possible divisors and checks if the sequence divides exactly to any of those. It starts from the minimum value from the sequence and searches downwards.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$min-nonzero","$iteration"]}],trunc:[{doc:"<p>Truncates a number to an integer by removing the fractional part of the number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]},{doc:"<p>Truncates a number down to precision. This behaves exactly like rounddown.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}],gcd:[{doc:"<p>Returns the greatest common divisor GCD of a sequence of integers. The sequence can have one or more positive integers.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],product:[{doc:"<p>Multiplies all the numbers given as arguments and returns the product.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],power:[{doc:"<p>Returns the result of a number raised to a power. The result is computed through successive multiplications.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$power"]}],"min-without-zero":[{doc:"<p>Function for computing GCD. This function should not be used outside this module. It calculates the minimum value from a sequence of positive integers, not taking into account the zero value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],degrees:[{doc:"<p>Converts radians into degrees.</p>",docUrl:"http://www.28msec.com/modules/",params:["$radian"]}],ceiling:[{doc:"<p>Returns number rounded up, away from zero, to the nearest multiple of significance. Significance must have the same sign as number. Number and significance must be of a numeric type or castable to numeric. Significance must not be zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$significance"]}],roundup:[{doc:"<p>Rounds a number up, away from 0 (zero). If num_digits is greater than 0 (zero), then number is rounded down to the specified number of decimal places. If num_digits is 0, then number is rounded down to the nearest integer. If num_digits is less than 0, then number is rounded down to the left of the ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}],"fact-integer":[{doc:"<p>Function for computing factorial. This function should not be used outside this module. This recursive function computes: number * fact(number-1)</p>",docUrl:"http://www.28msec.com/modules/",params:["$intnum"]}],floor:[{doc:"<p>Rounds number down, toward zero, to the nearest multiple of significance. Significance must have the same sign as number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$significance"]}],sign:[{doc:"<p>Determines the sign of a number. Returns 1 if the number is positive, zero (0) if the number is 0, and -1 if the number is negative.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],lcm:[{doc:"<p>Returns the least common multiple of integers. LCM for two numbers is computed by multiplying them and dividing with GCD. The function is applied recursively replacing the first two numbers in the sequence with their LCM.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],sum:[{doc:"<p>Adds all the numbers in the sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],round:[{doc:"<p>Rounds a number to a specified number of digits. If precision is greater than 0 (zero), then number is rounded to the specified number of decimal places. If num_digits is 0, then number is rounded to the nearest integer. If num_digits is less than 0, then number is rounded to the left of the decimal...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}]}},"http://www.zorba-xquery.com/modules/excel/statistical-zorba":{doc:"<p>This module implements some Excel 2003 statistical functions that cannot be implemented with standard XQuery functions. It uses Zorba specific functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{stdev:[{doc:"<p>Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / (n-1) ) = sqrt ( VAR(numbers) )</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],stdevpa:[{doc:"<p>Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / n ) = sqrt ( VARPA(numbers) )</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],stdeva:[{doc:"<p>Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / (n-1) ) = sqrt ( VARA(numbers) )</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],stdevp:[{doc:"<p>Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / n ) = sqrt ( VARP(numbers) )</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],subtotal:[{doc:"<p>Moved from math module. Returns a subtotal in a sequence of numbers. The function applied is given by $function_num.</p>",docUrl:"http://www.28msec.com/modules/",params:["$function_num","$numbers"]}]}},"http://www.zorba-xquery.com/modules/excel/statistical":{doc:"<p>This is a library module offering a part of the set of statistical functions defined by Microsoft Excel 2003.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"count-non-empty":[{doc:"<p>Function for average function. This function should not be used outside this module. It counts all non-empty arguments from the sequence. The string value of every argument is used for checking.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],varpa:[{doc:"<p>Calculates variance based on the entire population. The formula is sum(x - average_x)^2 / n. average_x is computed with AVERAGE function. n is the size of sequence, including empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],count:[{doc:"<p>Counts the number of cells that contain numbers or values castable to numeric.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],min:[{doc:"<p>Returns the smallest number in a sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"sum-prob":[{doc:"<p>Function for PROB function. This function should not be used outside this module. Computes the sum over a sequence of numbers. Checks if the values are between 0 and 1.</p>",docUrl:"http://www.28msec.com/modules/",params:["$prob_range"]}],"sum-x-y-deviations":[{doc:"<p>Function for SLOPE function. This function should not be used outside this module. It computes the formula: sum((x - average_x)(y - average_y)) where average_x and average_y are computed with AVERAGE function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_numbers","$x_average","$y_numbers","$y_average"]}],quartile:[{doc:"<p>Returns the quartile of a data set.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$quart"]}],"add-all-cells":[{doc:"<p>Function for AVERAGEA. This function should not be used outside this module. This function adds all values that are castable to numeric.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],average:[{doc:"<p>Returns the average (arithmetic mean) of the arguments. Arguments can be empty values, otherwise must be castable to numeric. If sequence is empty then zero is returned. The sequence can be of any length.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],maxa:[{doc:"<p>Returns the largest value in a list of arguments. In this implementation there is no difference between MAX and MAXA.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"sum-prob-x":[{doc:"<p>Function for PROB function. This function should not be used outside this module. Checks the prob range and x range if they have the same number of values. Adds all probabilities corresponding to values between range_lower_limit and upper_limit.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_range","$prob_range","$range_lower_limit","$upper_limit"]}],averagea:[{doc:"<p>Calculates the average (arithmetic mean) of the values in the sequence of arguments. Arguments can be of any type. The numbers are added, and the sum is divided by the size of entire sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],prob:[{doc:"<p>This is the same as above, only that upper_limit is not specified. The probability is computed only for range_lower_limit.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_range","$prob_range","$range_lower_limit"]},{doc:"<p>Returns the probability that values in a range are between two limits.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_range","$prob_range","$range_lower_limit","$upper_limit"]}],median:[{doc:"<p>Returns the median of the given numbers. The median is the number in the middle of a set of numbers. Half the numbers have values that are greater than the median, and half the numbers have values that are less than the median.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"var":[{doc:"<p>Estimates variance based on a sample. The formula is sum(x - average_x)^2 / (n - 1). average_x is computed with AVERAGE function. n is the count of numbers from the sequence, excluding empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],percentile:[{doc:"<p>Returns the k-th percentile of values in a sequence. If k is not a multiple of 1/(n - 1), PERCENTILE interpolates to determine the value at the k-th percentile. The function is computed by (max-min)*k + min</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$k_at"]}],large:[{doc:"<p>Returns the k-th largest value in a data set. If n is the number of data points in a range, then LARGE(array,1) returns the largest value, and LARGE(array,n) returns the smallest value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$k"]}],rank:[{doc:"<p>This RANK function is same as the above, only that $order_ascending is set by default to false.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$numbers"]},{doc:"<p>Returns the rank of a number in a list of numbers. The rank of a number is its size relative to other values in a list. (If you were to sort the list, the rank of the number would be its position.) RANK gives duplicate numbers the same rank.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$numbers","$order_ascending"]}],percentrank:[{doc:"<p>Returns the rank of a value in a data set as a percentage of the data set. If x does not match one of the values in array, PERCENTRANK interpolates to return the correct percentage rank. The formula is uses: (RANK - 1) / (size - 1) .</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$x"]}],slope:[{doc:"<p>Returns the slope of the linear regression line through data points in known_y\'s and known_x\'s. The slope is the vertical distance divided by the horizontal distance between any two points on the line, which is the rate of change along the regression line. It computes the formula: sum((x - average_x...</p>",docUrl:"http://www.28msec.com/modules/",params:["$known_y","$known_x"]}],mina:[{doc:"<p>Returns the smallest value in a list of arguments. In this implementation there is no difference between MAX and MAXA.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"sumsq-deviations":[{doc:"<p>Function for VAR, VARA, VARP, VARPA and SLOPE. This function should not be used outside this module. It computes formula sum((x - average_x)^2) for all x in $numbers.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$average"]}],mode:[{doc:"<p>Returns the most frequently occurring, or repetitive, value in a sequence. Arguments must be castable to numeric.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],small:[{doc:"<p>This function computes the k-th smallest value in a data set. Use this function to return values with a particular relative standing in a data set. If n is the number of data points in array, SMALL(array,1) equals the smallest value, and SMALL(array,n) equals the largest value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$k"]}],avedev:[{doc:"<p>Returns the average of the absolute deviations of data points from their mean. The formula is sum(abs(x - average_x))/n, where n is the count of x in the sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],counta:[{doc:\'<p>Counts the number of values that are not empty. Empty values are the one with string value "".</p>\',docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],countblank:[{doc:\'<p>Counts the empty values in a sequence. The empty values are the ones with string value "". The value 0 is not counted.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$cells"]}],"sum-deviations":[{doc:"<p>Function for AVEDEV. This function should not be used outside this module. Computes formula sum(abs(x - average)) for every x in $numbers</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$average"]}],max:[{doc:"<p>Returns the largest number in a sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],standardize:[{doc:"<p>Returns a normalized value from a distribution characterized by mean and standard_dev. The formula is (x - mean) / standard_dev .</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$mean","$standard_dev"]}],vara:[{doc:"<p>Estimates variance based on a sample. The formula is sum(x - average_x)^2 / (n - 1). average_x is computed with AVERAGE function. n is the size of sequence, including empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],varp:[{doc:"<p>Calculates variance based on the entire population. The formula is sum(x - average_x)^2 / n. average_x is computed with AVERAGE function. n is the count of numbers from the sequence, excluding empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}]}},"http://www.zorba-xquery.com/modules/excel/text":{doc:"<p>This is a library module offering the same set of functions defined by Microsoft Excel, under Text and Data Functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{lower:[{doc:"<p>Converts all uppercase letters in a text string to lowercase.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"char":[{doc:"<p>Returns the character specified by a certain codepoint.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"index-of-match":[{doc:"<p>Returns an integer representing the $instance_num position of a substring that matches $pattern within $arg starting from $pos.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$pattern","$pos","$instance_num"]}],mid:[{doc:"<p>Returns a specific number of characters from a text string, starting at the position you specify, based on the number of characters you specify.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text","$start_num","$num_chars"]}],dollar:[{doc:"<p>Converts a number to text format and applies a currency symbol. The number of digits to the right of the decimal point is 2.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]},{doc:"<p>Converts a number to text format and applies a currency symbol.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$decimals"]}],"value-except":[{doc:"<p>Returns the values in one sequence that do not appear in the second sequence in an implementation-defined order.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],right:[{doc:"<p>Returns the last character in a text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns the last character or characters in a text string, based on the number of characters you specify.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text","$num_chars"]}],concatenate:[{doc:"<p>Joins several text strings into one text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$args"]},{doc:"<p>Joins two text strings into one text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"pad-integer-to-length":[{doc:"<p>Returns $toPad appended with enough repetitions of $padChar to make its length $length, the characters are added before the string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$toPad","$padChar","$length"]}],"value-intersect":[{doc:"<p>Returns the intersection of the values in two sequences in an implementation-defined order. It removes duplicates.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],clean:[{doc:"<p>Removes all nonprintable characters from text.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],replace:[{doc:"<p>Replaces part of a text string, based on the number of characters you specify, with a different text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$old_text","$start_num","$num_chars","$new_text"]}],t:[{doc:"<p>Converts the $value to string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],substitute:[{doc:"<p>Substitutes new_text for old_text in a text string. Every occurrence of old_text in text is changed to new_text.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text","$old_text","$new_text"]},{doc:"<p>Substitutes new_text for old_text in a text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text","$old_text","$new_text","$instance_num"]}],exact:[{doc:"<p>Compares two text strings and returns TRUE if they are exactly the same, FALSE otherwise. EXACT is case-sensitive but ignores formatting differences.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"pad-string-to-length":[{doc:"<p>Returns $string appended with enough repetitions of $padChar to make its length $length.</p>",docUrl:"http://www.28msec.com/modules/",params:["$string","$padChar","$length"]}],trim:[{doc:"<p>Removes all spaces from text except for single spaces between words.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text"]}],"tokenize-length":[{doc:"<p>Splits $text in groups of $length characters starting from right to left.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text","$length"]}],code:[{doc:"<p>Returns a codepoint for the first character in a text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],asc:[{doc:"<p>Returns the given $text unchanged.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text"]}],"reverse-string":[{doc:"<p>Reverses the order of characters in a string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],search:[{doc:"<p>Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. The search starts at position 1, and it is not case sensitive.</p>",docUrl:"http://www.28msec.com/modules/",params:["$find_text","$within_text"]},{doc:"<p>Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. The search starts at $start_num, and it is not case sensitive.</p>",docUrl:"http://www.28msec.com/modules/",params:["$find_text","$within_text","$start_num"]}],"index-of-match-first":[{doc:"<p>Returns an integer representing the first position of a substring that matches $pattern within $arg.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$pattern"]},{doc:"<p>Returns an integer representing the first position of a substring that matches $pattern using $flags within $arg.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$pattern","$flags"]}],"value-union":[{doc:"<p>Returns the union of the values in two sequences in an implementation-defined order. It removes duplicates.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],fixed:[{doc:"<p>Rounds a number to the specified number of decimals, formats the number in decimal format using a period and commas, and returns the result as text.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$decimals"]},{doc:"<p>Rounds a number to the specified number of decimals, formats the number in decimal format using a period and commas, and returns the result as text.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$decimals","$no_commas"]}],value:[{doc:"<p>Converts a text string that represents a number to a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],find:[{doc:"<p>Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. The search is case sensitive.</p>",docUrl:"http://www.28msec.com/modules/",params:["$find_text","$within_text"]},{doc:"<p>Locate one text string within a second text string, and return the number of the starting position of the first text string from the first character of the second text string. The search is case sensitive.</p>",docUrl:"http://www.28msec.com/modules/",params:["$find_text","$within_text","$start_num"]}],upper:[{doc:"<p>Converts text to uppercase.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text"]}],left:[{doc:"<p>Returns the first character in a text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns the first character or characters in $text, based on the number of $num_chars you specify.</p>",docUrl:"http://www.28msec.com/modules/",params:["$text","$num_chars"]}],len:[{doc:"<p>Returns the number of characters in a text string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}]}},"http://www.zorba-xquery.com/modules/fetch":{doc:"<p>This module provides functions to fetch the content of a resource identified by a URI. For example, it fetches the content of file or http resources. In order to retrieve such content, the functions use the URI resolution and URL resolver process as documented at URI Resolvers .</p>",docUrl:"http://www.28msec.com/modules/",functions:{content:[{doc:"<p>Tries to fetch the resource referred to by the given URI. It queries all URI mappers and resolvers with kind EntityData::SOME_CONTENT . The content is assumed to be UTF-8 encoded.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]},{doc:"<p>Tries to fetch the resource referred to by the given URI. It queries all URI mappers and resolvers with kind the specified entity kind. The content is assumed to be UTF-8 encoded.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$entity-kind"]},{doc:"<p>Tries to fetch the resource referred to by the given URI. It queries all URI mappers and resolvers with kind the specified entity kind.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$entity-kind","$encoding"]}],"content-binary":[{doc:"<p>Tries to fetch the resource referred to by the given URI and returning it as base64Binary. It queries all URI mappers and resolvers with kind EntityData::SOME_CONTENT .</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]},{doc:"<p>Tries to fetch the resource referred to by the given URI and returning it as base64Binary. It queries all URI mappers and resolvers with kind the specified entity kind.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$entity-kind"]}]}},"http://www.zorba-xquery.com/modules/full-text":{doc:"<p>This module provides an XQuery API to full-text functions. For general information about Zorba\'s implementation of the XQuery and XPath Full Text 1.0 specification as well as instructions for building an installing a thesaurus, see the Full Text Thesaurus documentation . Notes on languages To refer ...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"is-stop-word-lang-supported":[{doc:"<p>Checks whether the given language is supported for stop words.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lang"]}],"tokenizer-properties":[{doc:"<p>Gets properties of the tokenizer for the language returned by ft:current-lang() .</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Gets properties of the tokenizer for the given language .</p>",docUrl:"http://www.28msec.com/modules/",params:["$lang"]}],"tokenize-node":[{doc:"<p>Tokenizes the given node and all of its descendants.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]},{doc:"<p>Tokenizes the given node and all of its decendants.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node","$lang"]}],"tokenize-nodes":[{doc:"<p>Tokenizes the set of nodes comprising $includes (and all of its descendants) but excluding $excludes (and all of its descendants), if any.</p>",docUrl:"http://www.28msec.com/modules/",params:["$includes","$excludes"]},{doc:"<p>Tokenizes the set of nodes comprising $includes (and all of its descendants) but excluding $excludes (and all of its descendants), if any.</p>",docUrl:"http://www.28msec.com/modules/",params:["$includes","$excludes","$lang"]}],stem:[{doc:"<p>Stems the given word.</p>",docUrl:"http://www.28msec.com/modules/",params:["$word"]},{doc:"<p>Stems the given word.</p>",docUrl:"http://www.28msec.com/modules/",params:["$word","$lang"]}],"current-compare-options":[{doc:"<p>Gets the current compare options.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"current-lang":[{doc:"<p>Gets the current language : either the language specified by the declare ft-option using language statement (if any) or the one returned by ft:host-lang() (if none).</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"is-tokenizer-lang-supported":[{doc:"<p>Checks whether the given language is supported for tokenization.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lang"]}],"is-stem-lang-supported":[{doc:"<p>Checks whether the given language is supported for stemming.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lang"]}],"is-stop-word":[{doc:"<p>Checks whether the given word is a stop-word.</p>",docUrl:"http://www.28msec.com/modules/",params:["$word"]},{doc:"<p>Checks whether the given word is a stop-word.</p>",docUrl:"http://www.28msec.com/modules/",params:["$word","$lang"]}],"thesaurus-lookup":[{doc:"<p>Looks-up the given phrase in the default thesaurus.</p>",docUrl:"http://www.28msec.com/modules/",params:["$phrase"]},{doc:"<p>Looks-up the given phrase in a thesaurus.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$phrase"]},{doc:"<p>Looks-up the given phrase in the thesaurus specified by the given URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$phrase","$lang"]},{doc:"<p>Looks-up the given phrase in a thesaurus.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$phrase","$lang","$relationship"]},{doc:"<p>Looks-up the given phrase in a thesaurus.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$phrase","$lang","$relationship","$level-least","$level-most"]}],"host-lang":[{doc:"<p>Gets the host\'s current language . The \\"host\\" is the computer on which Zorba is running. The host\'s current language is obtained as follows: For *nix systems: If setlocale (3) returns non-null, the language corresponding to that locale is used. Else, if the LANG environment variable is set, that lan...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"is-thesaurus-lang-supported":[{doc:"<p>Checks whether the given language is supported for look-up using the default thesaurus.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lang"]},{doc:"<p>Checks whether the given language is supported for look-up using the thesaurus specified by the given URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$lang"]}],"strip-diacritics":[{doc:"<p>Strips all diacritical marks from all characters.</p>",docUrl:"http://www.28msec.com/modules/",params:["$string"]}],"tokenize-string":[{doc:"<p>Tokenizes the given string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$string"]},{doc:"<p>Tokenizes the given string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$string","$lang"]}]}},"http://www.zorba-xquery.com/modules/http-client":{doc:\'<p>Introduction This module provides provides simple functions for performing HTTP requests (GET, POST, DELETE etc.), as well as a more flexible general purpose function ( send-request() ). Examples of how to use this module Simple GET Request import module namespace http="http://www.zorba-xquery.com/m...</p>\',docUrl:"http://www.28msec.com/modules/",functions:{"http-nondeterministic-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$request","$href","$bodies"]}],"delete":[{doc:"<p>This function makes an HTTP DELETE request to a given URL.</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]}],options:[{doc:"<p>This function makes an HTTP OPTIONS request, which asks the server which operations it supports.</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]}],"get-binary":[{doc:"<p>This function makes a GET request on a given URL. All returned bodies are forced to be interpreted as binary data, and will be returned as xs:base64Binary items.</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]}],post:[{doc:\'<p>This function makes an HTTP POST request to a given URL. If the body passed to this function is an element, it will be serialized to XML to be sent to the server, and the Content-Type sent to the server will be "text/xml". Otherwise, the body will be converted to a plain string, and the Content-Type...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$href","$body"]},{doc:\'<p>This function makes an HTTP POST request to a given URL. If the body passed to this function is an element, it will be serialized according to the $content-type parameter as follows: If $content-type is "text/xml", "application/xml", "text/xml-external-parsed-entity", or "application/xml-external-pa...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$href","$body","$content-type"]}],"http-sequential-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$request","$href","$bodies"]}],head:[{doc:"<p>This function makes an HTTP HEAD request on a given URL.</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]}],"send-request":[{doc:"<p>This function sends an HTTP request and returns the corresponding response. Its inputs, outputs, and behavior are identical to the EXPath http-client \'s send-request() function (except that HTML responses are not tidied into XML - see the note above ). It is provided here for use in Zorba installati...</p>",docUrl:"http://www.28msec.com/modules/",params:["$request","$href","$bodies"]}],"get-text":[{doc:"<p>This function makes a GET request to a given URL. All returned bodies are forced to be interpreted as plain strings, and will be returned as xs:string items.</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]}],"set-content-type":[{doc:"<p>This adds a default method attribute to all body elements which don\'t contain a method attribute.</p>",docUrl:"http://www.28msec.com/modules/",params:["$request"]}],"check-params":[{doc:"<p>Private function used internally by this module. This function checks if the request, href, and bodies parameters are consistent.</p>",docUrl:"http://www.28msec.com/modules/",params:["$request","$href","$bodies"]}],get:[{doc:"<p>This function makes a GET request to a given URL.</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]}],"create-multipart":[{doc:"<p>This function takes an http-schema:multipart element, copies it and adds a @method attribute to all body elements which don\'t have one.</p>",docUrl:"http://www.28msec.com/modules/",params:["$multipart"]}],put:[{doc:\'<p>This function makes an HTTP PUT request to a given URL. If the body passed to this function is an element, it will be serialized to XML to be sent to the server, and the Content-Type sent to the server will be "text/xml". Otherwise, the body will be converted to a plain string, and the Content-Type ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$href","$body"]},{doc:\'<p>This function makes an HTTP PUT request to a given URL. If the body passed to this function is an element, it will be serialized according to the $content-type parameter as follows: If $content-type is "text/xml", "application/xml", "text/xml-external-parsed-entity", or "application/xml-external-par...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$href","$body","$content-type"]}],"get-node":[{doc:"<p>This function makes a GET request to a given URL. All returned bodies are forced to be interpreted as XML and parsed into elements.</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]}],"create-body":[{doc:"<p>This function takes an http-schema:body element, copies it, and adds a method attribute to the copy if there is none in the original element.</p>",docUrl:"http://www.28msec.com/modules/",params:["$body"]}]}},"http://www.zorba-xquery.com/modules/image/animation":{doc:"<p>This module provides functions to create animated GIF images.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"create-animated-gif":[{doc:"<p>Creates an animated GIF image. The resulting animated GIF shows the passed images consecutively. It has the same width and height as the first passed image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$images","$delay","$iterations"]}],"create-morphed-gif":[{doc:"<p>Creates an animated GIF image with morph effect. The resulting animated GIF shows the passed images consecutively with morph effect between the changes. It has the same width and height as the first passed image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$images","$delay","$iterations","$nr-of-morph-images"]}]}},"http://www.zorba-xquery.com/modules/image/basic":{doc:"<p>This module provides function to do the following basic image operations: create empty images compare images compress image convert an image one format to another retrieve with, height, format, and exif information from an image The following image formats are supported: GIF JPEG PNG TIFF BMP The er...</p>",docUrl:"http://www.28msec.com/modules/",functions:{equals:[{doc:"<p>Compares two images.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image1","$image2"]}],width:[{doc:"<p>Returns the width of the passed image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],format:[{doc:"<p>Returns the format of the passed image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],height:[{doc:"<p>Returns the height of the passed image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],compress:[{doc:"<p>Compresses the passed image. Compressing means lowering the quality and reducing the size.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$quality"]}],exif:[{doc:"<p>Reads exif information from an image. This function works for JPEG and TIFF images only. It returns empty sequence if no exif information matching the passed tag is found.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$tag"]}],"convert-svg-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$svg","$format"]}],create:[{doc:"<p>Creates an empty image with background color white.</p>",docUrl:"http://www.28msec.com/modules/",params:["$width","$height","$format"]}],convert:[{doc:"<p>Converts an image to another format.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$format"]}],"create-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$width","$height","$format"]}],"convert-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$image","$format"]}],"convert-svg":[{doc:"<p>Converts an SVG image to a supported image format.</p>",docUrl:"http://www.28msec.com/modules/",params:["$svg","$format"]}]}},"http://www.zorba-xquery.com/modules/image/graphviz":{doc:"<p>Module that provides functions for generating SVG graphs. The module provides two function for generating graphs given in the : DOT language (see http://www.graphviz.org ) or in the XML-based Graph eXchange Language (see http://www.gupro.de/GXL/ ), respectively. Both functions use the Graphviz Visua...</p>",docUrl:"http://www.28msec.com/modules/",functions:{gxl:[{doc:"<p>Layout one ore more graphs given in the GXL language and render them as SVG.</p>",docUrl:"http://www.28msec.com/modules/",params:["$gxl","$params"]}],dot:[{doc:\'<p>Layout one ore more graphs given in the DOT language and render them as SVG. For example, dot("digraph mygraph { p -&gt; q }", ())</p>\',docUrl:"http://www.28msec.com/modules/",params:["$dot","$params"]}]}},"http://www.zorba-xquery.com/modules/image/manipulation":{doc:"<p>This module provides functions to handle image manipulations like resizing, zooming, special effects etc. The errors raised by functions of this module have the namespace http://www.zorba-xquery.com/modules/image/error (associated with prefix ierr).</p>",docUrl:"http://www.28msec.com/modules/",functions:{stereo:[{doc:"<p>Make two passed images appear as stereo image when viewed with red-blue glasses. Both images should be same but from a slightly different angle for this to work. Both images should have the same size, if not, the size of the left image will be taken.</p>",docUrl:"http://www.28msec.com/modules/",params:["$left-image","$right-image"]}],rotate:[{doc:"<p>Get a new image as rotated copy of a passed source image (rotated by -360 to 360 degrees). The image is enlarged if this is required for containing the rotated image, but never shrunk even if the rotation would make a smaller image possible.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$angle"]}],flop:[{doc:"<p>Flop an image (horizontal rotation).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],charcoal:[{doc:"<p>Apply a charcoal effect to the image (looks like a charcoal sketch).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$radius","$sigma"]}],zoom:[{doc:"<p>Zoom the passed image by the specified factor while keeping the ratio between width and height. A ratio of less than 1 will make the image smaller. A ratio of less or equal than 0 will not effect the image. Important note: this function does not change the size information stored in the image (e.g. ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$ratio"]}],crop:[{doc:"<p>Copy a part of a source image as new image. The copied part is all left of $lower-right-x and above $lower-right-y.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$lower-right-x","$lower-right-y"]}],watermark:[{doc:"<p>Add a $watermark image to $image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$watermark"]}],edge:[{doc:"<p>Highlight edges in an image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$radius"]}],"transparent-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$image","$color"]}],enhance:[{doc:"<p>Enhance an images (minimizes noise).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],"reduce-noise":[{doc:"<p>Reduce noise of an image using a noise peak elemination filter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$order"]}],solarize:[{doc:"<p>Apply a solarize effect to the image (similar to the effect seen when exposing a photographic film to light during the development process).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$factor"]}],transparent:[{doc:"<p>Make all pixels of the specfied color transparent. This works correctly only with image types supporting transparency (e.g GIF or PNG).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$color"]}],resize:[{doc:"<p>Get a copy of the passed image with changed width and height (without zooming the image\'s content). To change the size of the actual contents of an image, use the zoom function. More in detail: If the new dimensions are greater than the current dimensions the new image will have the passed image in ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$width","$height"]}],overlay:[{doc:"<p>Overlay $image with $overlay-image at the specfied position. The $operator defines the details of the overlay and can have one of the following values: OverCompositeOp: The result is the union of the two image shapes with the overlay image obscuring image in the region of overlap. InCompositeOp: The...</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$overlay-image","$overlay-upper-left-x","$overlay-upper-left-y","$operator"]}],erase:[{doc:"<p>Set all pixels of the image to the current backround color. In most cases, this will result in all pixels to be set to white.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],equalize:[{doc:"<p>Equalize an images (histogramm equalization).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],chop:[{doc:"<p>Copy a part of a source image as new image. The copied part is all right of $upper-left-x and below $upper-left-y.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$upper-left-x","$upper-left-y"]}],trim:[{doc:"<p>Trim edges of the image\'s background color from the image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],"oil-paint":[{doc:"<p>Apply an oil paint effect to an image (makes the image look as if it was an oil paint).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$radius"]}],"zoom-by-height":[{doc:"<p>Zoom the passed image to a given new height while keeping the ratio between width and height. So, the width is scaled accordingly. Important note: this function does not change the size information stored in the image (e.g. basic:width will not show a different value).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$height"]}],despeckle:[{doc:"<p>Despeckle an image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],gamma:[{doc:"<p>Gamma correct an image. Gamma values less than zero will erase the image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$gamma-value"]},{doc:"<p>Gamma correct an image for every color channel seperately. Gamma values less than zero for any color will erase the corresponding color.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$gamma-red","$gamma-green","$gamma-blue"]}],"add-noise":[{doc:"<p>Add noise to an image. Allowed noise types are: UniformNoise GaussianNoise MultiplicativeGaussianNoise ImpulseNoise LaplaceianNoise PoissonNoise</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$noise-type"]}],"overlay-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$image","$overlay-image","$overlay-upper-left-x","$overlay-upper-left-y","$operator"]}],"zoom-by-width":[{doc:"<p>Zoom the passed image to a given new width while keeping the ratio between width and height. So, the height is scaled accordingly. Important note: this function does not change the size information stored in the image (e.g. basic:width will not show a different value).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$width"]}],contrast:[{doc:"<p>Contrast an image (enhances image intensity differences) by a given value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$sharpen"]}],flip:[{doc:"<p>Flip an image (vertical rotation).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image"]}],"add-noise-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$image","$noise-type"]}],blur:[{doc:"<p>Blur an image.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$radius","$sigma"]}],"sub-image":[{doc:"<p>Copy a part of the source image specified by a rectangle. If the passed parameters for the sub-image specify a rectangle that isn\'t entirely within the source image only the area that lies within the image boundaries will be returned.</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$left-upper-x","$left-upper-y","$width","$height"]}],emboss:[{doc:"<p>Emboss an images (highlights edges with 3D effect).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$radius","$sigma"]}],implode:[{doc:"<p>Apply an implode effect to an image (a sort of special effect).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$factor"]}],swirl:[{doc:"<p>Swirl an image (image pixels are rotated by degree).</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$degree"]}]}},"http://www.zorba-xquery.com/modules/image/paint":{doc:"<p>This module provides a function to extend an image with additional shapes. Fully supported image formats are: GIF JPEG PNG TIFF BMP The errors raised by functions of this module have the namespace http://www.zorba-xquery.com/modules/image/error (associated with prefix ierr).</p>",docUrl:"http://www.28msec.com/modules/",functions:{"paint-impl":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$image","$shapes"]}],paint:[{doc:"<p>Extends the passed image with a sequence of shapes. The shapes are passed as a sequence of elements. The possibilities for shape elements are: line: &lt;img:line&gt; &lt;img:start&gt;&lt;img:x&gt;-20&lt;/img:x&gt;&lt;img:y&gt;-20&lt;/img:y&gt;&lt;/img:start&gt; &lt;img:end&gt;&lt;img:x&gt;80&lt;/img:x&gt;&lt;img:y&gt;80&lt;/img:y&gt;&lt;/img:end&gt; &lt;/img:line&gt; polyline: &lt;img...</p>",docUrl:"http://www.28msec.com/modules/",params:["$image","$shapes"]}]}},"http://www.zorba-xquery.com/modules/introspection/sctx":{doc:"<p>Introspection Module for the Static Context components.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"construction-mode":[{doc:"<p>The function returns the static context construction mode of element and document nodes.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"statically-known-collations":[{doc:"<p>The function returns a sequence that contains the statically known collations.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"statically-known-namespaces":[{doc:"<p>The function returns a list of known statically known namespaces as prefixes (fn, xml, xs, xsi, etc).</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"in-scope-attribute-declarations":[{doc:"<p>The function return a sequence of QNames identifying declared attributes in the imported schemas.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"default-collation":[{doc:"<p>The function returns one of statically known collations that is used by functions and operators for comparing and ordering values of type xs:string or xs:anyURI when no explicit collation is specified.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],option:[{doc:"<p>Retrieves the value of an option that is declared in the prolog of the module.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"ordering-mode":[{doc:"<p>The function returns the static context ordering mode, which affects the ordering of the result sequences returned by certain expressions.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"statically-known-documents":[{doc:"<p>The function returns a sequence that contains the URIs of all statically known documents.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"in-scope-element-groups":[{doc:"<p>The function returns a sequence of QNames identifying declared in-scope schema element groups.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"in-scope-variables":[{doc:"<p>The function return a sequence of QNames identifying declared variables from the static context.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"function-arguments-count":[{doc:"<p>The function returns the number of arguments the given XQuery $function takes.</p>",docUrl:"http://www.28msec.com/modules/",params:["$function"]}],"in-scope-schema-types":[{doc:"<p>The function returns a sequence of QNames identifying in-scope schema types, including all the predefined schema types and all definitions found in imported schemas.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"default-function-namespace":[{doc:"<p>The function returns the URI of the default function namespace.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"function-annotations":[{doc:"<p>Retrieves the list of annotations declared for the given function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$arity"]}],"function-names":[{doc:"<p>The function returns a sequence containing the QNames of all defined functions, which are available to be called from within an expression.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"default-order":[{doc:"<p>The function returns the static context component which controls the processing of empty sequences and NaN values as ordering keys in an order by clause in a FLWOR expression.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"base-uri":[{doc:"<p>The function returns the base URI.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"xpath10-compatibility-mode":[{doc:"<p>The function returns true or false depending on whether rules for compatibility with XPath 1.0 are in effect. XQuery set the value of this component to false.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"in-scope-attribute-groups":[{doc:"<p>The function returns a sequence of QNames identifying declared in-scope schema attribute groups.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"statically-known-namespace-binding":[{doc:"<p>For any statically know namespace prefix, the bound URI can be retrieved with the statically-known-namespace-bindings() function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$prefix"]}],"boundary-space-policy":[{doc:"<p>The function returns the static context component which controls the processing of boundary whitespace by direct element constructors.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"statically-known-document-type":[{doc:"<p>For the given document, the function returns the static type of its root node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$document"]}],"in-scope-element-declarations":[{doc:"<p>The function return a sequence of QNames identifying declared elements in the imported schemas.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"default-collection-type":[{doc:"<p>The function returns the statically known default collection type. This is the type of the sequence of nodes that would result from calling the fn:collection function with no arguments.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"copy-namespaces-mode":[{doc:"<p>The function returns the static context components which control the the namespace bindings that are assigned when an existing element node is copied by an element constructor</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.zorba-xquery.com/modules/languages/xslt":{doc:"<p>This module provides XSLT 1.0 transformation functionality. For details on XSLT see XSLT 1.0 specification . This module implements the invoking of an XSLT transformation from XQuery described in Michael Kay\'s proposal . Example: import module namespace xslt = \\"http://www.zorba-xquery.com/modules/la...</p>",docUrl:"http://www.28msec.com/modules/",functions:{transform:[{doc:"<p>Invokes an XSLT transformation.</p>",docUrl:"http://www.28msec.com/modules/",params:["$source","$stylesheet"]}]}},"http://www.zorba-xquery.com/modules/math":{doc:"<p>Extensive math library.</p>",docUrl:"http://www.28msec.com/modules/",functions:{fact:[{doc:"<p>Borrowed from excel module. Returns the factorial of a number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],varpa:[{doc:"<p>Borrowed from excel module. Calculates variance based on the entire population. The formula is sum(x - average_x)^2 / n. average_x is computed with AVERAGE function. n is the size of sequence, including empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"int":[{doc:"<p>Borrowed from excel module. Rounds a number down to the nearest integer. Positive numbers are rounded toward zero, negative numbers are rounded away from zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],atanh:[{doc:"<p>Calculate the hyperbolic tangent.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],roman:[{doc:\'<p>Borrowed from excel module. Converts an Arabic numeral to roman, as text. Only the classic format is supported (out of all formats Excel requires). M is the largest digit, it represents 1000. Numbers bigger than 2000 will be represented by a sequence of "M". D = 500, C = 100, L = 50, X = 10, V = 5, ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$number"]}],rounddown:[{doc:"<p>Borrowed from excel module. Rounds a number down, toward zero. If num_digits is greater than 0 (zero), then number is rounded down to the specified number of decimal places. If num_digits is 0, then number is rounded down to the nearest integer. If num_digits is less than 0, then number is rounded d...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}],frexp:[{doc:"<p>Returns the argument split as mantissa and exponent. The recombining formula is (mantissa * 2^exponent).</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"sort-numbers":[{doc:"<p>Borrowed from excel module. Helper function. Sorts a sequence of numbers or arguments castable to numeric. It first casts all arguments to numeric and then sorts ascending.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],sinh:[{doc:"<p>Calculate hyperbolic sine.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],odd:[{doc:"<p>Borrowed from excel module. Returns number rounded up to the nearest odd integer, away from zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"cast-as-numeric":[{doc:"<p>Borrowed from excel module. Cast the xs:anyAtomicType to a numeric type. If the value is already of a numeric type then nothing is changed. Otherwise the value is casted to the numeric type that is most appropriate.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],cosh:[{doc:"<p>Returns the hyperbolic cosine of x. If the result it too large, INF is returned.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],fmod:[{doc:"<p>Function performing the modulo operation between the two arguments.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$y"]}],"sum-prob":[{doc:"<p>Borrowed from excel module. Function for PROB function. This function should not be used outside this module. Computes the sum over a sequence of numbers. Checks if the values are between 0 and 1.</p>",docUrl:"http://www.28msec.com/modules/",params:["$prob_range"]}],factdouble:[{doc:"<p>Borrowed from excel module. Returns the double factorial of a number. Computes the double factorial of n as n(n-2)(n-4)...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],"try-exact-divide":[{doc:"<p>Borrowed from excel module. Function for computing GCD. This function should not be used outside this module. Checks if all integer numbers from a sequence divide exactly to a divider.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$divider"]}],"sum-x-y-deviations":[{doc:"<p>Borrowed from excel module. Function for SLOPE function. This function should not be used outside this module. It computes the formula: sum((x - average_x)(y - average_y)) where average_x and average_y are computed with AVERAGE function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_numbers","$x_average","$y_numbers","$y_average"]}],stdev:[{doc:"<p>Borrowed from excel module. Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / (n-1) ) = sqrt ( VAR(numbers) )</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],quartile:[{doc:"<p>Borrowed from excel module. Returns the quartile of a data set.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$quart"]}],mround:[{doc:"<p>Borrowed from excel module. Returns a number rounded to the desired multiple. MROUND rounds up, away from zero, if the remainder of dividing number by multiple is greater than or equal to half the value of multiple. MROUND is computed through math:floor function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$multiple"]}],even:[{doc:"<p>Borrowed from excel module. Returns number rounded up to the nearest even integer. Regardless of the sign of number, a value is rounded up when adjusted away from zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],mod:[{doc:"<p>Borrowed from excel module. Returns the remainder after number is divided by divisor. The result has the same sign as divisor.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$divisor"]}],"product-internal":[{doc:"<p>Borrowed from excel module. Function for product. This function should not be used outside this module. Multiplies all numbers in the sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],sumsq:[{doc:"<p>Borrowed from excel module. Returns the sum of the squares of the arguments. It uses the sumproduct function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"sum-prob-x":[{doc:"<p>Borrowed from excel module. Function for PROB function. This function should not be used outside this module. Checks the prob range and x range if they have the same number of values. Adds all probabilities corresponding to values between range_lower_limit and upper_limit.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_range","$prob_range","$range_lower_limit","$upper_limit"]}],"is-a-number":[{doc:"<p>Borrowed from excel module. Checks if the xs:anyAtomicType argument is actually a numeric type or can be converted to numeric.</p>",docUrl:"http://www.28msec.com/modules/",params:["$value"]}],prob:[{doc:"<p>Borrowed from excel module. This is the same as above, only that upper_limit is not specified. The probability is computed only for range_lower_limit.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_range","$prob_range","$range_lower_limit"]},{doc:"<p>Borrowed from excel module. Returns the probability that values in a range are between two limits.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x_range","$prob_range","$range_lower_limit","$upper_limit"]}],is_nan:[{doc:"<p>Checks if the double value is Not a Number (NaN).</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],median:[{doc:"<p>Borrowed from excel module. Returns the median of the given numbers. The median is the number in the middle of a set of numbers. Half the numbers have values that are greater than the median, and half the numbers have values that are less than the median.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"deg-to-rad":[{doc:"<p>Convert angle from degrees to radians. The parameter is first converted to value range of (-360, 360).</p>",docUrl:"http://www.28msec.com/modules/",params:["$deg"]}],"var":[{doc:"<p>Borrowed from excel module. Estimates variance based on a sample. The formula is sum(x - average_x)^2 / (n - 1). average_x is computed with AVERAGE function. n is the count of numbers from the sequence, excluding empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],percentile:[{doc:"<p>Borrowed from excel module. Returns the k-th percentile of values in a sequence. If k is not a multiple of 1/(n - 1), PERCENTILE interpolates to determine the value at the k-th percentile. The function is computed by (max-min)*k + min</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$k_at"]}],asinh:[{doc:"<p>Inverse hyperbolic sine of the number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],quotient:[{doc:"<p>Borrowed from excel module. Returns the integer portion of a division.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numerator","$denominator"]}],large:[{doc:"<p>Borrowed from excel module. Returns the k-th largest value in a data set. If n is the number of data points in a range, then LARGE(array,1) returns the largest value, and LARGE(array,n) returns the smallest value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$k"]}],rank:[{doc:"<p>Borrowed from excel module. This RANK function is same as the above, only that $order_ascending is set by default to false.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$numbers"]},{doc:"<p>Borrowed from excel module. Returns the rank of a number in a list of numbers. The rank of a number is its size relative to other values in a list. (If you were to sort the list, the rank of the number would be its position.) RANK gives duplicate numbers the same rank.</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$numbers","$order_ascending"]}],acosh:[{doc:"<p>Inverse hyperbolic cosine.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"iterate-all-gcd":[{doc:"<p>Borrowed from excel module. Function for computing GCD. This function should not be used outside this module. This function iterates through possible divisors and checks if the sequence divides exactly to any of those. It starts from the minimum value from the sequence and searches downwards.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$min-nonzero","$iteration"]}],is_inf:[{doc:"<p>Checks if the double value is positive or negative infinite.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],ldexp:[{doc:"<p>Computes a real number from the mantissa and exponent. The formula is (x * 2^i).</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$i"]}],slope:[{doc:"<p>Borrowed from excel module. Returns the slope of the linear regression line through data points in known_y\'s and known_x\'s. The slope is the vertical distance divided by the horizontal distance between any two points on the line, which is the rate of change along the regression line. It computes the...</p>",docUrl:"http://www.28msec.com/modules/",params:["$known_y","$known_x"]}],trunc:[{doc:"<p>Borrowed from excel module. Truncates a number to an integer by removing the fractional part of the number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]},{doc:"<p>Borrowed from excel module. Truncates a number down to precision. This behaves exactly like rounddown.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}],gcd:[{doc:"<p>Borrowed from excel module. Returns the greatest common divisor GCD of a sequence of integers. The sequence can have one or more positive integers.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"sumsq-deviations":[{doc:"<p>Borrowed from excel module. Function for VAR, VARA, VARP, VARPA and SLOPE. This function should not be used outside this module. It computes formula sum((x - average_x)^2) for all x in $numbers.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$average"]}],product:[{doc:"<p>Borrowed from excel module. Multiplies all the numbers given as arguments and returns the product.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],mode:[{doc:"<p>Borrowed from excel module. Returns the most frequently occurring, or repetitive, value in a sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],modf:[{doc:"<p>Splits a floating-point value into fractional and integer parts. Both the fraction and integer keep the original sign of the value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"min-without-zero":[{doc:"<p>Borrowed from excel module. Function for computing GCD. This function should not be used outside this module. It calculates the minimum value from a sequence of positive integers, not taking into account the zero value.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],small:[{doc:"<p>Borrowed from excel module. This function computes the k-th smallest value in a data set. Use this function to return values with a particular relative standing in a data set. If n is the number of data points in array, SMALL(array,1) equals the smallest value, and SMALL(array,n) equals the largest ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$k"]}],avedev:[{doc:"<p>Borrowed from excel module. Returns the average of the absolute deviations of data points from their mean. The formula is sum(abs(x - average_x))/n, where n is the count of x in the sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],stdevpa:[{doc:"<p>Borrowed from excel module. Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / n ) = sqrt ( VARPA(numbers)...</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],ceiling:[{doc:"<p>Borrowed from excel module. Returns number rounded up, away from zero, to the nearest multiple of significance. Significance must have the same sign as number. Number and significance must be of a numeric type or castable to numeric. Significance must not be zero.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$significance"]}],stdeva:[{doc:"<p>Borrowed from excel module. Estimates standard deviation based on a sample. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / (n-1) ) = sqrt ( VARA(numbers) )</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],tanh:[{doc:"<p>Calculate the hyperbolic tangent.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],roundup:[{doc:"<p>Borrowed from excel module. Rounds a number up, away from 0 (zero). If num_digits is greater than 0 (zero), then number is rounded down to the specified number of decimal places. If num_digits is 0, then number is rounded down to the nearest integer. If num_digits is less than 0, then number is roun...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}],stdevp:[{doc:"<p>Borrowed from excel module. Calculates standard deviation based on the entire population given as arguments. The standard deviation is a measure of how widely values are dispersed from the average value (the mean). It is computed with formula: sqrt( sum((x-average_x)^2) / n ) = sqrt ( VARP(numbers) ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],"sum-deviations":[{doc:"<p>Borrowed from excel module. Function for AVEDEV. This function should not be used outside this module. Computes formula sum(abs(x - average)) for every x in $numbers</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$average"]}],sumproduct:[{doc:"<p>Borrowed from excel module. Multiplies the elements on the same position in each sequence and sums up the results.</p>",docUrl:"http://www.28msec.com/modules/",params:["$array1","$array2"]}],"fact-integer":[{doc:"<p>Borrowed from excel module. Function for computing factorial. This function should not be used outside this module. This recursive function computes: number * fact(number-1)</p>",docUrl:"http://www.28msec.com/modules/",params:["$intnum"]}],floor:[{doc:"<p>Borrowed from excel module. Rounds number down, toward zero, to the nearest multiple of significance. Significance must have the same sign as number.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$significance"]}],sign:[{doc:"<p>Borrowed from excel module. Determines the sign of a number. Returns 1 if the number is positive, zero (0) if the number is 0, and -1 if the number is negative.</p>",docUrl:"http://www.28msec.com/modules/",params:["$number"]}],lcm:[{doc:"<p>Borrowed from excel module. Returns the least common multiple of integers. LCM for two numbers is computed by multiplying them and dividing with GCD. The function is applied recursively replacing the first two numbers in the sequence with their LCM.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],standardize:[{doc:"<p>Borrowed from excel module. Returns a normalized value from a distribution characterized by mean and standard_dev. The formula is (x - mean) / standard_dev .</p>",docUrl:"http://www.28msec.com/modules/",params:["$x","$mean","$standard_dev"]}],subtotal:[{doc:"<p>Borrowed from excel module. Returns a subtotal in a sequence of numbers. The function applied is given by $function_num.</p>",docUrl:"http://www.28msec.com/modules/",params:["$function_num","$numbers"]}],"rad-to-deg":[{doc:"<p>Convert angle from radians to degrees.</p>",docUrl:"http://www.28msec.com/modules/",params:["$rad"]}],round:[{doc:"<p>Borrowed from excel module. Rounds a number to a specified number of digits. If precision is greater than 0 (zero), then number is rounded to the specified number of decimal places. If num_digits is 0, then number is rounded to the nearest integer. If num_digits is less than 0, then number is rounde...</p>",docUrl:"http://www.28msec.com/modules/",params:["$number","$precision"]}],vara:[{doc:"<p>Borrowed from excel module. Estimates variance based on a sample. The formula is sum(x - average_x)^2 / (n - 1). average_x is computed with AVERAGE function. n is the size of sequence, including empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],varp:[{doc:"<p>Borrowed from excel module. Calculates variance based on the entire population. The formula is sum(x - average_x)^2 / n. average_x is computed with AVERAGE function. n is the count of numbers from the sequence, excluding empty values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers"]}],percentrank:[{doc:"<p>Borrowed from excel module. Returns the rank of a value in a data set as a percentage of the data set. If x does not match one of the values in array, PERCENTRANK interpolates to return the correct percentage rank. The formula is uses: (RANK - 1) / (size - 1) .</p>",docUrl:"http://www.28msec.com/modules/",params:["$numbers","$x"]}]}},"http://www.zorba-xquery.com/modules/node-position":{doc:"<p>This module provides a function (np:node-position) that, given a node, returns positional information about the node in the form of an xs:anyURI item. The module also defines functions that use such positional information to determine: (1) positional relationships between two nodes (e.g. if one is t...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"in-same-tree-of":[{doc:"<p>Determines whether two node positions belong to the same tree. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the two nodes belong to the same tree. Otherwise, the result of the fu...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],level:[{doc:"<p>Computes the level of a node position in its tree. Note: The root node of a tree is at level one. The result of the function applies to the corresponding node as well, that is, within the snapshot in which the position was computed, the node level is the returned one. The result of the function does...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos"]}],"following-of":[{doc:"<p>Determines whether the node position given as second argument is following the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the second node...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"sibling-of":[{doc:"<p>Determines whether two node positions are siblings. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the second node is a sibling of the first. Otherwise, the result of the function ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"preceding-in-document-order-of":[{doc:"<p>Determines whether the node position given as second argument is preceding in document order the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"node-position":[{doc:"<p>Return a URI item containing positional information for a given node. Within a snapshot, each has a different positional URI. However, different nodes in different snapshots might have the same URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"is-text":[{doc:"<p>Determines whether a node position corresponds to a text node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1"]}],"is-element":[{doc:"<p>Determines whether a node position corresponds to an element node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1"]}],"in-collection":[{doc:"<p>Determines whether a node position belongs to a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos"]}],"is-comment":[{doc:"<p>Determines whether a node position corresponds to a comment node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1"]}],"is-attribute":[{doc:"<p>Determines whether a node position corresponds to an attribute node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1"]}],"preceding-of":[{doc:"<p>Determines whether the node position given as second argument is preceding the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the second node...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"following-sibling-of":[{doc:"<p>Determines whether the node position given as second argument is a following-sibling of the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, th...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"descendant-of":[{doc:"<p>Determines whether the node position given as second argument is a descendant of the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the secon...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"ancestor-of":[{doc:"<p>Determines whether the node position given as second argument is an ancestor of the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the second...</p>",docUrl:"http://www.28msec.com/modules/",params:["$pos1","$pos2"]}],"in-subtree-of":[{doc:"<p>Determines whether the node position given as second argument belongs to the subtree rooted at the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapsho...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"following-in-document-order-of":[{doc:"<p>Determines whether the node position given as second argument is following in document order the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"parent-of":[{doc:"<p>Determines whether the node position given as second argument is the parent of the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the second ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"in-same-collection-of":[{doc:"<p>Determines whether two node positions belong to the same collection. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the two nodes belong to the same collection. Otherwise, the resu...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"attribute-of":[{doc:"<p>Determines whether the node position given as second argument is an attribute of the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the secon...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"preceding-sibling-of":[{doc:"<p>Determines whether the node position given as second argument is a preceding-sibling of the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, th...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"child-of":[{doc:"<p>Determines whether the node position given as second argument is a child of the node position given as first argument. If the two positions were obtained within the same snapshot S, then the result of the function applies to the corresponding nodes as well, that is, within snapshot S, the second nod...</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1","$n-pos2"]}],"is-processing-instruction":[{doc:"<p>Determines whether a node position corresponds to an processing-instruction node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1"]}],"is-document":[{doc:"<p>Determines whether a node position corresponds to a document node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$n-pos1"]}]}},"http://www.zorba-xquery.com/modules/node-reference":{doc:"<p>The module provides functions to compute an immutable and opaque reference for any node and to retrieve nodes given their identifier. The identifiers are immutable, i.e. a node identifier does not change during the node lifetime and cannot be reused for another node after the original node gets dele...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"node-by-reference":[{doc:"<p>Returns the node identified by the given node reference. The function returns the empty sequence if the node that is referenced does not exist.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"node-reference":[{doc:"<p>Returns an immutable and opaque node reference (with type xs:anyURI) for a given node. The generated identifier is immutable, i.e. a node identifier does not change during the node lifetime and cannot be reused for another node after the original node gets deleted. Identifiers are also unique, in th...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}]}},"http://www.zorba-xquery.com/modules/node":{doc:"<p>This module defines a set of function which can be used to determine (1) the relationship between two nodes (e.g. if one is the ancestor if another) and (2) properties of given nodes (e.g. their level in the tree). The same functionality can be achieved with simple XPath expressions. However, please...</p>",docUrl:"http://www.28msec.com/modules/",functions:{level:[{doc:"<p>Computes the level of a given node in the tree. Note: The first level has the number one.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],"following-of":[{doc:"<p>Determines whether the node given as second argument is following the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"preceding-of":[{doc:"<p>Determines whether the node given as second argument is preceding the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"following-sibling-of":[{doc:"<p>Determines whether the node given as second argument is a following-sibling of the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"descendant-of":[{doc:"<p>Determines whether the node given as second argument is a descendant of the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"ancestor-of":[{doc:"<p>Determines whether the node given as second argument is an ancestor of the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"parent-of":[{doc:"<p>Determines whether the node given as second argument is a parent of the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"least-common-ancestor":[{doc:"<p>Computes the least common ancestor of two given nodes in the tree.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"preceding-sibling-of":[{doc:"<p>Determines whether the node given as second argument is a preceding-sibling of the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}],"child-of":[{doc:"<p>Determines whether the node given as second argument is a child of the node given as first argument.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node1","$node2"]}]}},"http://www.zorba-xquery.com/modules/oauth/client":{doc:"<p>This module provides the functions necessary to acquire access to the personal resources of a user through the open standard called OAuth . The application/mashup creator does not need to know the specifics of OAuth to use this module.</p>",docUrl:"http://www.28msec.com/modules/",functions:{normalization:[{doc:"<p>This function normalizes parameters into a single string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$params","$divide","$option","$comma"]}],"protected-resource":[{doc:"<p>This function allows the client access to the protected resources of the user. This function is provided for convenience.</p>",docUrl:"http://www.28msec.com/modules/",params:["$protected-resource","$service-provider","$parameters"]},{doc:"<p>This function allows the client access to the protected resources of the user.</p>",docUrl:"http://www.28msec.com/modules/",params:["$consumer-key","$consumer-secret","$signature-method","$oauth-token","$oauth-token-secret","$realm","$protected-resource","$additional-parameters"]}],parameters:[{doc:\'<p>Create an OAuth Parameters instance. Instances of OAuth parameters are used to contain value/pair data such as oauth_token and oauth_token_secret . For instance the following code snippet: oauth:parameters("oauth_token", "#") Returns the following XML schema instance:</p>\',docUrl:"http://www.28msec.com/modules/",params:["$name","$value"]}],"access-token":[{doc:"<p>This function allows the client to obtain a set of token credentials from the service provider by making an authenticated HTTP request to the Token Request endpoint. This function is provided for convenience.</p>",docUrl:"http://www.28msec.com/modules/",params:["$service-provider","$parameters"]},{doc:"<p>This function allows the client to obtain a set of token credentials from the service provider by making an authenticated HTTP request to the Token Request endpoint.</p>",docUrl:"http://www.28msec.com/modules/",params:["$consumer-key","$consumer-secret","$signature-method","$realm","$oauth-token","$oauth-token-secret","$method","$token-request-uri","$additional-parameters"]}],"request-token":[{doc:"<p>This function allows the client to obtain a set of temporary credentials from the service provider by making an authenticated HTTP request to the Temporary Credential Request endpoint. This function is provided for convenience for request-token#2 . Invoking this function is equivalent to: oauth:requ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$service-provider"]},{doc:"<p>This function allows the client to obtain a set of temporary credentials from the service provider by making an authenticated HTTP request to the Temporary Credential Request endpoint. This function is provided for convenience.</p>",docUrl:"http://www.28msec.com/modules/",params:["$service-provider","$parameters"]},{doc:"<p>This function allows the client to obtain a set of temporary credentials from the service provider by making an authenticated HTTP request to the Temporary Credential Request endpoint.</p>",docUrl:"http://www.28msec.com/modules/",params:["$consumer-key","$consumer-secret","$signature-method","$method","$realm","$temporary-credential-request","$callback-url","$additional-parameters"]}],"signature-base-string":[{doc:"<p>This function constructs the Signature Base String; a consistent, reproducible concatenation of several of the HTTP request elements into a single string.</p>",docUrl:"http://www.28msec.com/modules/",params:["$http-method","$base-uri","$params"]}],"add-parameter":[{doc:\'<p>Adds an OAuth parameter to an OAuth Parameters instance. Instances of OAuth parameters are used to contain value/pair data such as oauth_token and oauth_token_secret . For instance the following code snippet: let $params := oauth:parameters("oauth_token", "#") let $params := oauth:add-parameter($par...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$parameters","$name","$value"]}],"format-request":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$consumer-key","$consumer-secret","$protected-resource","$oauth-token","$oauth-token-secret","$realm","$signature-method","$additional-parameters"]},{doc:"<p>This function creates the parameters to be given to the http-request function. It parses the response into parameter elements if the response status is 200 (OK).</p>",docUrl:"http://www.28msec.com/modules/",params:["$consumer-key","$consumer-secret","$protected-resource","$oauth-token","$oauth-token-secret","$realm","$signature-method","$additional-parameters","$format-params"]}],"authorization-header":[{doc:"<p>This function formats the authorization header.</p>",docUrl:"http://www.28msec.com/modules/",params:["$params","$realm","$signature"]}],timestamp:[{doc:"<p>The timestamp is expressed in the number of seconds since January 1, 1970 00:00:00 GMT.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],nonce:[{doc:"<p>This function should return a new UUID every time the function is invoked.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],signature:[{doc:\'<p>This function generates a signature string which becomes the "oauth_signature" parameter. The service provider verifies the signature as specified for each method.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$base-string","$oauth-signature-method","$key"]}],"parse-parameters":[{doc:"<p>This function takes an input string and parses the parameters into parameter elements.</p>",docUrl:"http://www.28msec.com/modules/",params:["$input"]}],parameter:[{doc:"<p>This function returns the string value of the parameters whose key matches a $string input.</p>",docUrl:"http://www.28msec.com/modules/",params:["$params","$string"]}],key:[{doc:"<p>This function returns a string key which is the client and temporary credential concatenated with an ampersand.</p>",docUrl:"http://www.28msec.com/modules/",params:["$oauth-consumer-secret","$oauth-token-secret"]}],"service-provider":[{doc:\'<p>Utility function to build a service provider object. This object contains the information required by the OAuth client to interact with an OAuth service provider. For instance the following expression: let $consumer-key := "#" let $consumer-secret := "#" let $signature-method := "HMAC-SHA1" let $rea...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$consumer-key","$consumer-secret","$signature-method","$realm","$authorize-url","$request-token-method","$request-token-url","$request-token-callback-url","$access-token-method","$access-token-url"]}],"http-request":[{doc:"<p>This function makes the request, and sends it to the specified url using the specified http request method.</p>",docUrl:"http://www.28msec.com/modules/",params:["$consumer-secret","$protected-resource","$oauth-token-secret","$params","$realm","$signature-method"]}],"additional-parameters":[{doc:\'<p>This function finds the server-specific parameters. The specification states, "Servers MAY specify additional parameters..."</p>\',docUrl:"http://www.28msec.com/modules/",params:["$parameters"]}]}},"http://www.zorba-xquery.com/modules/oauth/error":{doc:"<p>Module that defines the errors raised in Oauth modules.</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://www.zorba-xquery.com/modules/process":{doc:\'<p>This module provides functions to create a native process and return the result (i.e. exit code, result on standard out and error). Example: import module namespace proc = "http://www.zorba-xquery.com/modules/process"; proc:exec("ls") Potential result: &lt;result xmlns="http://www.zorba-xquery.com/modu...</p>\',docUrl:"http://www.28msec.com/modules/",functions:{exec:[{doc:"<p>Executes the specified string command in a separate process. This function does not allow arguments to be passed to the command.</p>",docUrl:"http://www.28msec.com/modules/",params:["$cmd"]},{doc:"<p>Executes the specified string command in a separate process. Each of the strings in the sequence passed in as the second argument is passed as an argument to the executed command.</p>",docUrl:"http://www.28msec.com/modules/",params:["$cmd","$args"]}]}},"http://www.zorba-xquery.com/modules/project_xqdoc":{doc:"<p>Function library provides functions for generating the XQDoc XML\'s for a project.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"delete-XML-dir":[{doc:"<p>Delete the intermediary xml dir</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdocPath"]}],"get-filename":[{doc:"<p>Returns the string resulting from replacing the directory-separators (i.e. / ) with \'_\'</p>",docUrl:"http://www.28msec.com/modules/",params:["$moduleURI"]}],"load-manifest":[{doc:"<p>This function loads the ZorbaManifest.xml</p>",docUrl:"http://www.28msec.com/modules/",params:["$zorbaManifestPath"]}],"generate-xqdoc-XML":[{doc:"<p>This function generates the XQDoc XML for all the modules found in build/ZorbaManifest.xml</p>",docUrl:"http://www.28msec.com/modules/",params:["$zorbaManifestPath","$xqdocPath"]}]}},"http://www.zorba-xquery.com/modules/random":{doc:"<p>This module provides several functions for generating (pseudo-)random numbers and strings.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"random-between":[{doc:"<p>This function generates one random number within a given range. The function is nondeterministic. The function is based on r:random-between#3 . Specifically, it returns the value of invoking r:random-betwen($lower, $upper, 1) .</p>",docUrl:"http://www.28msec.com/modules/",params:["$lower","$upper"]},{doc:"<p>This function generates an arbitrary number of random numbers within a given range. The function is nondeterministic because the sequence is not repeatable.</p>",docUrl:"http://www.28msec.com/modules/",params:["$lower","$upper","$num"]}],"seeded-random":[{doc:"<p>This function generates an arbitrary number of pseudo-random numbers. The sequence is repeatable by calling the function with the same seed. The function is based on posix function srand() and rand() . Specifically, it invokes srand($seed) and then returns the values returned by invoking rand() $num...</p>",docUrl:"http://www.28msec.com/modules/",params:["$seed","$num"]}],"seeded-random-between":[{doc:"<p>This function generates an arbitrary number of pseudo-random numbers within a given range. The sequence is repeatable by calling the function with the same seed and boundaries. The function is based on the function r:seeded-random#2 . Specifically, it\'s result is repeatable if called with the same a...</p>",docUrl:"http://www.28msec.com/modules/",params:["$seed","$lower","$upper","$num"]}],random:[{doc:"<p>This function generates one random number. The function is nondeterministic. The function is based on r:random#1 . Specifically, it returns the value of invoking r:random(1) .</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>This function generates an arbitrary number of random numbers. The function is nondeterministic because the sequence is not repeatable. However, the function is based on posix function srand() and rand() . Specifically, it invokes srand() with some random number based on the current time and then re...</p>",docUrl:"http://www.28msec.com/modules/",params:["$num"]}],uuid:[{doc:"<p>This function returns a uuid. Note, that the function is not stable, that is, it returns a different UUID everytime the function is invoked.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.zorba-xquery.com/modules/reflection":{doc:"<p>This module provides functions to dynamically invoke functions or main modules, respectively. Each of the functions (invoke or eval) come in four variants depending whether the expression being invoked is simple, nondeterministic, updating, or sequential.</p>",docUrl:"http://www.28msec.com/modules/",functions:{eval:[{doc:\'<p>The purpose of this function is to (dynamically) execute an XQuery program from inside another XQuery program. The XQuery program that invokes the eval function will be referred to as the "outer" program and the XQuery program that is executed by the eval invocation will be referred to as the "inner...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$query"]}],invoke:[{doc:"<p>The invoke function allows to dynamically call a function given its QName and parameters. It is possible to invoke a function whose name is not known at compilation time -- it can be computed, passed through an external variable, taken from a file, etc. The first parameter must always be a QName ide...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"eval-n":[{doc:"<p>See documentation of reflection:eval() except the main module that is to be executed may be nondeterministc.</p>",docUrl:"http://www.28msec.com/modules/",params:["$query"]}],"eval-s":[{doc:"<p>See documentation of reflection:eval() except the main module that is to be executed may be sequential, i.e. may have side-effects.</p>",docUrl:"http://www.28msec.com/modules/",params:["$query"]}],"eval-u":[{doc:"<p>See documentation of reflection:eval() except the main module that is to be executed may be updating, i.e. return a pending update list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$query"]}],"invoke-n":[{doc:"<p>See documentation for reflection:invoke except the function that is to be invoked may be nondeterministic.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"invoke-s":[{doc:"<p>See documentation for reflection:invoke except the function that is to be invoked may be sequential, i.e. may have side-effects.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"invoke-u":[{doc:"<p>See documentation for reflection:invoke-n except the function that is to be invoked may be updating, i.e. return a pending update list.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}]}},"http://www.zorba-xquery.com/modules/schema-tools":{doc:"<p>This module provides funtionality to get sample XMLSchema from XML instances and sample XML instances from XMLSchema. Apache XMLBeans library is used to implement inst2xsd and xsd2inst functions. Note: Since this module has a Java library dependency a JVM required to be installed on the system. For ...</p>",docUrl:"http://www.28msec.com/modules/",functions:{inst2xsd:[{doc:\'<p>The inst2xsd function takes a set of sample XML instance elements as input and generates a set of sample XMLSchema documents that define the content of the given input. Please consult the official documentation for further information . Example: import module namespace st = "http://www.zorba-xquery....</p>\',docUrl:"http://www.28msec.com/modules/",params:["$instances","$options"]}],xsd2inst:[{doc:"<p>The xsd2inst function takes a set of XML Schema elements as input and the local name of the root element and generates a document that represents one sample XML instance of the given input schemas. The local name is searched in schema global element definitions in the order of schemas parameter. Ple...</p>",docUrl:"http://www.28msec.com/modules/",params:["$schemas","$rootElementName","$options"]}],"inst2xsd-internal":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$instances","$options"]}],"xsd2inst-internal":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$schemas","$rootElementName","$options"]}]}},"http://www.zorba-xquery.com/modules/schema":{doc:"<p>This module provides function that are related to XML Schema support in Zorba.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"schema-type":[{doc:"<p>This function returns the name of the type of the item passed as parameter.</p>",docUrl:"http://www.28msec.com/modules/",params:["$item"]}],"is-validated":[{doc:"<p>This function returns true if the given node has need validated, and false otherwise.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],"validate-in-place":[{doc:"<p>Updating function that validates the document in place. After the updating query is applied the $node will contain the validated content.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}]}},"http://www.zorba-xquery.com/modules/store/data-structures/unordered-map":{doc:"<p>This module defines a set of functions for working with maps. A map is identified by a QName and can be created using the map:create or map:create-transient functions and deleted using the map:delete function, respectively. The lifetime of a transient map is limited by the execution of the current X...</p>",docUrl:"http://www.28msec.com/modules/",functions:{remove:[{doc:\'<p>Removes an entry identified by the given key from the map. Note that it is possible to insert entries with empty key attributes. However as the removing the entries is based on the "eq" comparison and as "eq" with an empty sequence always return false, it is not possible to remove these entries.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$name","$key"]}],"delete":[{doc:"<p>Destroys the map with the given name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"available-maps":[{doc:"<p>The function returns a sequence of QNames of the maps that are available. The sequence will be empty if there are no maps.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"is-transient":[{doc:"<p>The function returns true if the map identified by the given QName is transient, false otherwise.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"create-transient":[{doc:"<p>Create a transient map with a given name and a set of type identifiers for each key attribute. Note that the function is variadic and might take an arbitrary number of type identifiers for the key attributes.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$key-type"]}],keys:[{doc:\'<p>Returns the keys of all entries of a map. The keys are returned as sequence of nodes of the form: &lt;key xmlns="http://www.zorba-xquery.com/modules/store/data-structures/unordered-map"&gt; &lt;attribute value="key1_value"/&gt; &lt;attribute value="key2_value"/&gt; &lt;attribute value="key3_value"/&gt; &lt;/key&gt; The following...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$name"]}],size:[{doc:"<p>The number of entries in a map. The following condition always holds: map:size($name) eq fn:count(map:keys($name))</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],get:[{doc:\'<p>Returns the value of the entry with the given key from the map. Note that it is possible to insert entries with empty key attributes. However as the getting the entries is based on the "eq" comparison and as "eq" with an empty sequence always return false, it is not possible to retrieve these entrie...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$name","$key"]}],insert:[{doc:"<p>Inserts a new entry into the map with the given name. Note that the function is variadic and might take an arbitrary number of key attributes. If an entry with the given key already exists in the map, the value sequences of the existing entry and the sequence passed using $value argument are concate...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$value","$key"]}],create:[{doc:"<p>Create a map with a given name and a set of type identifiers for each key attribute. Note that the function is variadic and might take an arbitrary number of type identifiers for the key attributes. Also note that the function is sequential and immediately creates the map in the store.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$key-type"]}]}},"http://www.zorba-xquery.com/modules/store/dynamic/collections/ddl":{doc:"<p>This modules defines a set of functions for managing persistent, ordered, and updatable collections. Please refer to our documentation for more information about the lifecycle management and the manipulation of such collections.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"delete":[{doc:"<p>The delete function is an updating function that removes the collection with the given expanded QName.</p>",docUrl:"http://www.28msec.com/modules/",params:["$coll"]}],"available-collections":[{doc:"<p>The function returns a sequence of QNames of the collections that are available. The sequence will be empty if there are no collections.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"is-available-collection":[{doc:"<p>The function returns true if a collection with the given QName is available.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],create:[{doc:"<p>The create function is an updating function which creates the collection with the given expanded QName.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The create function is an updating function which creates the collection with the given expanded QName. Moreover, it adds copies of the sequence $content to the new collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}]}},"http://www.zorba-xquery.com/modules/store/dynamic/collections/dml":{doc:"<p>This modules provides a set of functions to modify a collection and retrieve the items contained in a particular collection. Please refer to our documentation for more information about the lifecycle management and the manipulation of such collections.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"apply-insert-nodes-first":[{doc:"<p>This function does the same as the insert-nodes-first function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"apply-insert-after":[{doc:"<p>This function does the same as the insert-after function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],truncate:[{doc:"<p>The truncate function is an updating function that deletes the entire contents of collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"delete":[{doc:"<p>The delete function is an updating function that deletes zero of more items (nodes and/or json items) from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$target"]}],"insert-after":[{doc:"<p>The insert-after function is an updating function that inserts copies of the given items (nodes and/or json items) into a collection at the position directly following the given target item.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],"apply-insert-first":[{doc:"<p>This function does the same as the insert-first function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"delete-node-first":[{doc:"<p>The delete-node-first function is an updating function that deletes the first node from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"delete-nodes-first":[{doc:"<p>The delete-nodes-first function is an updating function that deletes the first n nodes from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"delete-nodes-last":[{doc:"<p>The delete-nodes-last function is an updating function that deletes the last n nodes from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"apply-insert-nodes-last":[{doc:"<p>This function does the same as the insert-nodes-last function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-nodes-after":[{doc:"<p>The insert-nodes-after function is an updating function that inserts copies of the given nodes into a collection at the position directly following the given target node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],collection:[{doc:"<p>The collection function returns the sequence of nodes and/or json items that belong to the collection identified by the given name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The collection function returns the sequence of nodes and/or json items that belong to the collection identified by the given name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$skip"]}],"insert-before":[{doc:"<p>The insert-before function is an updating function that inserts copies of the given items (nodes or json items) into a collection at the position directly preceding the given target item.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"insert-first":[{doc:"<p>The insert-first function is an updating function that inserts copies of the given items (nodes or json items) at the beginning of the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"delete-first":[{doc:"<p>The delete-first function is an updating function that deletes the first item from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The delete-first function is an updating function that deletes the first N items from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"insert-nodes-last":[{doc:"<p>The insert-nodes-last function is an updating function that inserts copies of the given nodes at the end of the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-last":[{doc:"<p>The insert-last function is an updating function that inserts copies of the given items (nodes or json items) at the end of the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-nodes-first":[{doc:"<p>The insert-nodes-first function is an updating function that inserts copies of the given nodes at the beginning of the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"index-of":[{doc:"<p>The index-of function returns the position of the given item (node or json item) within its containing the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$item"]}],"delete-last":[{doc:"<p>The delete-last function is an updating function that deletes the last item from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The delete-last function is an updating function that deletes the last N items from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"apply-insert-nodes-after":[{doc:"<p>This function does the same as the insert-nodes-after function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],"apply-insert-nodes-before":[{doc:"<p>This function does the same as the insert-nodes-before function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"delete-nodes":[{doc:"<p>The delete-nodes function is an updating function that deletes zero of more nodes from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$target"]}],"insert-nodes-before":[{doc:"<p>The insert-nodes-before function is an updating function that inserts copies of the given nodes into a collection at the position directly preceding the given target node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"apply-insert-last":[{doc:"<p>This function does the same as the insert-last function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"apply-insert-before":[{doc:"<p>This function does the same as the insert-before function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"collection-name":[{doc:"<p>The collection-name function returns the name of the collection the given item (node or json item) belongs to.</p>",docUrl:"http://www.28msec.com/modules/",params:["$item"]}],"delete-node-last":[{doc:"<p>The delete-node-last function is an updating function that deletes the last node from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}]}},"http://www.zorba-xquery.com/modules/store/dynamic/collections/w3c/ddl":{doc:"<p>This modules defines a set of functions for managing persistent, ordered, and updatable collections. Such collections are identified by a URI as defined in the XQuery specification. However, please note that we do not advice users to use collections identified by URIs. Instead, we refer to the data ...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"delete":[{doc:"<p>The delete function is an updating function that removes the collection with the given URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$coll-name"]}],"available-collections":[{doc:"<p>The function returns a sequence of URIs of the collections that are available. The sequence will be empty if there are no collections.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"to-qname":[{doc:"<p>Function used for internal purposes only. It converts a URI given as string into a reserved QName. This QName is used in the module to be able to store collections identified by URIs using dynamic collections which are identified by QNames.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"is-available-collection":[{doc:"<p>The function returns true if a collection with the given URI is available (i.e. has been created).</p>",docUrl:"http://www.28msec.com/modules/",params:["$coll-name"]}],"from-qname":[{doc:"<p>Function used for internal purposes only. It returns the namespace component of the given QName.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],create:[{doc:"<p>The create function is an updating function which creates the collection with the given URI and the empty-sequence as contents.</p>",docUrl:"http://www.28msec.com/modules/",params:["$coll-name"]},{doc:"<p>The create function is an updating function which creates the collection with the given URI. Moreover, it adds copies of the sequence $content to the new collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$coll-name","$content"]}]}},"http://www.zorba-xquery.com/modules/store/dynamic/collections/w3c/dml":{doc:"<p>This modules provides a set of functions to modify a collection and retrieve the nodes contained in a particular collection. Such collections are identified by a URI as defined in the XQuery specification. However, please note that we do not advice users to use collections identified by URIs. Instea...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"apply-insert-nodes-first":[{doc:"<p>This function does the same as the insert-nodes function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"delete-node-first":[{doc:"<p>The delete-node-first function is an updating function that deletes the first node from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"delete-nodes-first":[{doc:"<p>The delete-nodes-first function is an updating function that deletes the first n nodes from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"delete-nodes-last":[{doc:"<p>The delete-nodes-last function is an updating function that deletes the last n nodes from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"apply-insert-nodes-last":[{doc:"<p>This function does the same as the insert-nodes-last function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-nodes-after":[{doc:"<p>The insert-nodes-after function is an updating function that inserts copies of the given nodes into a collection at the position directlry following the given target node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],collection:[{doc:"<p>The collection function returns the sequence of nodes of the collection identified by the given name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"insert-nodes-last":[{doc:"<p>The insert-nodes-last function is an updating function that inserts copies of the given nodes at the end of the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-nodes-first":[{doc:"<p>The insert-nodes-first function is an updating function that inserts copies of the given nodes at the beginning of the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"index-of":[{doc:"<p>The index-of function return the index of the given node in the collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],"apply-insert-nodes-after":[{doc:"<p>This function does the same as the insert-nodes-after function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],"apply-insert-nodes-before":[{doc:"<p>This function does the same as the insert-nodes-before function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"delete-nodes":[{doc:"<p>The delete-nodes function is an updating function that deletes zero of more nodes from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$target"]}],"insert-nodes-before":[{doc:"<p>The insert-nodes-before function is an updating function that inserts copies of the given nodes into a collection at the position directly preceding the given target node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"collection-name":[{doc:"<p>This function returns the name of the collection the given node belongs to.</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],"delete-node-last":[{doc:"<p>The delete-node-last function is an updating function that deletes the last node from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}]}},"http://www.zorba-xquery.com/modules/store/dynamic/documents":{doc:"<p>This module defines a set of functions which manage documents that are persisted in the store. Specifically, it contains functions to put, remove, list, or retrieve documents. Please refer to our documentation for more information about the lifecycle management and manipulation of documents.</p>",docUrl:"http://www.28msec.com/modules/",functions:{document:[{doc:"<p>Returns the document with the given URI from the store. The difference to fn:doc is that this function does not attempt to retrieve the resource from the file system or the web before returning it. Its only responsibility is to return the document from the store that was bound using fn:put or doc:pu...</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],remove:[{doc:"<p>Removes the document with the given URI from the store.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],"available-documents":[{doc:"<p>Retrieves a sequence of URIs of documents bound in the store.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],put:[{doc:"<p>Adds a document to the store. The document is bound to the URI given as first parameter. This URI is the name of the document and can be used by the doc:document() function to retrieve the document from the store. The semantics of the function is similar to the fn:put function. The difference is tha...</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri","$doc"]}],"is-available-document":[{doc:"<p>Returns true if a document with the given URI exists in the store.</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}]}},"http://www.zorba-xquery.com/modules/store/static/collections/ddl":{doc:"<p>This modules defines a set of functions for managing collections which are declared in the prolog of a module. For example, it provides functions to create, delete, or introspect collections. This module is part of Zorba\'s XQuery Data Definition Facility . All the collections managed by this module ...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"delete":[{doc:"<p>The delete function is an updating function that deletes the collection with the given expanded QName.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"available-collections":[{doc:"<p>The function returns a sequence of QNames of the collections that are statically declared and available. The sequence will be empty if there are no such collections.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"declared-collections":[{doc:"<p>The function returns a sequence of QNames representing the collections that have been declared in the prolog of the static context.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"is-available-collection":[{doc:"<p>The function returns true if a collection with the given QName is statically declared and available (i.e. has been created).</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],create:[{doc:"<p>The create function is an updating function which creates the collection with the given expanded QName.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The create function is an updating function which creates the collection with the given expanded QName. Moreover, it adds copies of the sequence $content to the new collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"is-declared-collection":[{doc:"<p>The function returns true if a collection with the given QName is declared in the prolog of the static context.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}]}},"http://www.zorba-xquery.com/modules/store/static/collections/dml":{doc:"<p>This modules provides a set of functions to modify a collection and retrieve the items contained in a particular collection. This module is part of Zorba\'s XQuery Data Definition Facility . All the collections managed by this module have to be pre-declared in the prolog of a module. Please refer to ...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"apply-insert-nodes-first":[{doc:"<p>This function does the same as the insert-nodes-first function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"apply-insert-after":[{doc:"<p>This function does the same as the insert-after function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],truncate:[{doc:"<p>The truncate function is an updating function that deletes the entire contents of collection. Please note that applying this function can not be undone in case an error happens during the application of the containing PUL.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"delete":[{doc:"<p>The delete function is an updating function that deletes zero of more items (nodes and/or json items) from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$target"]}],"insert-after":[{doc:"<p>The insert-after function is an updating function that inserts copies of the given items (nodes and/or json items) into a collection at the position directlry following the given target item.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"apply-insert-first":[{doc:"<p>This function does the same as the insert-first function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"delete-node-first":[{doc:"<p>The delete-node-first function is an updating function that deletes the first node from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"delete-nodes-first":[{doc:"<p>The delete-nodes-first function is an updating function that deletes the first n nodes from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"delete-nodes-last":[{doc:"<p>The delete-nodes-last function is an updating function that deletes the last n nodes from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"apply-insert-nodes-last":[{doc:"<p>This function does the same as the insert-nodes-last function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-nodes-after":[{doc:"<p>The insert-nodes-after function is an updating function that inserts copies of the given nodes into a collection at the position directlry following the given target node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],collection:[{doc:"<p>The collection function returns the sequence of nodes and/or json items that belong to the collection identified by the given name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The collection function returns the sequence of nodes and/or json items that belong to the collection identified by the given name.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$skip"]}],"insert-before":[{doc:"<p>The insert-before function is an updating function that inserts copies of the given items (nodes and/or json items) into a collection at the position directly preceding the given target item.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"insert-first":[{doc:"<p>The insert-first function is an updating function that inserts copies of the given items (nodes and/or json items) at the beginning of a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"apply-insert-nodes":[{doc:"<p>This function does the same as the insert-nodes function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"delete-first":[{doc:"<p>The delete-first function is an updating function that deletes the first item from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The delete-first function is an updating function that deletes the first N items from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"insert-nodes-last":[{doc:"<p>The insert-nodes-last function is an updating function that inserts copies of the given nodes at the end of a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-last":[{doc:"<p>The insert-last function is an updating function that inserts copies of the given items (nodes and/or json items) at the end of a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"insert-nodes-first":[{doc:"<p>The insert-nodes-first function is an updating function that inserts copies of the given nodes at the beginning of a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],insert:[{doc:"<p>The insert function is an updating function that inserts copies of the given items (nodes and/or json items) into a collection. Please note that the insertion position of the items in the collection is not defined.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"index-of":[{doc:"<p>The index-of function returns the position of the given item (node or json item) within its containing collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$item"]}],"insert-nodes":[{doc:"<p>The insert-nodes function is an updating function that inserts copies of the given nodes into a collection. Please note that the insertion position of the nodes in the collection is not defined.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"delete-last":[{doc:"<p>The delete-last function is an updating function that deletes the last item from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]},{doc:"<p>The delete-last function is an updating function that deletes the last N items from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$number"]}],"apply-insert-nodes-after":[{doc:"<p>This function does the same as the insert-nodes-after function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$pos","$content"]}],"apply-insert-nodes-before":[{doc:"<p>This function does the same as the insert-nodes-before function except it immediately applies the resulting pending updates and returns the nodes that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"delete-nodes":[{doc:"<p>The delete-nodes function is an updating function that deletes zero of more nodes from a collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$target"]}],"insert-nodes-before":[{doc:"<p>The insert-nodes-before function is an updating function that inserts copies of the given nodes into a collection at the position directly preceding the given target node.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"apply-insert-last":[{doc:"<p>This function does the same as the insert-last function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}],"apply-insert-before":[{doc:"<p>This function does the same as the insert-before function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$target","$content"]}],"collection-name":[{doc:"<p>The collection-name function returns the name of the collection the given item (node or json item) belongs to.</p>",docUrl:"http://www.28msec.com/modules/",params:["$item"]}],"delete-node-last":[{doc:"<p>The delete-node-last function is an updating function that deletes the last node from an ordered collection.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"apply-insert":[{doc:"<p>This function does the same as the insert function except it immediately applies the resulting pending updates and returns the items that have been inserted.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$content"]}]}},"http://www.zorba-xquery.com/modules/store/static/indexes/ddl":{doc:"<p>This modules defines a set of functions for managing indexes which are declared in the prolog of a module. This module is part of Zorba\'s XQuery Data Definition Facility . All the indexes managed by this module have to be pre-declared in the prolog of a module. Please refer to the general documentat...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"delete":[{doc:"<p>The delete function is an updating function that deletes the index with the given expanded QName.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"is-declared-index":[{doc:"<p>The function returns true if a index with the given QName is declared in the prolog of the static context.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],create:[{doc:"<p>The create function is an updating function which creates the index with the given expanded QName and populates the index with its values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"declared-indexes":[{doc:"<p>The function returns a sequence of QNames representing the indexes that have been declared in the prolog of the static context.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"available-indexes":[{doc:"<p>The function returns a sequence of QNames representing the indexes that are available. The sequence will be empty if there are no indexes.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"is-available-index":[{doc:"<p>The function returns true if an index with the given QName is available. (i.e. has been created).</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}]}},"http://www.zorba-xquery.com/modules/store/static/indexes/dml":{doc:"<p>This module defines a set of functions to probe and refresh indexes which are declared in the prolog of a module. This module is part of Zorba\'s XQuery Data Definition Facility . All the indexes managed by this module have to be pre-declared in the prolog of a library module. Please refer to the gen...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"probe-index-point-value":[{doc:"<p>The probe-index-point-value function retrieves from an index the domain nodes associated by value equality with a given search tuple . The search tuple consists of a number of search keys , where each search key is either an atomic item or the empty sequence. The number of search keys given must be ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$key_i"]}],"probe-index-range-general":[{doc:"<p>The probe-index-range-general function retrieves the domain nodes associated by general order-comparison (operators &lt;=, &lt;, &gt;=, &gt;) with one or two search sequences . Each search sequence consists of an arbitrary number of search keys , where each search key is an atomic item. This method is supported...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$lowerBound","$upperBound","$haveLowerBound","$haveUpperBound","$lowerBoundIncluded","$upperBoundIncluded"]}],"probe-index-range-value":[{doc:"<p>The probe-index-range-value function retrieves the domain nodes associated by value order-comparison (operators le, lt, ge, gt) with a given search box . The search box is specified as a number M of rangespecs , where each rangespec consists of six values. The number M must be greater than 0 and les...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$lowerBound-i","$upperBound-i","$haveLowerBound-i","$haveUpperBound-i","$lowerBoundIncluded-i","$upperBoundIncluded-i"]}],"refresh-index":[{doc:"<p>The refresh-index function is an updating function which updates the index with the given name. Note that if the maintenance property of the index is automatic, this function is a NOP.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"probe-index-point-general":[{doc:"<p>The probe-index-point-general function retrieves from an index the domain nodes associated by general equality with a given search sequence . The search sequence consists of an arbitrary number of search keys , where each search key is an atomic item. The function is supported by general indexes onl...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$key"]}]}},"http://www.zorba-xquery.com/modules/store/static/integrity_constraints/ddl":{doc:"<p>This module defines a set of functions to manage integrity constraints which are declared in the prolog of a module. For example, it provides functions to activate or deactivate integrity constraints. This module is part of Zorba\'s XQuery Data Definition Facility . All the integrity constraints mana...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"activated-integrity-constraints":[{doc:"<p>The function returns a sequence of QNames representing the integrity constraints that are activated. The sequence will be empty if there are none.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],activate:[{doc:"<p>The activate function is an updating function that activates the integrity constraint identified by the expanded QName $name in the dynamic context.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"is-declared-integrity-constraint":[{doc:"<p>The function returns true if a integrity constraints with the given QName is declared in the prolog of the static context.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"is-activated-integrity-constraint":[{doc:"<p>The function returns true if an integrity constraints with the given QName is activated.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"declared-integrity-constraints":[{doc:"<p>The function returns a sequence of QNames representing the integrity constraints that have been declared in the prolog of the static context.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],deactivate:[{doc:"<p>The deactivate function is an updating function that deactivates the integrity constraint with the given QName.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}]}},"http://www.zorba-xquery.com/modules/store/static/integrity_constraints/dml":{doc:"<p>This module defines a function to check if an integrity constraint is satisfied. The integrity constraint needs to be declared in the prolog of a module. This module is part of Zorba\'s XQuery Data Definition Facility . All the integrity constraints managed by this module have to be pre-declared in t...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"check-integrity-constraint":[{doc:"<p>The check-integrity-constraint function checks if the constraints specified by the expanded QName $name is valid in the database.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}]}},"http://www.zorba-xquery.com/modules/string":{doc:"<p>This module provides string related functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"is-streamable":[{doc:"<p>This function checks whether a given string item is implemented by a streamable string. A streamable string is produced by some functions of a module (e.g. file:read-text()). It\'s an optimized implementation of an xs:string to handle arbitrary sized data. The drawback is that its value can only be c...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}],split:[{doc:"<p>Returns a sequence of strings constructed by splitting the input wherever the given separator is found. The function is different from fn:tokenize. It doesn\'t allow the separator to be a regular expression. This restriction allows for more performant implementation. Specifically, the function proces...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s","$separator"]}],materialize:[{doc:"<p>This function materializes a streamable string. The drawback of a streamable string is that its value can only be consumed once. That is, only one function can access the value of a streamable string item. In order to remedy this situation, this function can be used to convert a streamable string in...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s"]}]}},"http://www.zorba-xquery.com/modules/system":{doc:"<p>The system module allows developers to access system properties. Part of these system properties are environment variables, local variable to the process running Zorba, and properties defined by Zorba. To avoid conflicts between environment variables and properties defined by Zorba, all environment ...</p>",docUrl:"http://www.28msec.com/modules/",functions:{properties:[{doc:"<p>This function retrieves the names of the current system properties. This list includes environment variables, local variable to the process running Zorba, and properties defined by Zorba. To avoid conflicts between environment variables and properties defined by Zorba, all environment variables are ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],property:[{doc:"<p>Gets the system property indicated by the specified key.</p>",docUrl:"http://www.28msec.com/modules/",params:["$key"]}]}},"http://www.zorba-xquery.com/modules/uri":{doc:"<p>This module provides string related functions.</p>",docUrl:"http://www.28msec.com/modules/",functions:{decode:[{doc:"<p>Percent-decodes (aka URL decoding) the given string. All percent encoded octets will be translated into their decoded UTF-8 representation. Please note that the percent encoding guarantees that a string consists of ASCII characters only. Passing a string that contains non-ASCII characters results in...</p>",docUrl:"http://www.28msec.com/modules/",params:["$u"]},{doc:"<p>Percent-decodes (aka URL decoding) the given string. All percent encoded octets will be translated into their decoded UTF-8 representation. If $decode-plus is specified all occurrences of the char \'+\' will be replaced with a space \' \' before the percent decoding happens. Please note that the percent...</p>",docUrl:"http://www.28msec.com/modules/",params:["$u","$decode-plus"]},{doc:"<p>Percent-decodes (aka URL decoding) the given string. All percent encoded octets will be translated into their decoded UTF-8 representation. If $decode-plus is specified all occurrences of the char \'+\' will be replaced with a space \' \' before the percent decoding happens. The $charset parameter speci...</p>",docUrl:"http://www.28msec.com/modules/",params:["$s","$decode-plus","$charset"]}]}},"http://www.zorba-xquery.com/modules/util-jvm":{doc:"<p>This module provides common functionality for modules that use java implementations. Modules using java implementations must import this module to specify the dependency. Note: Since this module has a Java library dependency a JVM is required to be installed on the system. For Windows: jvm.dll is re...</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://www.zorba-xquery.com/modules/xml":{doc:"<p>This module provides functions for reading XML files from string inputs. It allows reading of well-formed XML documents as well as well-formed external parsed entities, described by XML 1.0 Well-Formed Parsed Entities . The functions can also perform Schema and DTD validation of the input documents....</p>",docUrl:"http://www.28msec.com/modules/",functions:{"parse-xml-fragment":[{doc:"<p>Note: this function is included for backwards compatibility purposes. It is recommended that you use the parse-xml:parse() function instead. A function to parse XML files and fragments (i.e. external general parsed entities ). The functions takes two arguments: the first one is the string to be pars...</p>",docUrl:"http://www.28msec.com/modules/",params:["$xml-string","$options"]},{doc:"<p>Note: this function is included for backwards compatibility purposes. It is recommended that you use the parse-xml:parse() function instead. A function to parse XML files and fragments. The behavior is the same as the parse-xml-fragment with two arguments.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xml-string","$base-uri","$options"]}],parse:[{doc:"<p>A function to parse XML files and fragments (i.e. external general parsed entities ). The functions takes two arguments: the first one is the string to be parsed and the second argument is an &lt;options/&gt; element that passes a list of options to the parsing function. They are described below. The opti...</p>",docUrl:"http://www.28msec.com/modules/",params:["$xml-string","$options"]}]}},"http://www.zorba-xquery.com/modules/xqdoc":{doc:"<p>The goal of xqDoc is to provide a simple vendor neutral solution for documenting XQuery modules, as well as tools to generate a user friendly presentation of this documentation and cross referencing information. Therefore, xqDoc proposes a new commenting convention that extends the currently defined...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"xqdoc-content":[{doc:"<p>Generated the an XQDoc XML document for the module provided as parameter to this function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$module"]}],xqdoc:[{doc:"<p>Generated an XQDoc XML document for the module located at the URI provided as parameter to this function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$module-uri"]}]}},"http://www.zorba-xquery.com/modules/xqdoc2xhtml/error":{doc:"<p>This module defines all errors for the xqdoc2xhtml module.</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://www.zorba-xquery.com/modules/xqdoc2xhtml/":{doc:"<p>Function library providing transformation functions from XQDoc to XHTML.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"create-left-menu":[{doc:"<p>This function creates menu header provided $pageName page.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"annotations-module":[{doc:"<p>Create the XHTML for all module annotations except these ones: description param return error deprecated see library</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"module-resources":[{doc:"<p>Create the XHTML for the module resources.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdocXhtmlPath","$moduleUri"]}],"copy-example":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$exampleSource","$exampleDestination","$examplePath"]}],errors:[{doc:"<p>Return the possible function errors.</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"create-collection-categories":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$collectionName","$xqdocXmlPath"]}],"add-images":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$type"]}],"module-namespaces":[{doc:"<p>Create the module namespaces XHTML.</p>",docUrl:"http://www.28msec.com/modules/",params:["$namespaces"]}],"annotations-see":[{doc:"<p>This function groups together all the @see annotations.</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"add-left-menu":[{doc:"<p>This function creates the XQDoc XHTML.</p>",docUrl:"http://www.28msec.com/modules/",params:["$menu","$templatePath"]}],"create-module-helper":[{doc:"<p>This function add the subcategories in the menu.</p>",docUrl:"http://www.28msec.com/modules/",params:["$table","$category","$currentCategory"]}],"copy-files":[{doc:"<p>The function gathers all the files with the given extensions from the provided $sourcePath and copies them to $destinationPath. The folder structure is not preserved.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourcePath","$destinationPath","$extensions"]}],"split-function-signature":[{doc:"<p>Pretty print the function signature.</p>",docUrl:"http://www.28msec.com/modules/",params:["$signature"]}],"create-module-table-rec":[{doc:"<p>Recursive helper</p>",docUrl:"http://www.28msec.com/modules/",params:["$level1","$leveln","$curentCat","$table","$mustOrder"]}],"get-project-root":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$moduleUri"]}],"create-module-table":[{doc:"<p>This function creates the categories in the menu.</p>",docUrl:"http://www.28msec.com/modules/",params:["$level1","$root"]}],"copy-xhtml-requisites":[{doc:"<p>The function copies all the files under the following folders from $xhtmlRequisitesPath to $xqdocBuildPath/xhtml folder: schemas images java scripts css stylesheets templates xq.src folders</p>",docUrl:"http://www.28msec.com/modules/",params:["$xhtmlRequisitesPath","$xqdocBuildPath"]}],"generate-xqdoc-xhtml":[{doc:"<p>This function reads the XQDoc XML and then invokes the creation of the XHTML for all the modules corresponding to the XML\'s found in $xqdocXmlPath and writes the resulting XHTML\'s in $xqdocXhtmlPath. The hierarchy is not preserved.</p>",docUrl:"http://www.28msec.com/modules/",params:["$generalLeftMenu","$xhtmlRequisitesPath","$xqdocXhtmlPath"]}],"generate-index-html":[{doc:"<p>This function reads, updates and returns the new index.html.</p>",docUrl:"http://www.28msec.com/modules/",params:["$templatePath","$menu","$modules","$zorbaVersion"]}],"module-function-summary":[{doc:"<p>Create the functions summary XHTML table.</p>",docUrl:"http://www.28msec.com/modules/",params:["$functions"]}],"configure-xml":[{doc:"<p>This function does some additional processing for the $xml like replacing examples with actual links to files.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc","$examplePath","$xqdocXhtmlPath"]}],"value-except":[{doc:"<p>This function returns a sequence containing all the distinct items that appear in $arg1 but not in $arg2, in an arbitrary order.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"function-parameters":[{doc:"<p>Return the function parameters.</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"collect-schema":[{doc:"<p>This function adds a new record into the $collector.</p>",docUrl:"http://www.28msec.com/modules/",params:["$schemaURI","$fileName","$collector"]}],"module-description":[{doc:"<p>Create the module description and module annotations.</p>",docUrl:"http://www.28msec.com/modules/",params:["$moduleUri","$modulePrefix","$module"]}],"generate-function-index":[{doc:"<p>This function generates the XQDoc function index.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"value-intersect":[{doc:"<p>This function returns a sequence containing all the distinct items that appear in both $arg1 and $arg2, in an arbitrary order.</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"get-module-version":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$moduleUri"]}],"get-filename":[{doc:"<p>Returns the string resulting from replacing the directory-separators (i.e. // ) with \'_\'</p>",docUrl:"http://www.28msec.com/modules/",params:["$moduleURI"]}],"module-dependencies":[{doc:"<p>Create the XHTML for the module dependencies (imported modules, schemas).</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc"]}],"gather-and-copy":[{doc:"<p>The function gathers all the files with the given extensions from the provided $sourcePath and copies them to $destinationPath. The folder structure is not preserved (all files are saved on the same folder level independent of their source folder structure).</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourcePath","$destinationPath","$extensions"]}],"collect-entry":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$href","$name","$structure","$pureXQuery","$moduleURI"]}],"order-level1-entries":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$entries"]}],"get-distinct-children":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$level1","$currentCat"]}],"get-is-core":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$moduleUri"]}],functions:[{doc:"<p>Create the details for all the functions.</p>",docUrl:"http://www.28msec.com/modules/",params:["$functions","$xqdocXhtmlPath"]}],body:[{doc:"<p>This function creates the XQDoc XHTML body.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc","$xqdocXhtmlPath"]}],"annotations-example":[{doc:"<p>This function groups together all the @example annotations.</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment","$xqdocXhtmlPath"]}],"module-variables":[{doc:"<p>Create the module variables XHTML.</p>",docUrl:"http://www.28msec.com/modules/",params:["$variables"]}],"contains-external-functions":[{doc:"<p>This function returns true if there are external functions declared.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc"]}],"module-external-specifications":[{doc:"<p>Create the items for the Related Documentation (\'see\' annotations appearing in the module description part).</p>",docUrl:"http://www.28msec.com/modules/",params:["$module"]}],"replace-with-a-html-tag":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$text"]}],"module-uri":[{doc:"<p>Get the XQDoc module URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc"]}],"module-function-link":[{doc:"<p>Append in the beginning of the function name updating, sequential, nondeterministic is applicable.</p>",docUrl:"http://www.28msec.com/modules/",params:["$name","$signature"]}],"parse-spec-args":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$exampleSource","$specLines"]}],collectZorbaManifestEntries:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$zorbaManifestPath","$xqdocBuildPath"]}],"create-xhtml-wrapper":[{doc:"<p>This function embeds some content into XML or XQuery.</p>",docUrl:"http://www.28msec.com/modules/",params:["$content","$type"]}],"create-general-menu":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:[]}],"annotations-author":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"collect-menu-entries":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:[]}],"function-is-not-private":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$function"]}],"get-example-filename":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$examplePath"]}],doc:[{doc:"<p>This function creates the XQDoc XHTML.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc","$menu","$templatePath","$xqdocXhtmlPath"]}],annotations:[{doc:"<p>Create the XHTML for all function annotations except these ones: description param return error deprecated see example .</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"function-return":[{doc:"<p>Create the XHTML for all function return values.</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"get-example-filename-link":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$examplePath"]}],"load-expected-results":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$result_split"]}],main:[{doc:"<p>This function creates the XQDoc XMLs and from them the XQDoc XHTMLs.</p>",docUrl:"http://www.28msec.com/modules/",params:["$zorbaManifestPath","$xqdocBuildPath","$indexHtmlPath","$zorbaVersion","$xhtmlRequisitesPath"]}],"generate-function-index-xhtml":[{doc:"<p>This function generates the XQDoc function index page.</p>",docUrl:"http://www.28msec.com/modules/",params:["$indexFunctionLeft","$templatePath","$functionIndexPath"]}],description:[{doc:"<p>Create the XHTML for all description annotations.</p>",docUrl:"http://www.28msec.com/modules/",params:["$comment"]}],"resolve-file-path":[{doc:"<p>This function resolves a relative file path given a directory path. The function will fail throwing an error if the destination directory does not exist or if the resulting path does not point to an existing file.</p>",docUrl:"http://www.28msec.com/modules/",params:["$relativeFilePath","$directoryPath"]}],"parse-spec-results":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$exampleSource","$specLines"]}],"copy-examples":[{doc:"<p>This method copies all the examples and inlineexamples to the $xqdocXhtmlPath/examples folder.</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc","$examplesFolderDestination","$examplePath"]}],"copy-schemas":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$schemas","$xqdocXhtmlPath"]}],imports:[{doc:"<p>Create the items for the module dependencies (imported modules, schemas).</p>",docUrl:"http://www.28msec.com/modules/",params:["$xqdoc"]}]}},"http://www.zorba-xquery.com/modules/xsl-fo":{doc:\'<p>This module converts XSL-FO documents to various formats such as PDF, EPS, PCL, AFP, Text, PNG, Postscript, RTF, and TIFF. For instance, the following example converts a simple XSL-FO document to PDF: import module namespace fop = "http://www.zorba-xquery.com/modules/xsl-fo"; import module namespace...</p>\',docUrl:"http://www.28msec.com/modules/",functions:{"generator-impl":[{doc:"<p>Internal function used to format XSL-FO documents.</p>",docUrl:"http://www.28msec.com/modules/",params:["$output-format","$xsl-fo-document"]}],generator:[{doc:"<p>The function behaves like generator#3 , but tries to find the needed Java libraries itself. On a Mac OS X computer, it should be sufficient to install Apache FOP via Mac Ports. On Ubuntu it should be sufficient to install the fop packages via apt-get. On Windows, the classpath needs to be set manual...</p>",docUrl:"http://www.28msec.com/modules/",params:["$output-format","$xsl-fo-document"]},{doc:\'<p>Deprecated. This function has been deprecated, the JVM and it\\\'s classpath is handled diffrently. The generator function takes an XSL-FO document as input and generates output in the format given as input. The output format can be given as a MIME type - for example "application/pdf" - or one of the p...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$output-format","$xsl-fo-document","$classpath"]}]}},"http://www.zorba-xquery.com/warnings":{doc:"<p>This module contains one declaration of a variable for each error of the http://www.zorba-xquery.com/warnings namespace. The variables serves as documentation for the errors but can also be used in the code. For example, one useful scenario is to compare an error caught in the catch clause of a try-...</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://expath.org/ns/error":{doc:"<p>This module defines all errors for the http-client module.</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://expath.org/ns/file":{doc:"<p>This module implements the file API EXPath specification available at http://expath.org/spec/file</p>",docUrl:"http://www.28msec.com/modules/",functions:{"read-binary":[{doc:"<p>Reads the content of a file and returns a Base64 representation of the content.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file"]}],"create-directory":[{doc:"<p>Creates a directory. The operation is will create all the missing parent directories from the given path.</p>",docUrl:"http://www.28msec.com/modules/",params:["$dir"]}],copy:[{doc:"<p>Copies a file or a directory given a source and a destination path/URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$source","$destination"]}],"append-binary":[{doc:"<p>Appends a sequence of Base64 items as binary to a file. If the file pointed by $file does not exist, a new file will be created.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file","$content"]}],"dir-name":[{doc:\'<p>This function is the converse of file:base-name . It returns a string denoting the parent directory of the $path . Any trailing directory-separator characters are not counted as part of the directory name. If path is the empty string or contains no directory-separator string, "." is returned, signif...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"read-text-lines":[{doc:\'<p>Reads the content of a file and returns a sequence of strings representing the lines in the content of the file. The operation is equivalent to calling: file:read-text-lines($file, "UTF-8") .</p>\',docUrl:"http://www.28msec.com/modules/",params:["$file"]},{doc:"<p>Reads the content of a file using the specified encoding and returns a sequence of strings representing the lines in the content of the file. This implementation considers the LF ( ) character as the line separator. If a resulting line ends with the CR ( ) character, this is trimmed as well. This im...</p>",docUrl:"http://www.28msec.com/modules/",params:["$file","$encoding"]}],"delete":[{doc:"<p>Deletes a file or a directory from the file system. If $path points to a directory the directory will be deleted recursively.</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"copy-directory-impl":[{doc:"<p>Copies a source directory recursively to a destination path/URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceDir","$destination"]}],move:[{doc:"<p>Moves a file or directory given a source and a destination paths/URIs.</p>",docUrl:"http://www.28msec.com/modules/",params:["$source","$destination"]}],append:[{doc:"<p>Appends a sequence of items to a file. If the file pointed by $file does not exist, a new file will be created. Before writing to the file, the items are serialized according to the $serializer-params . The semantics of $serializer-params is the same as for the $params parameter of the fn:serialize ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$file","$content","$serializer-params"]}],exists:[{doc:"<p>Tests if a path/URI is already used in the file system.</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"glob-to-regex":[{doc:"<p>A helper function that performs a trivial (not complete) glob to regex pattern translation.</p>",docUrl:"http://www.28msec.com/modules/",params:["$pattern"]}],"write-binary":[{doc:"<p>Writes a sequence of Base64 items as binary to a file.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file","$content"]}],write:[{doc:"<p>Writes a sequence of items to a file. Before writing to the file, the items are serialized according to the $serializer-params . The semantics of $serializer-params is the same as for the $params parameter of the fn:serialize function.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file","$content","$serializer-params"]}],"directory-separator":[{doc:"<p>This function returns the value of the operating system specific directory separator. For example, / on UNIX-based systems and \\\\ on Windows systems.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"delete-directory-impl":[{doc:"<p>Deletes a directory from the file system.</p>",docUrl:"http://www.28msec.com/modules/",params:["$dir"]}],size:[{doc:"<p>Retrieves the size of a file.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file"]}],"delete-file-impl":[{doc:"<p>Deletes a file from the file system.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file"]}],"read-text":[{doc:\'<p>Reads the content of a file and returns a string representation of the content. The operation is equivalent to calling: file:read-text($file, "UTF-8") .</p>\',docUrl:"http://www.28msec.com/modules/",params:["$file"]},{doc:\'<p>Reads the content of a file using the specified encoding and returns a string representation of the content. In Zorba only the following encodings are currently supported: "UTF-8", "UTF8". The encoding parameter is case insensitive.</p>\',docUrl:"http://www.28msec.com/modules/",params:["$file","$encoding"]}],"resolve-path":[{doc:"<p>Transforms a relative path/URI into an absolute operating system path by resolving it against the current working directory. No path existence check is made.</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"copy-directory":[{doc:"<p>This is an internal function that copies an entire source directory to an destination directory. The caller to this function must make sure that both the source and destination point to existing directories.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceDir","$destinationDir"]}],"path-to-uri":[{doc:"<p>Transforms a file system path into a URI with the file:// scheme. If the path is relative, it is first resolved against the current working directory. No path existence check is made.</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}],list:[{doc:"<p>Lists the file system items in a certain directory. The operation is equivalent to calling: file:list($dir, fn:false()) .</p>",docUrl:"http://www.28msec.com/modules/",params:["$dir"]},{doc:\'<p>Lists the file system items in a certain directory. The order of the items in the resulting sequence is not defined. The "." and ".." items are not returned. The returned paths are relative to the provided $path . If $recursive evaluates to fn:true() , the operation will recurse in the subdirectorie...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$path","$recursive"]},{doc:\'<p>Lists all files matching the given pattern in a given directory. The order of the items in the result is not defined. The "." and ".." items are not considered for the match. The file paths are relative to the provided $path. The pattern is a glob expression supporting: * for matching any number of ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$path","$recursive","$pattern"]}],"prepare-for-dirname-and-base-name":[{doc:"<p>This is a helper function used by dirname and base-name. This function takes a path as input and normalizes it according to the rules states in dirname/base-name documentation and normalizes it to a system specific path.</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"is-file":[{doc:"<p>Tests if a path/URI points to a file.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file"]}],"append-text":[{doc:"<p>Appends a sequence of string items to a file.</p>",docUrl:"http://www.28msec.com/modules/",params:["$file","$content"]}],"path-separator":[{doc:"<p>This function returns the value of the operating system specific path separator. For example, : on UNIX-based systems and ; on Windows systems.</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"path-to-native":[{doc:"<p>Transforms a URI, an absolute path, or relative path to a native path on the running platform. No path existence check is made.</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"write-text":[{doc:"<p>Writes a sequence of string items to a file. The operation is equivalent to calling: file:write-text($file, $content, fn:true()) .</p>",docUrl:"http://www.28msec.com/modules/",params:["$file","$content"]}],"copy-file-impl":[{doc:"<p>Copies a file given a source and a destination path/URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceFile","$destination"]}],"is-directory":[{doc:"<p>Tests if a path/URI points to a directory. On UNIX-based systems, the root and the volume roots are considered directories.</p>",docUrl:"http://www.28msec.com/modules/",params:["$dir"]}],"last-modified":[{doc:"<p>Retrieves the timestamp of the last modification of the file system item pointed by the path/URI.</p>",docUrl:"http://www.28msec.com/modules/",params:["$path"]}],"copy-directory-content":[{doc:"<p>Copies the content of a given directory to an existing destination directory.</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceDir","$destination"]}],"base-name":[{doc:\'<p>Returns the last component from the $path , deleting any trailing directory-separator characters. If $path consists entirely directory-separator characters, the empty string is returned. If $path is the empty string, the string "." is returned, signifying the current directory. No path existence che...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$path"]},{doc:\'<p>Returns the last component from the $path , deleting any trailing directory-separator characters and the $suffix . If path consists entirely directory-separator characters, the empty string is returned. If path is the empty string, the string "." is returned, signifying the current directory. No pat...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$path","$suffix"]}]}},"http://expath.org/ns/http-client":{doc:"<p>This module provides an implementation of the EXPath Http Client . It provides functions for making HTTP requests and is a superset of the module specified by EXPath. Specifically, it implements the http:send-request() functions as specified by EXPath. Moreover, it adds an additional function http:r...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"send-request":[{doc:"<p>The function takes a description of the request in parameter, and returns a representation of the response.</p>",docUrl:"http://www.28msec.com/modules/",params:["$request"]},{doc:"<p>Function for convenience. Calling this function is equivalent to calling http:send-request($request, $href, ())</p>",docUrl:"http://www.28msec.com/modules/",params:["$request","$href"]},{doc:"<p>This function sends an HTTP request and returns the corresponding response. This function is declared as sequential (see XQuery Scripting). Sequential functions are allowed to have side effects. For example, most probably, an HTTP POST request is a request that has side effects because it adds/chang...</p>",docUrl:"http://www.28msec.com/modules/",params:["$request","$href","$bodies"]}],"tidy-result":[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$result","$override-media-type"]}]}},"http://www.jsoniq.org/errors":{doc:"<p>This module contains one declaration of a variable for each error of the http://www.jsoniq.org/errors namespace. The variables serves as documentation for the errors but can also be used in the code. For example, one useful scenario is to compare an error caught in the catch clause of a try-catch ex...</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://www.jsoniq.org/functions":{doc:"<p>This module provides the functions defined by the JSONiq specification, sections 1.7 (Functions) and 1.10 (Update Primitives). JSONiq extends the XQuery specification to also deal with JSON data natively. See http://www.jsoniq.org/ for details. This module depends on having the JSONiq feature enable...</p>",docUrl:"http://www.28msec.com/modules/",functions:{"parse-json":[{doc:"<p>This function has the same semantics as fn:parse-xml(), except that it parses the string as JSON (not XML), and returns an Object or Array rather than an XML document.</p>",docUrl:"http://www.28msec.com/modules/",params:["$j"]}],project:[{doc:"<p>Creates an object from the specified pairs of another given object. Specifically, for each name in $names, if the object $o has a pair with that name, then a copy of that pair is included in the new object.</p>",docUrl:"http://www.28msec.com/modules/",params:["$o","$names"]}],keys:[{doc:"<p>Returns the names used in the object. The names will be returned in an implementation-defined order</p>",docUrl:"http://www.28msec.com/modules/",params:["$o"]}],size:[{doc:"<p>Returns the size of a JSON Array. The size of an Array is the number of members contained within it.</p>",docUrl:"http://www.28msec.com/modules/",params:["$j"]}],flatten:[{doc:\'<p>Recursively "flatten" a JSON Array, by replacing any arrays with their members. Equivalent to define function jn:flatten($arg as array()) { for $value in jn:values($arg) return if ($value instance of array()) then jn:flatten($value) else $value };</p>\',docUrl:"http://www.28msec.com/modules/",params:["$a"]}],value:[{doc:"<p>Returns the value of a JSON Pair with a given name within a given JSON object. If no such pair exists in the object, returns the empty sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$o","$name"]}],member:[{doc:"<p>Returns the member of an Array at the specified position (starting from 1). If the position is out of bounds of the array, returns the empty sequence.</p>",docUrl:"http://www.28msec.com/modules/",params:["$a","$p"]}],members:[{doc:"<p>Returns the members of an Array.</p>",docUrl:"http://www.28msec.com/modules/",params:["$o"]}]}},"http://www.w3.org/2005/xpath-functions/math":{doc:\'<p>This module contains all the functions part of the W3C XPath and XQuery Functions and Operators 3.0 section "4.7 Trigonometric and exponential functions".</p>\',docUrl:"http://www.28msec.com/modules/",functions:{acos:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],exp:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],log:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],pi:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:[]}],log10:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],sin:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$theta"]}],pow:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$x","$y"]}],atan:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],cos:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$theta"]}],sqrt:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],asin:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],exp10:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],atan2:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$y","$x"]}],tan:[{doc:"<p/>",docUrl:"http://www.28msec.com/modules/",params:["$theta"]}]}},"http://www.w3.org/2005/xpath-functions":{doc:"<p>This module contains all the functions specified in the W3C XPath and XQuery Functions and Operators 3.0.</p>",docUrl:"http://www.28msec.com/modules/",functions:{"distinct-values":[{doc:"<p>Returns the values that appear in a sequence, with duplicates eliminated. Signatures fn:distinct-values ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType* fn:distinct-values ( $arg  as  xs:anyAtomicType* , $collation  as  xs:string )  as  xs:anyAtomicType* Properties This function is · determini...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns the values that appear in a sequence, with duplicates eliminated. Signatures fn:distinct-values ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType* fn:distinct-values ( $arg  as  xs:anyAtomicType* , $collation  as  xs:string )  as  xs:anyAtomicType* Properties This function is · determini...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$collation"]}],"months-from-duration":[{doc:"<p>Returns the number of months in a duration. Signature fn:months-from-duration ( $arg  as  xs:duration? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"current-date":[{doc:"<p>Returns the current date. Signature fn:current-date ()  as  xs:date Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on implicit-timezone. Rules Returns xs:date(fn:current-dateTime()) . This is an xs:date (with timezone) that is current a...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"local-name":[{doc:"<p>Returns the local part of the name of $arg as an xs:string that is either the zero-length string, or has the lexical form of an xs:NCName . Signatures fn:local-name ()  as  xs:string fn:local-name ( $arg  as  node()? )  as  xs:string Properties The zero-argument form of this function is · determinis...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the local part of the name of $arg as an xs:string that is either the zero-length string, or has the lexical form of an xs:NCName . Signatures fn:local-name ()  as  xs:string fn:local-name ( $arg  as  node()? )  as  xs:string Properties The zero-argument form of this function is · determinis...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"unparsed-text-lines":[{doc:"<p>The fn:unparsed-text-lines function reads an external resource (for example, a file) and returns its contents as a sequence of strings, one for each line of text in the file. Signatures fn:unparsed-text-lines ( $href  as  xs:string? )  as  xs:string* fn:unparsed-text-lines ( $href  as  xs:string? , ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]},{doc:"<p>The fn:unparsed-text-lines function reads an external resource (for example, a file) and returns its contents as a sequence of strings, one for each line of text in the file. Signatures fn:unparsed-text-lines ( $href  as  xs:string? )  as  xs:string* fn:unparsed-text-lines ( $href  as  xs:string? , ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$href","$encoding"]}],id:[{doc:"<p>Returns the sequence of element nodes that have an ID value matching the value of one or more of the IDREF values supplied in $arg . Signatures fn:id ( $arg  as  xs:string* )  as  element()* fn:id ( $arg  as  xs:string* , $node  as  node() )  as  element()* Properties The one-argument form of this f...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns the sequence of element nodes that have an ID value matching the value of one or more of the IDREF values supplied in $arg . Signatures fn:id ( $arg  as  xs:string* )  as  element()* fn:id ( $arg  as  xs:string* , $node  as  node() )  as  element()* Properties The one-argument form of this f...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$node"]}],empty:[{doc:"<p>Returns true if the argument is the empty sequence. Signature fn:empty ( $arg  as  item()* )  as  xs:boolean Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If the value of $arg is the empty sequence, the function returns true ; otherwise, ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"years-from-duration":[{doc:"<p>Returns the number of years in a duration. Signature fn:years-from-duration ( $arg  as  xs:duration? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"document-uri":[{doc:"<p>Returns the URI of a resource where a document can be found, if available. Signatures fn:document-uri ()  as  xs:anyURI? fn:document-uri ( $arg  as  node()? )  as  xs:anyURI? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . T...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the URI of a resource where a document can be found, if available. Signatures fn:document-uri ()  as  xs:anyURI? fn:document-uri ( $arg  as  node()? )  as  xs:anyURI? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . T...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],name:[{doc:"<p>Returns the name of a node, as an xs:string that is either the zero-length string, or has the lexical form of an xs:QName . Signatures fn:name ()  as  xs:string fn:name ( $arg  as  node()? )  as  xs:string Properties The zero-argument form of this function is · deterministic · , · context-dependent ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the name of a node, as an xs:string that is either the zero-length string, or has the lexical form of an xs:QName . Signatures fn:name ()  as  xs:string fn:name ( $arg  as  node()? )  as  xs:string Properties The zero-argument form of this function is · deterministic · , · context-dependent ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"hours-from-time":[{doc:"<p>Returns the hours component of an xs:time . Signature fn:hours-from-time ( $arg  as  xs:time? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. Otherwi...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"month-from-date":[{doc:"<p>Returns the month component of an xs:date . Signature fn:month-from-date ( $arg  as  xs:date? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. Otherwi...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],last:[{doc:"<p>Returns the context size from the dynamic context. Signature fn:last ()  as  xs:integer Properties This function is · deterministic · , · context-dependent · , and · focus-dependent · . Rules Returns the context size from the dynamic context. (See Section C.2 Dynamic Context Components XP30 .) Error...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"default-collation":[{doc:"<p>Returns the value of the default collation property from the static context. Signature fn:default-collation ()  as  xs:string Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on collations. Rules Returns the value of the default collation...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],matches:[{doc:"<p>Returns true if the supplied string matches a given regular expression. Signatures fn:matches ( $input  as  xs:string? , $pattern  as  xs:string )  as  xs:boolean fn:matches ( $input  as  xs:string? , $pattern  as  xs:string , $flags  as  xs:string )  as  xs:boolean Properties This function is · det...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern"]},{doc:"<p>Returns true if the supplied string matches a given regular expression. Signatures fn:matches ( $input  as  xs:string? , $pattern  as  xs:string )  as  xs:boolean fn:matches ( $input  as  xs:string? , $pattern  as  xs:string , $flags  as  xs:string )  as  xs:boolean Properties This function is · det...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern","$flags"]}],"string-length":[{doc:"<p>Returns the number of · characters · in a string. Signatures fn:string-length ()  as  xs:integer fn:string-length ( $arg  as  xs:string? )  as  xs:integer Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the number of · characters · in a string. Signatures fn:string-length ()  as  xs:integer fn:string-length ( $arg  as  xs:string? )  as  xs:integer Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],count:[{doc:"<p>Returns the number of items in a sequence. Signature fn:count ( $arg  as  item()* )  as  xs:integer Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns the number of items in the value of $arg . Notes Returns 0 if $arg is t...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"prefix-from-QName":[{doc:"<p>Returns the prefix component of the supplied QName. Signature fn:prefix-from-QName ( $arg  as  xs:QName? )  as  xs:NCName? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence the function returns the empty sequence...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"parse-xml-fragment":[{doc:"<p>This function takes as input an XML external entity represented as a string, and returns the document node at the root of an XDM tree representing the parsed document fragment. Signature fn:parse-xml-fragment ( $arg  as  xs:string? )  as  document-node()? Properties This function is · nondeterminist...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"boolean":[{doc:"<p>Computes the effective boolean value of the sequence $arg . Signature fn:boolean ( $arg  as  item()* )  as  xs:boolean Rules The function computes the effective boolean value of a sequence, defined according to the following rules. See also Section 2.4.3 Effective Boolean Value XP30 . If $arg is the...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],min:[{doc:"<p>Returns a value that is equal to the lowest value appearing in the input sequence. Signatures fn:min ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType? fn:min ( $arg  as  xs:anyAtomicType* , $collation  as  xs:string )  as  xs:anyAtomicType? Properties This function is · deterministic · , · cont...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns a value that is equal to the lowest value appearing in the input sequence. Signatures fn:min ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType? fn:min ( $arg  as  xs:anyAtomicType* , $collation  as  xs:string )  as  xs:anyAtomicType? Properties This function is · deterministic · , · cont...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$collation"]}],"normalize-unicode":[{doc:"<p>Returns the value of $arg after applying Unicode normalization. Signatures fn:normalize-unicode ( $arg  as  xs:string? )  as  xs:string fn:normalize-unicode ( $arg  as  xs:string? , $normalizationForm  as  xs:string )  as  xs:string Properties This function is · deterministic · , · context-independe...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns the value of $arg after applying Unicode normalization. Signatures fn:normalize-unicode ( $arg  as  xs:string? )  as  xs:string fn:normalize-unicode ( $arg  as  xs:string? , $normalizationForm  as  xs:string )  as  xs:string Properties This function is · deterministic · , · context-independe...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$normalizationForm"]}],number:[{doc:"<p>Returns the value indicated by $arg or, if $arg is not specified, the context item after atomization, converted to an xs:double . Signatures fn:number ()  as  xs:double fn:number ( $arg  as  xs:anyAtomicType? )  as  xs:double Properties The zero-argument form of this function is · deterministic · , ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the value indicated by $arg or, if $arg is not specified, the context item after atomization, converted to an xs:double . Signatures fn:number ()  as  xs:double fn:number ( $arg  as  xs:anyAtomicType? )  as  xs:double Properties The zero-argument form of this function is · deterministic · , ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"adjust-time-to-timezone":[{doc:"<p>Adjusts an xs:time value to a specific timezone, or to no timezone at all. Signatures fn:adjust-time-to-timezone ( $arg  as  xs:time? )  as  xs:time? fn:adjust-time-to-timezone ( $arg  as  xs:time? , $timezone  as  xs:dayTimeDuration? )  as  xs:time? Properties The one-argument form of this function...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Adjusts an xs:time value to a specific timezone, or to no timezone at all. Signatures fn:adjust-time-to-timezone ( $arg  as  xs:time? )  as  xs:time? fn:adjust-time-to-timezone ( $arg  as  xs:time? , $timezone  as  xs:dayTimeDuration? )  as  xs:time? Properties The one-argument form of this function...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$timezone"]}],abs:[{doc:"<p>Returns the absolute value of $arg . Signature fn:abs ( $arg  as  numeric? )  as  numeric? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules General rules: see 4.4 Functions on numeric values . If $arg is negative the function returns -$arg ,...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],nilled:[{doc:"<p>Returns true for an element that is nilled . Signatures fn:nilled ()  as  xs:boolean fn:nilled ( $arg  as  node()? )  as  xs:boolean? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this function is ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns true for an element that is nilled . Signatures fn:nilled ()  as  xs:boolean fn:nilled ( $arg  as  node()? )  as  xs:boolean? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this function is ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"timezone-from-dateTime":[{doc:"<p>Returns the timezone component of an xs:dateTime . Signature fn:timezone-from-dateTime ( $arg  as  xs:dateTime? )  as  xs:dayTimeDuration? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns t...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"normalize-space":[{doc:"<p>Returns the value of $arg with leading and trailing whitespace removed, and sequences of internal whitespace reduced to a single space character. Signatures fn:normalize-space ()  as  xs:string fn:normalize-space ( $arg  as  xs:string? )  as  xs:string Properties The zero-argument form of this funct...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the value of $arg with leading and trailing whitespace removed, and sequences of internal whitespace reduced to a single space character. Signatures fn:normalize-space ()  as  xs:string fn:normalize-space ( $arg  as  xs:string? )  as  xs:string Properties The zero-argument form of this funct...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],reverse:[{doc:"<p>Reverses the order of items in a sequence. Signature fn:reverse ( $arg  as  item()* )  as  item()* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns a sequence containing the items in $arg in reverse order. Notes If $arg ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"adjust-dateTime-to-timezone":[{doc:"<p>Adjusts an xs:dateTime value to a specific timezone, or to no timezone at all. Signatures fn:adjust-dateTime-to-timezone ( $arg  as  xs:dateTime? )  as  xs:dateTime fn:adjust-dateTime-to-timezone ( $arg  as  xs:dateTime? , $timezone  as  xs:dayTimeDuration? )  as  xs:dateTime Properties The one-argu...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Adjusts an xs:dateTime value to a specific timezone, or to no timezone at all. Signatures fn:adjust-dateTime-to-timezone ( $arg  as  xs:dateTime? )  as  xs:dateTime fn:adjust-dateTime-to-timezone ( $arg  as  xs:dateTime? , $timezone  as  xs:dayTimeDuration? )  as  xs:dateTime Properties The one-argu...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$timezone"]}],"escape-html-uri":[{doc:"<p>Escapes a URI in the same way that HTML user agents handle attribute values expected to contain URIs. Signature fn:escape-html-uri ( $uri  as  xs:string? )  as  xs:string Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $uri is the empty ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],"local-name-from-QName":[{doc:"<p>Returns the local part of the supplied QName. Signature fn:local-name-from-QName ( $arg  as  xs:QName? )  as  xs:NCName? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence the function returns the empty sequence. ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"timezone-from-time":[{doc:"<p>Returns the timezone component of an xs:time . Signature fn:timezone-from-time ( $arg  as  xs:time? )  as  xs:dayTimeDuration? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty seq...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"seconds-from-dateTime":[{doc:"<p>Returns the seconds component of an xs:dateTime . Signature fn:seconds-from-dateTime ( $arg  as  xs:dateTime? )  as  xs:decimal? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty s...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"node-name":[{doc:"<p>Returns the name of a node, as an xs:QName . Signatures fn:node-name ()  as  xs:QName? fn:node-name ( $arg  as  node()? )  as  xs:QName? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this function ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the name of a node, as an xs:QName . Signatures fn:node-name ()  as  xs:QName? fn:node-name ( $arg  as  node()? )  as  xs:QName? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this function ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"map-pairs":[{doc:"<p>Applies the function item $f to successive pairs of items taken one from $seq1 and one from $seq2 , returning the concatenation of the resulting sequences in order. Signature fn:map-pairs ( $f  as  function(item(), item()) as item()* , $seq1  as  item()* , $seq2  as  item()* )  as  item()* Propertie...</p>",docUrl:"http://www.28msec.com/modules/",params:["$f","$seq1","$seq2"]}],"lower-case":[{doc:"<p>Converts a string to lower case. Signature fn:lower-case ( $arg  as  xs:string? )  as  xs:string Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If the value of $arg is the empty sequence, the zero-length string is returned. Otherwise, the ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],exists:[{doc:"<p>Returns true if the argument is a non-empty sequence. Signature fn:exists ( $arg  as  item()* )  as  xs:boolean Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If the value of $arg is a non-empty sequence, the function returns true ; otherw...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"seconds-from-duration":[{doc:"<p>Returns the number of seconds in a duration. Signature fn:seconds-from-duration ( $arg  as  xs:duration? )  as  xs:decimal? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequen...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"format-time":[{doc:"<p>Returns a string containing an xs:time value formatted for display. Signatures fn:format-time ( $value  as  xs:time? , $picture  as  xs:string )  as  xs:string? fn:format-time ( $value  as  xs:time? , $picture  as  xs:string , $language  as  xs:string? , $calendar  as  xs:string? , $place  as  xs:st...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture"]},{doc:"<p>Returns a string containing an xs:time value formatted for display. Signatures fn:format-time ( $value  as  xs:time? , $picture  as  xs:string )  as  xs:string? fn:format-time ( $value  as  xs:time? , $picture  as  xs:string , $language  as  xs:string? , $calendar  as  xs:string? , $place  as  xs:st...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture","$language","$calendar","$place"]}],"namespace-uri-from-QName":[{doc:"<p>Returns the namespace URI part of the supplied QName. Signature fn:namespace-uri-from-QName ( $arg  as  xs:QName? )  as  xs:anyURI? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence the function returns the empty...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"iri-to-uri":[{doc:"<p>Converts a string containing an IRI into a URI according to the rules of [RFC 3987] . Signature fn:iri-to-uri ( $iri  as  xs:string? )  as  xs:string Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $iri is the empty sequence, the functio...</p>",docUrl:"http://www.28msec.com/modules/",params:["$iri"]}],"substring-after":[{doc:"<p>Returns the part of $arg1 that follows the first occurrence of $arg2 , taking collations into account. Signatures fn:substring-after ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:string fn:substring-after ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]},{doc:"<p>Returns the part of $arg1 that follows the first occurrence of $arg2 , taking collations into account. Signatures fn:substring-after ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:string fn:substring-after ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2","$collation"]}],idref:[{doc:"<p>Returns the sequence of element or attribute nodes with an IDREF value matching the value of one or more of the ID values supplied in $arg . Signatures fn:idref ( $arg  as  xs:string* )  as  node()* fn:idref ( $arg  as  xs:string* , $node  as  node() )  as  node()* Properties The one-argument form o...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns the sequence of element or attribute nodes with an IDREF value matching the value of one or more of the ID values supplied in $arg . Signatures fn:idref ( $arg  as  xs:string* )  as  node()* fn:idref ( $arg  as  xs:string* , $node  as  node() )  as  node()* Properties The one-argument form o...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$node"]}],data:[{doc:"<p>Returns the result of atomizing a sequence, that is, replacing all nodes in the sequence by their typed values. Signatures fn:data ()  as  xs:anyAtomicType* fn:data ( $arg  as  item()* )  as  xs:anyAtomicType* Properties The zero-argument form of this function is · deterministic · , · context-depend...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the result of atomizing a sequence, that is, replacing all nodes in the sequence by their typed values. Signatures fn:data ()  as  xs:anyAtomicType* fn:data ( $arg  as  item()* )  as  xs:anyAtomicType* Properties The zero-argument form of this function is · deterministic · , · context-depend...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],innermost:[{doc:"<p>Returns every node within the input sequence that is not an ancestor of another member of the input sequence; the nodes are returned in document order with duplicates eliminated. Signature fn:innermost ( $nodes  as  node()* )  as  node()* Properties This function is · deterministic · , · context-ind...</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],head:[{doc:"<p>Returns the first item in a sequence. Signature fn:head ( $arg  as  item()* )  as  item()? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns the value of the expression $arg[1] Notes If $arg is the empty sequence, the emp...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"unparsed-text":[{doc:"<p>The fn:unparsed-text function reads an external resource (for example, a file) and returns its contents as a string. Signatures fn:unparsed-text ( $href  as  xs:string? )  as  xs:string? fn:unparsed-text ( $href  as  xs:string? , $encoding  as  xs:string )  as  xs:string? Properties This function is...</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]},{doc:"<p>The fn:unparsed-text function reads an external resource (for example, a file) and returns its contents as a string. Signatures fn:unparsed-text ( $href  as  xs:string? )  as  xs:string? fn:unparsed-text ( $href  as  xs:string? , $encoding  as  xs:string )  as  xs:string? Properties This function is...</p>",docUrl:"http://www.28msec.com/modules/",params:["$href","$encoding"]}],collection:[{doc:"<p>Returns a sequence of nodes representing a collection of documents indentified by a collection URI; or a default collection if no URI is supplied. Signatures fn:collection ()  as  node()* fn:collection ( $arg  as  xs:string? )  as  node()* Properties This function is · deterministic · , · context-de...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns a sequence of nodes representing a collection of documents indentified by a collection URI; or a default collection if no URI is supplied. Signatures fn:collection ()  as  node()* fn:collection ( $arg  as  xs:string? )  as  node()* Properties This function is · deterministic · , · context-de...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],not:[{doc:"<p>Returns true if the effective boolean value of $arg is false , or false if it is true . Signature fn:not ( $arg  as  item()* )  as  xs:boolean Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The value of $arg is first reduced to an effectiv...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],QName:[{doc:"<p>Constructs an xs:QName value given a namespace URI and a lexical QName. Signature fn:QName ( $paramURI  as  xs:string? , $paramQName  as  xs:string )  as  xs:QName Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The namespace URI in the ret...</p>",docUrl:"http://www.28msec.com/modules/",params:["$paramURI","$paramQName"]}],"year-from-date":[{doc:"<p>Returns the year component of an xs:date . Signature fn:year-from-date ( $arg  as  xs:date? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. Otherwise...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],root:[{doc:"<p>Returns the root of the tree to which $arg belongs. This will usually, but not necessarily, be a document node. Signatures fn:root ()  as  node() fn:root ( $arg  as  node()? )  as  node()? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-d...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the root of the tree to which $arg belongs. This will usually, but not necessarily, be a document node. Signatures fn:root ()  as  node() fn:root ( $arg  as  node()? )  as  node()? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-d...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],filter:[{doc:"<p>Returns those items from the sequence $seq for which the supplied function $f returns true. Signature fn:filter ( $f  as  function(item()) as xs:boolean , $seq  as  item()* )  as  item()* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$f","$seq"]}],"fold-right":[{doc:"<p>Processes the supplied sequence from right to left, applying the supplied function repeatedly to each item in turn, together with an accumulated result value. Signature fn:fold-right ( $f  as  function(item(), item()*) as item()* , $zero  as  item()* , $seq  as  item()* )  as  item()* Properties Thi...</p>",docUrl:"http://www.28msec.com/modules/",params:["$f","$zero","$seq"]}],"insert-before":[{doc:"<p>Returns a sequence constructed by inserting an item or a sequence of items at a given position within an existing sequence. Signature fn:insert-before ( $target  as  item()* , $position  as  xs:integer , $inserts  as  item()* )  as  item()* Properties This function is · deterministic · , · context-i...</p>",docUrl:"http://www.28msec.com/modules/",params:["$target","$position","$inserts"]}],"timezone-from-date":[{doc:"<p>Returns the timezone component of an xs:date . Signature fn:timezone-from-date ( $arg  as  xs:date? )  as  xs:dayTimeDuration? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty seq...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"fold-left":[{doc:"<p>Processes the supplied sequence from left to right, applying the supplied function repeatedly to each item in turn, together with an accumulated result value. Signature fn:fold-left ( $f  as  function(item()*, item()) as item()* , $zero  as  item()* , $seq  as  item()* )  as  item()* Properties This...</p>",docUrl:"http://www.28msec.com/modules/",params:["$f","$zero","$seq"]}],"days-from-duration":[{doc:"<p>Returns the number of days in a duration. Signature fn:days-from-duration ( $arg  as  xs:duration? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. Ot...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],error:[{doc:"<p>Calling the fn:error function raises an application-defined error. Signatures fn:error ()  as  none fn:error ( $code  as  xs:QName )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string , $error-object  as  ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Calling the fn:error function raises an application-defined error. Signatures fn:error ()  as  none fn:error ( $code  as  xs:QName )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string , $error-object  as  ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$code"]},{doc:"<p>Calling the fn:error function raises an application-defined error. Signatures fn:error ()  as  none fn:error ( $code  as  xs:QName )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string , $error-object  as  ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$code","$description"]},{doc:"<p>Calling the fn:error function raises an application-defined error. Signatures fn:error ()  as  none fn:error ( $code  as  xs:QName )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string )  as  none fn:error ( $code  as  xs:QName? , $description  as  xs:string , $error-object  as  ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$code","$description","$error-object"]}],"format-date":[{doc:"<p>Returns a string containing an xs:date value formatted for display. Signatures fn:format-date ( $value  as  xs:date? , $picture  as  xs:string )  as  xs:string? fn:format-date ( $value  as  xs:date? , $picture  as  xs:string , $language  as  xs:string? , $calendar  as  xs:string? , $place  as  xs:st...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture"]},{doc:"<p>Returns a string containing an xs:date value formatted for display. Signatures fn:format-date ( $value  as  xs:date? , $picture  as  xs:string )  as  xs:string? fn:format-date ( $value  as  xs:date? , $picture  as  xs:string , $language  as  xs:string? , $calendar  as  xs:string? , $place  as  xs:st...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture","$language","$calendar","$place"]}],replace:[{doc:"<p>Returns a string produced from the input string by replacing any substrings that match a given regular expression with a supplied replacement string. Signatures fn:replace ( $input  as  xs:string? , $pattern  as  xs:string , $replacement  as  xs:string )  as  xs:string fn:replace ( $input  as  xs:st...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern","$replacement"]},{doc:"<p>Returns a string produced from the input string by replacing any substrings that match a given regular expression with a supplied replacement string. Signatures fn:replace ( $input  as  xs:string? , $pattern  as  xs:string , $replacement  as  xs:string )  as  xs:string fn:replace ( $input  as  xs:st...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern","$replacement","$flags"]}],substring:[{doc:"<p>Returns the portion of the value of $sourceString beginning at the position indicated by the value of $start and continuing for the number of · characters · indicated by the value of $length . Signatures fn:substring ( $sourceString  as  xs:string? , $start  as  xs:double )  as  xs:string fn:substri...</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceString","$start"]},{doc:"<p>Returns the portion of the value of $sourceString beginning at the position indicated by the value of $start and continuing for the number of · characters · indicated by the value of $length . Signatures fn:substring ( $sourceString  as  xs:string? , $start  as  xs:double )  as  xs:string fn:substri...</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceString","$start","$length"]}],"environment-variable":[{doc:"<p>Returns the value of a system environment variable, if it exists. Signature fn:environment-variable ( $name  as  xs:string )  as  xs:string? Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on environment-variables. Rules The set of avail...</p>",docUrl:"http://www.28msec.com/modules/",params:["$name"]}],"available-environment-variables":[{doc:"<p>Returns a list of environment variable names that are suitable for passing to fn:environment-variable , as a (possibly empty) sequence of strings. Signature fn:available-environment-variables ()  as  xs:string* Properties This function is · deterministic · , · context-dependent · , and · focus-indep...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],tail:[{doc:"<p>Returns all but the first item in a sequence. Signature fn:tail ( $arg  as  item()* )  as  item()* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns the value of the expression subsequence($arg, 2) Notes If $arg is the em...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],outermost:[{doc:"<p>Returns every node within the input sequence that has no ancestor that is itself a member of the input sequence; the nodes are returned in document order with duplicates eliminated. Signature fn:outermost ( $nodes  as  node()* )  as  node()* Properties This function is · deterministic · , · context-...</p>",docUrl:"http://www.28msec.com/modules/",params:["$nodes"]}],"upper-case":[{doc:"<p>Converts a string to upper case. Signature fn:upper-case ( $arg  as  xs:string? )  as  xs:string Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If the value of $arg is the empty sequence, the zero-length string is returned. Otherwise, the ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"minutes-from-time":[{doc:"<p>Returns the minutes component of an xs:time . Signature fn:minutes-from-time ( $arg  as  xs:time? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. Oth...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"doc-available":[{doc:"<p>The function returns true if and only if the function call fn:doc($uri) would return a document node. Signature fn:doc-available ( $uri  as  xs:string? )  as  xs:boolean Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on collations. Rule...</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],"starts-with":[{doc:"<p>Returns true if the string $arg1 contains $arg2 as a leading substring, taking collations into account. Signatures fn:starts-with ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:boolean fn:starts-with ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  xs:boo...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]},{doc:"<p>Returns true if the string $arg1 contains $arg2 as a leading substring, taking collations into account. Signatures fn:starts-with ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:boolean fn:starts-with ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  xs:boo...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2","$collation"]}],"codepoints-to-string":[{doc:"<p>Creates an xs:string from a sequence of · codepoints · . Signature fn:codepoints-to-string ( $arg  as  xs:integer* )  as  xs:string Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns the string made up from the · character...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"ends-with":[{doc:"<p>Returns true if the string $arg1 contains $arg2 as a trailing substring, taking collations into account. Signatures fn:ends-with ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:boolean fn:ends-with ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  xs:boolea...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]},{doc:"<p>Returns true if the string $arg1 contains $arg2 as a trailing substring, taking collations into account. Signatures fn:ends-with ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:boolean fn:ends-with ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  xs:boolea...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2","$collation"]}],"resolve-uri":[{doc:"<p>Resolves a relative IRI reference against an absolute IRI. Signatures fn:resolve-uri ( $relative  as  xs:string? )  as  xs:anyURI? fn:resolve-uri ( $relative  as  xs:string? , $base  as  xs:string )  as  xs:anyURI? Properties The two-argument form of this function is · deterministic · , · context-de...</p>",docUrl:"http://www.28msec.com/modules/",params:["$relative"]},{doc:"<p>Resolves a relative IRI reference against an absolute IRI. Signatures fn:resolve-uri ( $relative  as  xs:string? )  as  xs:anyURI? fn:resolve-uri ( $relative  as  xs:string? , $base  as  xs:string )  as  xs:anyURI? Properties The two-argument form of this function is · deterministic · , · context-de...</p>",docUrl:"http://www.28msec.com/modules/",params:["$relative","$base"]}],tokenize:[{doc:"<p>Returns a sequence of strings constructed by splitting the input wherever a separator is found; the separator is any substring that matches a given regular expression. Signatures fn:tokenize ( $input  as  xs:string? , $pattern  as  xs:string )  as  xs:string* fn:tokenize ( $input  as  xs:string? , $...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern"]},{doc:"<p>Returns a sequence of strings constructed by splitting the input wherever a separator is found; the separator is any substring that matches a given regular expression. Signatures fn:tokenize ( $input  as  xs:string? , $pattern  as  xs:string )  as  xs:string* fn:tokenize ( $input  as  xs:string? , $...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern","$flags"]}],"base-uri":[{doc:"<p>Returns the base URI of a node. Signatures fn:base-uri ()  as  xs:anyURI? fn:base-uri ( $arg  as  node()? )  as  xs:anyURI? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this function is · determin...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the base URI of a node. Signatures fn:base-uri ()  as  xs:anyURI? fn:base-uri ( $arg  as  node()? )  as  xs:anyURI? Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this function is · determin...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],contains:[{doc:"<p>Returns true if the string $arg1 contains $arg2 as a substring, taking collations into account. Signatures fn:contains ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:boolean fn:contains ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  xs:boolean Propertie...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]},{doc:"<p>Returns true if the string $arg1 contains $arg2 as a substring, taking collations into account. Signatures fn:contains ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:boolean fn:contains ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  as  xs:boolean Propertie...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2","$collation"]}],"codepoint-equal":[{doc:"<p>Returns true if two strings are equal, considered codepoint-by-codepoint. Signature fn:codepoint-equal ( $comparand1  as  xs:string? , $comparand2  as  xs:string? )  as  xs:boolean? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If either ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$comparand1","$comparand2"]}],"string-join":[{doc:"<p>Returns a string created by concatenating the items in a sequence, with a defined separator between adjacent items. Signatures fn:string-join ( $arg1  as  xs:string* )  as  xs:string fn:string-join ( $arg1  as  xs:string* , $arg2  as  xs:string )  as  xs:string Properties This function is · determin...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1"]},{doc:"<p>Returns a string created by concatenating the items in a sequence, with a defined separator between adjacent items. Signatures fn:string-join ( $arg1  as  xs:string* )  as  xs:string fn:string-join ( $arg1  as  xs:string* , $arg2  as  xs:string )  as  xs:string Properties This function is · determin...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"current-dateTime":[{doc:"<p>Returns the current date and time (with timezone). Signature fn:current-dateTime ()  as  xs:dateTimeStamp Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on implicit-timezone. Rules Returns the current dateTime (with timezone) from the d...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"exactly-one":[{doc:"<p>Returns $arg if it contains exactly one item. Otherwise, raises an error. Signature fn:exactly-one ( $arg  as  item()* )  as  item() Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules Except in error cases, the function returns $arg unchanged....</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"index-of":[{doc:"<p>Returns a sequence of positive integers giving the positions within the sequence $seq of items that are equal to $search . Signatures fn:index-of ( $seq  as  xs:anyAtomicType* , $search  as  xs:anyAtomicType )  as  xs:integer* fn:index-of ( $seq  as  xs:anyAtomicType* , $search  as  xs:anyAtomicType...</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq","$search"]},{doc:"<p>Returns a sequence of positive integers giving the positions within the sequence $seq of items that are equal to $search . Signatures fn:index-of ( $seq  as  xs:anyAtomicType* , $search  as  xs:anyAtomicType )  as  xs:integer* fn:index-of ( $seq  as  xs:anyAtomicType* , $search  as  xs:anyAtomicType...</p>",docUrl:"http://www.28msec.com/modules/",params:["$seq","$search","$collation"]}],ceiling:[{doc:"<p>Rounds $arg upwards to a whole number. Signature fn:ceiling ( $arg  as  numeric? )  as  numeric? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules General rules: see 4.4 Functions on numeric values . The function returns the smallest (closest...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"format-number":[{doc:"<p>Returns a string containing a number formatted according to a given picture string, taking account of decimal formats specified in the static context. Signatures fn:format-number ( $value  as  numeric? , $picture  as  xs:string )  as  xs:string fn:format-number ( $value  as  numeric? , $picture  as ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture"]},{doc:"<p>Returns a string containing a number formatted according to a given picture string, taking account of decimal formats specified in the static context. Signatures fn:format-number ( $value  as  numeric? , $picture  as  xs:string )  as  xs:string fn:format-number ( $value  as  numeric? , $picture  as ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture","$decimal-format-name"]}],"has-children":[{doc:"<p>Returns true if the supplied node has one or more child nodes (of any kind). Signatures fn:has-children ()  as  xs:boolean fn:has-children ( $node  as  node()? )  as  xs:boolean Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns true if the supplied node has one or more child nodes (of any kind). Signatures fn:has-children ()  as  xs:boolean fn:has-children ( $node  as  node()? )  as  xs:boolean Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$node"]}],position:[{doc:"<p>Returns the context position from the dynamic context. Signature fn:position ()  as  xs:integer Properties This function is · deterministic · , · context-dependent · , and · focus-dependent · . Rules Returns the context position from the dynamic context. (See Section C.2 Dynamic Context Components X...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],concat:[{doc:\'<p>Returns the concatenation of the string values of the arguments. Operator Mapping The two-argument form of this function defines the semantics of the "||" operator. Signature fn:concat ( $arg1  as  xs:anyAtomicType? , $arg2  as  xs:anyAtomicType? , ... )  as  xs:string Properties This function is · ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"one-or-more":[{doc:"<p>Returns $arg if it contains one or more items. Otherwise, raises an error. Signature fn:one-or-more ( $arg  as  item()* )  as  item()+ Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules Except in error cases, the function returns $arg unchange...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"minutes-from-dateTime":[{doc:"<p>Returns the minute component of an xs:dateTime . Signature fn:minutes-from-dateTime ( $arg  as  xs:dateTime? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty se...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"format-integer":[{doc:"<p>Formats an integer according to a given picture string, using the conventions of a given natural language if specified. Signatures fn:format-integer ( $value  as  xs:integer? , $picture  as  xs:string )  as  xs:string fn:format-integer ( $value  as  xs:integer? , $picture  as  xs:string , $language ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture"]},{doc:"<p>Formats an integer according to a given picture string, using the conventions of a given natural language if specified. Signatures fn:format-integer ( $value  as  xs:integer? , $picture  as  xs:string )  as  xs:string fn:format-integer ( $value  as  xs:integer? , $picture  as  xs:string , $language ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture","$language"]}],compare:[{doc:"<p>Returns -1, 0, or 1, depending on whether $comparand1 collates before, equal to, or after $comparand2 according to the rules of a selected collation. Signatures fn:compare ( $comparand1  as  xs:string? , $comparand2  as  xs:string? )  as  xs:integer? fn:compare ( $comparand1  as  xs:string? , $compa...</p>",docUrl:"http://www.28msec.com/modules/",params:["$comparand1","$comparand2"]},{doc:"<p>Returns -1, 0, or 1, depending on whether $comparand1 collates before, equal to, or after $comparand2 according to the rules of a selected collation. Signatures fn:compare ( $comparand1  as  xs:string? , $comparand2  as  xs:string? )  as  xs:integer? fn:compare ( $comparand1  as  xs:string? , $compa...</p>",docUrl:"http://www.28msec.com/modules/",params:["$comparand1","$comparand2","$collation"]}],"false":[{doc:\'<p>Returns the xs:boolean value false . Signature fn:false ()  as  xs:boolean Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The result is equivalent to xs:boolean("0") . Examples The expression fn:false() returns xs:boolean(0) .</p>\',docUrl:"http://www.28msec.com/modules/",params:[]}],"string-to-codepoints":[{doc:"<p>Returns the sequence of · codepoints · that constitute an xs:string value. Signature fn:string-to-codepoints ( $arg  as  xs:string? )  as  xs:integer* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns a sequence of intege...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"implicit-timezone":[{doc:"<p>Returns the value of the implicit timezone property from the dynamic context. Signature fn:implicit-timezone ()  as  xs:dayTimeDuration Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on implicit-timezone. Rules Returns the value of the ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],doc:[{doc:"<p>Retrieves a document using a URI supplied as an xs:string , and returns the corresponding document node. Signature fn:doc ( $uri  as  xs:string? )  as  document-node()? Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on available-documen...</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri"]}],"function-arity":[{doc:"<p>Returns the arity of the function identified by a function item. Signature fn:function-arity ( $func  as  function(*) )  as  xs:integer Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The fn:function-arity function returns the arity (number...</p>",docUrl:"http://www.28msec.com/modules/",params:["$func"]}],"minutes-from-duration":[{doc:"<p>Returns the number of minutes in a duration. Signature fn:minutes-from-duration ( $arg  as  xs:duration? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequen...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],avg:[{doc:"<p>Returns the average of the values in the input sequence $arg , that is, the sum of the values divided by the number of values. Signature fn:avg ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType? Properties This function is · deterministic · , · context-independent · , and · focus-independent · ....</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],unordered:[{doc:"<p>Returns the items of $sourceSeq in an · implementation dependent · order. Signature fn:unordered ( $sourceSeq  as  item()* )  as  item()* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns the items of $sourceSeq in an · i...</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceSeq"]}],"day-from-date":[{doc:"<p>Returns the day component of an xs:date . Signature fn:day-from-date ( $arg  as  xs:date? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. Otherwise, ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"seconds-from-time":[{doc:"<p>Returns the seconds component of an xs:time . Signature fn:seconds-from-time ( $arg  as  xs:time? )  as  xs:decimal? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. Oth...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"round-half-to-even":[{doc:"<p>Rounds a value to a specified number of decimal places, rounding to make the last digit even if two such values are equally near. Signatures fn:round-half-to-even ( $arg  as  numeric? )  as  numeric? fn:round-half-to-even ( $arg  as  numeric? , $precision  as  xs:integer )  as  numeric? Properties T...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Rounds a value to a specified number of decimal places, rounding to make the last digit even if two such values are equally near. Signatures fn:round-half-to-even ( $arg  as  numeric? )  as  numeric? fn:round-half-to-even ( $arg  as  numeric? , $precision  as  xs:integer )  as  numeric? Properties T...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$precision"]}],"current-time":[{doc:"<p>Returns the current time. Signature fn:current-time ()  as  xs:time Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on implicit-timezone. Rules Returns xs:time(fn:current-dateTime()) . This is an xs:time (with timezone) that is current a...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}],"generate-id":[{doc:"<p>This function returns a string that uniquely identifies a given node. Signatures fn:generate-id ()  as  xs:string fn:generate-id ( $arg  as  node()? )  as  xs:string Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-ar...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>This function returns a string that uniquely identifies a given node. Signatures fn:generate-id ()  as  xs:string fn:generate-id ( $arg  as  node()? )  as  xs:string Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-ar...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"uri-collection":[{doc:"<p>Returns a sequence of xs:anyURI values representing the document URIs of the documents in a collection. Signatures fn:uri-collection ()  as  xs:anyURI* fn:uri-collection ( $arg  as  xs:string? )  as  xs:anyURI* Properties This function is · deterministic · , · context-dependent · , and · focus-indep...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns a sequence of xs:anyURI values representing the document URIs of the documents in a collection. Signatures fn:uri-collection ()  as  xs:anyURI* fn:uri-collection ( $arg  as  xs:string? )  as  xs:anyURI* Properties This function is · deterministic · , · context-dependent · , and · focus-indep...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"analyze-string":[{doc:"<p>Analyzes a string using a regular expression, returning an XML structure that identifies which parts of the input string matched or failed to match the regular expression, and in the case of matched substrings, which substrings matched each capturing group in the regular expression. Signatures fn:an...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern"]},{doc:"<p>Analyzes a string using a regular expression, returning an XML structure that identifies which parts of the input string matched or failed to match the regular expression, and in the case of matched substrings, which substrings matched each capturing group in the regular expression. Signatures fn:an...</p>",docUrl:"http://www.28msec.com/modules/",params:["$input","$pattern","$flags"]}],"resolve-QName":[{doc:\'<p>Returns an xs:QName value (that is, an expanded-QName) by taking an xs:string that has the lexical form of an xs:QName (a string in the form "prefix:local-name" or "local-name") and resolving it using the in-scope namespaces for a given element. Signature fn:resolve-QName ( $qname  as  xs:string? , ...</p>\',docUrl:"http://www.28msec.com/modules/",params:["$qname","$element"]}],floor:[{doc:"<p>Rounds $arg downwards to a whole number. Signature fn:floor ( $arg  as  numeric? )  as  numeric? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules General rules: see 4.4 Functions on numeric values . The function returns the largest (closest ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"deep-equal":[{doc:"<p>This function assesses whether two sequences are deep-equal to each other. To be deep-equal, they must contain items that are pairwise deep-equal; and for two items to be deep-equal, they must either be atomic values that compare equal, or nodes of the same kind, with the same name, whose children a...</p>",docUrl:"http://www.28msec.com/modules/",params:["$parameter1","$parameter2"]},{doc:"<p>This function assesses whether two sequences are deep-equal to each other. To be deep-equal, they must contain items that are pairwise deep-equal; and for two items to be deep-equal, they must either be atomic values that compare equal, or nodes of the same kind, with the same name, whose children a...</p>",docUrl:"http://www.28msec.com/modules/",params:["$parameter1","$parameter2","$collation"]}],serialize:[{doc:"<p>This function serializes the supplied input sequence $arg as described in [XSLT and XQuery Serialization 3.0] , returning the serialized representation of the sequence as a string. Signatures fn:serialize ( $arg  as  item()* )  as  xs:string fn:serialize ( $arg  as  item()* , $params  as  element(ou...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>This function serializes the supplied input sequence $arg as described in [XSLT and XQuery Serialization 3.0] , returning the serialized representation of the sequence as a string. Signatures fn:serialize ( $arg  as  item()* )  as  xs:string fn:serialize ( $arg  as  item()* , $params  as  element(ou...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$params"]}],"element-with-id":[{doc:"<p>Returns the sequence of element nodes that have an ID value matching the value of one or more of the IDREF values supplied in $arg . Signatures fn:element-with-id ( $arg  as  xs:string* )  as  element()* fn:element-with-id ( $arg  as  xs:string* , $node  as  node() )  as  element()* Properties The o...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns the sequence of element nodes that have an ID value matching the value of one or more of the IDREF values supplied in $arg . Signatures fn:element-with-id ( $arg  as  xs:string* )  as  element()* fn:element-with-id ( $arg  as  xs:string* , $node  as  node() )  as  element()* Properties The o...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$node"]}],"parse-xml":[{doc:"<p>This function takes as input an XML document represented as a string, and returns the document node at the root of an XDM tree representing the parsed document. Signature fn:parse-xml ( $arg  as  xs:string? )  as  document-node(element(*)) Properties This function is · nondeterministic · , · context...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>This function takes as input an XML document represented as a string, and returns the document node at the root of an XDM tree representing the parsed document. Signature fn:parse-xml ( $arg  as  xs:string? )  as  document-node(element(*)) Properties This function is · nondeterministic · , · context...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$baseURI"]}],map:[{doc:"<p>Applies the function item $f to every item from the sequence $seq in turn, returning the concatenation of the resulting sequences in order. Signature fn:map ( $f  as  function(item()) as item()* , $seq  as  item()* )  as  item()* Properties This function is · deterministic · , · context-independent ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$f","$seq"]}],max:[{doc:"<p>Returns a value that is equal to the highest value appearing in the input sequence. Signatures fn:max ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType? fn:max ( $arg  as  xs:anyAtomicType* , $collation  as  xs:string )  as  xs:anyAtomicType? Properties This function is · deterministic · , · con...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns a value that is equal to the highest value appearing in the input sequence. Signatures fn:max ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType? fn:max ( $arg  as  xs:anyAtomicType* , $collation  as  xs:string )  as  xs:anyAtomicType? Properties This function is · deterministic · , · con...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$collation"]}],trace:[{doc:"<p>Provides an execution trace intended to be used in debugging queries. Signature fn:trace ( $value  as  item()* , $label  as  xs:string )  as  item()* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns the value of $value ,...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$label"]}],"in-scope-prefixes":[{doc:"<p>Returns the prefixes of the in-scope namespaces for an element node. Signature fn:in-scope-prefixes ( $element  as  element() )  as  xs:string* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The function returns a sequence of strings repre...</p>",docUrl:"http://www.28msec.com/modules/",params:["$element"]}],sum:[{doc:"<p>Returns a value obtained by adding together the values in $arg . Signatures fn:sum ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType fn:sum ( $arg  as  xs:anyAtomicType* , $zero  as  xs:anyAtomicType? )  as  xs:anyAtomicType? Properties This function is · deterministic · , · context-independent ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Returns a value obtained by adding together the values in $arg . Signatures fn:sum ( $arg  as  xs:anyAtomicType* )  as  xs:anyAtomicType fn:sum ( $arg  as  xs:anyAtomicType* , $zero  as  xs:anyAtomicType? )  as  xs:anyAtomicType? Properties This function is · deterministic · , · context-independent ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$zero"]}],"substring-before":[{doc:"<p>Returns the part of $arg1 that precedes the first occurrence of $arg2 , taking collations into account. Signatures fn:substring-before ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:string fn:substring-before ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  a...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]},{doc:"<p>Returns the part of $arg1 that precedes the first occurrence of $arg2 , taking collations into account. Signatures fn:substring-before ( $arg1  as  xs:string? , $arg2  as  xs:string? )  as  xs:string fn:substring-before ( $arg1  as  xs:string? , $arg2  as  xs:string? , $collation  as  xs:string )  a...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2","$collation"]}],lang:[{doc:"<p>This function tests whether the language of $node , or the context item if the second argument is omitted, as specified by xml:lang attributes is the same as, or is a sublanguage of, the language specified by $testlang . Signatures fn:lang ( $testlang  as  xs:string? )  as  xs:boolean fn:lang ( $tes...</p>",docUrl:"http://www.28msec.com/modules/",params:["$testlang"]},{doc:"<p>This function tests whether the language of $node , or the context item if the second argument is omitted, as specified by xml:lang attributes is the same as, or is a sublanguage of, the language specified by $testlang . Signatures fn:lang ( $testlang  as  xs:string? )  as  xs:boolean fn:lang ( $tes...</p>",docUrl:"http://www.28msec.com/modules/",params:["$testlang","$node"]}],dateTime:[{doc:"<p>Returns an xs:dateTime value created by combining an xs:date and an xs:time . Signature fn:dateTime ( $arg1  as  xs:date? , $arg2  as  xs:time? )  as  xs:dateTime? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If either $arg1 or $arg2 is ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg1","$arg2"]}],"zero-or-one":[{doc:"<p>Returns $arg if it contains zero or one items. Otherwise, raises an error. Signature fn:zero-or-one ( $arg  as  item()* )  as  item()? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules Except in error cases, the function returns $arg unchange...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"adjust-date-to-timezone":[{doc:"<p>Adjusts an xs:date value to a specific timezone, or to no timezone at all; the result is the date in the target timezone that contains the starting instant of the supplied date. Signatures fn:adjust-date-to-timezone ( $arg  as  xs:date? )  as  xs:date? fn:adjust-date-to-timezone ( $arg  as  xs:date?...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Adjusts an xs:date value to a specific timezone, or to no timezone at all; the result is the date in the target timezone that contains the starting instant of the supplied date. Signatures fn:adjust-date-to-timezone ( $arg  as  xs:date? )  as  xs:date? fn:adjust-date-to-timezone ( $arg  as  xs:date?...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$timezone"]}],"true":[{doc:\'<p>Returns the xs:boolean value true . Signature fn:true ()  as  xs:boolean Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The result is equivalent to xs:boolean("1") . Examples The expression fn:true() returns xs:boolean(1) .</p>\',docUrl:"http://www.28msec.com/modules/",params:[]}],round:[{doc:"<p>Rounds a value to a specified number of decimal places, rounding upwards if two such values are equally near. Signatures fn:round ( $arg  as  numeric? )  as  numeric? fn:round ( $arg  as  numeric? , $precision  as  xs:integer )  as  numeric? Properties This function is · deterministic · , · context-...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]},{doc:"<p>Rounds a value to a specified number of decimal places, rounding upwards if two such values are equally near. Signatures fn:round ( $arg  as  numeric? )  as  numeric? fn:round ( $arg  as  numeric? , $precision  as  xs:integer )  as  numeric? Properties This function is · deterministic · , · context-...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$precision"]}],string:[{doc:"<p>Returns the value of $arg represented as an xs:string . Signatures fn:string ()  as  xs:string fn:string ( $arg  as  item()? )  as  xs:string Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this func...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the value of $arg represented as an xs:string . Signatures fn:string ()  as  xs:string fn:string ( $arg  as  item()? )  as  xs:string Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . The one-argument form of this func...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"format-dateTime":[{doc:"<p>Returns a string containing an xs:dateTime value formatted for display. Signatures fn:format-dateTime ( $value  as  xs:dateTime? , $picture  as  xs:string )  as  xs:string? fn:format-dateTime ( $value  as  xs:dateTime? , $picture  as  xs:string , $language  as  xs:string? , $calendar  as  xs:string?...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture"]},{doc:"<p>Returns a string containing an xs:dateTime value formatted for display. Signatures fn:format-dateTime ( $value  as  xs:dateTime? , $picture  as  xs:string )  as  xs:string? fn:format-dateTime ( $value  as  xs:dateTime? , $picture  as  xs:string , $language  as  xs:string? , $calendar  as  xs:string?...</p>",docUrl:"http://www.28msec.com/modules/",params:["$value","$picture","$language","$calendar","$place"]}],"hours-from-duration":[{doc:"<p>Returns the number of hours in a duration. Signature fn:hours-from-duration ( $arg  as  xs:duration? )  as  xs:integer? Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $arg is the empty sequence, the function returns the empty sequence. ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"namespace-uri-for-prefix":[{doc:"<p>Returns the namespace URI of one of the in-scope namespaces for $element , identified by its namespace prefix. Signature fn:namespace-uri-for-prefix ( $prefix  as  xs:string? , $element  as  element() )  as  xs:anyURI? Properties This function is · deterministic · , · context-independent · , and · f...</p>",docUrl:"http://www.28msec.com/modules/",params:["$prefix","$element"]}],remove:[{doc:"<p>Returns a new sequence containing all the items of $target except the item at position $position . Signature fn:remove ( $target  as  item()* , $position  as  xs:integer )  as  item()* Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules The fun...</p>",docUrl:"http://www.28msec.com/modules/",params:["$target","$position"]}],subsequence:[{doc:"<p>Returns the contiguous sequence of items in the value of $sourceSeq beginning at the position indicated by the value of $startingLoc and continuing for the number of items indicated by the value of $length . Signatures fn:subsequence ( $sourceSeq  as  item()* , $startingLoc  as  xs:double )  as  ite...</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceSeq","$startingLoc"]},{doc:"<p>Returns the contiguous sequence of items in the value of $sourceSeq beginning at the position indicated by the value of $startingLoc and continuing for the number of items indicated by the value of $length . Signatures fn:subsequence ( $sourceSeq  as  item()* , $startingLoc  as  xs:double )  as  ite...</p>",docUrl:"http://www.28msec.com/modules/",params:["$sourceSeq","$startingLoc","$length"]}],translate:[{doc:"<p>Returns the value of $arg modified by replacing or removing individual characters. Signature fn:translate ( $arg  as  xs:string? , $mapString  as  xs:string , $transString  as  xs:string )  as  xs:string Properties This function is · deterministic · , · context-independent · , and · focus-independen...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg","$mapString","$transString"]}],"unparsed-text-available":[{doc:"<p>Because errors in evaluating the fn:unparsed-text function are non-recoverable, these two functions are provided to allow an application to determine whether a call with particular arguments would succeed. Signatures fn:unparsed-text-available ( $href  as  xs:string? )  as  xs:boolean fn:unparsed-te...</p>",docUrl:"http://www.28msec.com/modules/",params:["$href"]},{doc:"<p>Because errors in evaluating the fn:unparsed-text function are non-recoverable, these two functions are provided to allow an application to determine whether a call with particular arguments would succeed. Signatures fn:unparsed-text-available ( $href  as  xs:string? )  as  xs:boolean fn:unparsed-te...</p>",docUrl:"http://www.28msec.com/modules/",params:["$href","$encoding"]}],"encode-for-uri":[{doc:"<p>Encodes reserved characters in a string that is intended to be used in the path segment of a URI. Signature fn:encode-for-uri ( $uri-part  as  xs:string? )  as  xs:string Properties This function is · deterministic · , · context-independent · , and · focus-independent · . Rules If $uri-part is the e...</p>",docUrl:"http://www.28msec.com/modules/",params:["$uri-part"]}],"namespace-uri":[{doc:"<p>Returns the namespace URI part of the name of $arg , as an xs:anyURI value. Signatures fn:namespace-uri ()  as  xs:anyURI fn:namespace-uri ( $arg  as  node()? )  as  xs:anyURI Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]},{doc:"<p>Returns the namespace URI part of the name of $arg , as an xs:anyURI value. Signatures fn:namespace-uri ()  as  xs:anyURI fn:namespace-uri ( $arg  as  node()? )  as  xs:anyURI Properties The zero-argument form of this function is · deterministic · , · context-dependent · , and · focus-dependent · . ...</p>",docUrl:"http://www.28msec.com/modules/",params:["$arg"]}],"static-base-uri":[{doc:"<p>Despite its name, this function returns the value of the Dynamic Base URI property from the dynamic context. Signature fn:static-base-uri ()  as  xs:anyURI? Properties This function is · deterministic · , · context-dependent · , and · focus-independent · . It depends on base-uri. Rules The function ...</p>",docUrl:"http://www.28msec.com/modules/",params:[]}]}},"http://www.w3.org/2005/xqt-errors":{doc:"<p>This module contains one declaration of a variable for each error of the http://www.w3.org/2005/xqt-errors namespace. The variables serves as documentation for the errors but can also be used in the code. For example, one useful scenario is to compare an error caught in the catch clause of a try-cat...</p>",docUrl:"http://www.28msec.com/modules/",functions:{}},"http://28.io/lib/twitter":{doc:"<p>Binding for the Twitter search API.</p>",docUrl:"http://www.28msec.com/modules/",functions:{search:[{doc:"<p>Returns relevant tweets that match a specified query.</p>",docUrl:"http://www.28msec.com/modules/",params:["$search-term"]}]}}}}}}),define("xquery-worker",["require","exports","module","ext/codecomplete/complete_util","xquery_completion.js","ext/language/base_handler","lib/XQueryParser.js","lib/Compiler.js","lib/utils.js","XQueryResolver.js","refactoring","lib/XQueryBuiltin.js"],function(e,t,n){var r=e("ext/codecomplete/complete_util"),i=e("xquery_completion.js"),s=e("ext/language/base_handler"),o=e("lib/XQueryParser.js").XQueryParser,u=e("lib/Compiler.js").Compiler,a=e("lib/utils.js").Utils,f=e("XQueryResolver.js").XQueryResolver,l=e("refactoring").Refactoring,c=e("lib/XQueryBuiltin.js").XQueryBuiltin,h=n.exports=Object.create(s),p=null,d=null,v=[];h.init=function(e){h.sender.on("updateFileCache",function(e){v=e.data.split("\\n")}),e()},h.handlesLanguage=function(e){return e==="xquery"},h.parse=function(e,t){var n=new u,r=n.compile(e);t(r)},h.isParsingSupported=function(){return!0},h.findNode=function(e,t,n){n(a.findNode(e,t))},h.getPos=function(e,t){t(e.pos)},h.analyze=function(e,t,n){if(p===null){var r=new c;p=r.getBuiltin();if(!p)throw"Failed to init builtin @analyze"}n(h.analyzeSync(e,t,p))},h.analyzeSync=function(e,t,n){var r=t.markers,i=t.error;return r},h.getResolutions=function(e,t,n,r){var i=new f(e,t);n.forEach(function(e){e.resolutions=i.getResolutions(e,p)}),r(n)},h.hasResolution=function(e,t,n){var r=new f(e,t);return n.resolutions&&n.resolutions.length||r.getType(n)},h.outline=function(e,t,n){if(!t)return n();n({body:t.outline})},h.complete=function(e,t,n,s,o){if(p===null){var u=new c;p=u.getBuiltin();if(!p)throw"Failed to init builtin @complete"}if(d===null){var a=r.fetchText(this.staticPrefix,"ext/xquery/lib/schemas.json");d=JSON.parse(a)}var f=e.getLine(n.row);if(s!==undefined&&s.name==="URILiteral"&&s.getParent&&s.getParent.name==="SchemaImport"){var l=s.getParent,h=0;for(var m=0;m<l.children.length;m++){var g=l.children[m];g.pos.sl===s.pos.sl&&g.pos.sc===s.pos.sc&&g.pos.el===s.pos.el&&g.pos.ec===s.pos.ec?h>0?o(i.completePath(f,n,v)):o(i.completeSchemaURI(f,n,d)):g.name==="URILiteral"&&h++}}else if(s!==undefined&&s.name==="URILiteral"&&s.getParent){var l=s.getParent,h=0;for(var m=0;m<l.children.length;m++){var g=l.children[m];g.pos.sl===s.pos.sl&&g.pos.sc===s.pos.sc&&g.pos.el===s.pos.el&&g.pos.ec===s.pos.ec?h>0?o(i.completePath(f,n,v)):o(i.completeURI(f,n,p)):g.name==="URILiteral"&&h++}}else o(i.completeExpr(f,n,p,t))},h.codeFormat=function(e,t){},h.onCursorMovedNode=function(e,t,n,r,i){if(!t||!r)return i();var s=[],o=[];if(l.isNodePrefix(r,n)||l.isNSDecl(r,n)){o.push("renameVariable");var u=l.isNSDecl(r,n)?r.value:r.value.substring(0,r.value.indexOf(":")),f=l.findPrefixDeclaration(u,t),c=l.findPrefixReferences(u,t);f!==undefined&&s.push({pos:f,type:"occurrence_main"});for(var h=0;h<c.length;h++){var p=c[h];s.push({pos:p,type:"occurrence_other"})}}else if(l.isFunctionDecl(r)||l.isFunctionCall(r)){o.push("renameVariable");var d=l.getFunctionDeclarationsAndReferences(t,r.value,r.getParent.arity),v=d.declaration,m=d.references;v!==null&&s.push({pos:v,type:"occurrence_main"});for(var h=0;h<m.length;h++){var g=m[h];s.push({pos:g,type:"occurrence_other"})}}else if(l.isTagName(r)){o.push("renameVariable");var y=l.getTags(r.getParent);y.close&&s.push({pos:y.close,type:"occurrence_other"}),y.open&&s.push({pos:y.open,type:"occurrence_main"})}else if(l.isVariable(r)){o.push("renameVariable");var b=r.value,w=t.sctx,E=a.findNode(w,{line:n.row,col:n.column}),S=E.getVarRefs(b)||[];for(var h=0;h<S.length;h++){var x=S[h];s.push({pos:x.pos,type:"occurrence_other"})}var T=E.getVarDecl(b);T&&s.push({pos:T.pos,type:"occurrence_main"})}i({markers:s,enableRefactorings:o})},h.getVariablePositions=function(e,t,n,r,i){if(!t||!r)return i();if(l.isNodePrefix(r,n)||l.isNSDecl(r,n)){var s=l.isNSDecl(r,n),o=s?r.value:r.value.substring(0,r.value.indexOf(":")),u=s?r.pos:l.findPrefixDeclaration(o,t),f=l.findPrefixReferences(o,t),c=[],h=[];u!==undefined&&c.push({row:u.sl,column:u.sc});for(var p=0;p<f.length;p++){var d=f[p];h.push({row:d.sl,column:d.sc})}i({length:s?r.pos.ec-r.pos.sc:r.value.indexOf(":"),pos:{row:r.pos.sl,column:r.pos.sc},others:c.concat(h),declarations:c,uses:h})}else if(l.isFunctionDecl(r)||l.isFunctionCall(r)){var v=l.getFunctionDeclarationsAndReferences(t,r.value,r.getParent.arity),m=v.declaration,g=v.references,c=[];m!==null&&c.push({row:m.sl,column:m.sc});var h=[];for(var p=0;p<g.length;p++){var y=g[p];h.push({row:y.sl,column:y.sc})}i({length:r.pos.ec-r.pos.sc,pos:{row:r.pos.sl,column:r.pos.sc},others:c.concat(h),declarations:c,uses:h})}else if(l.isTagName(r)){var b=l.getTags(r.getParent),c=[],h=[];b.open!==undefined&&c.push({row:b.open.sl,column:b.open.sc}),b.close!==undefined&&h.push({row:b.close.sl,column:b.close.sc}),i({length:r.pos.ec-r.pos.sc,pos:{row:r.pos.sl,column:r.pos.sc},others:c.concat(h),declarations:c,uses:h})}else if(l.isVariable(r)){var w=r.value,E=t.sctx,S=a.findNode(E,{line:n.row,col:n.column}),x=S.getVarRefs(w)||[],h=[];for(var p=0;p<x.length;p++){var T=x[p];h.push({row:T.pos.sl,column:T.pos.sc})}var N=S.getVarDecl(w),c=[];N&&c.push({row:N.pos.sl,column:N.pos.sc}),i({length:r.pos.ec-r.pos.sc,pos:{row:r.pos.sl,column:r.pos.sc},others:c.concat(h),declarations:c,uses:h})}}});\n' +'';});
